# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

name: $(Build.SourceVersion)
jobs:
- job: Kickoff
  displayName: "Kickoff"
  pool:
    vmImage: 'ubuntu-latest'

  steps:
  - script: ./scripts/set-short-commit-variable.sh
    name: shortCommitVariableStep

- job: CentOS
  displayName: 'Linux - CentOS - Docker Image'
  timeoutInMinutes: 0
  pool:
    vmImage: 'Ubuntu 16.04'

  variables:
    STAGING_DIRECTORY: $(Build.StagingDirectory)
    ESY__CACHE_INSTALL_PATH: /home/vsts/.esy/3_____________________________________________________________________/i
    ESY__CACHE_SOURCE_TARBALL_PATH: /home/vsts/.esy/source/i
    # ESY__NPM_ROOT: /opt/hostedtoolcache/node/8.14.0/x64/lib/node_modules/esy

  steps:
  - script: docker build -t centos scripts/docker/centos
    displayName: 'docker build'
  - script: docker run --rm --mount src=`pwd`,target=/oni2,type=bind centos /bin/bash -c 'which ragel'
  - script: docker run --rm --mount src=`pwd`,target=/oni2,type=bind centos /bin/bash -c 'cd oni2 && ls -a'
  - script: docker run --cap-add SYS_ADMIN --device /dev/fuse --security-opt apparmor:unconfined --rm --mount src=`pwd`,target=/oni2,type=bind centos /bin/bash -c 'cd oni2 && ./scripts/docker-build.sh'
  - script: _release/Onivim2.AppDir/usr/bin/Oni2 -f --checkhealth
    displayName: 'Release: --checkhealth'
  - template: .ci/publish-linux.yml
