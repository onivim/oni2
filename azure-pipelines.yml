# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

name: $(Build.SourceVersion)

# Master build triggers
trigger: 
- master

# PR Triggers
pr:
  autoCancel: true
  branches:
    include: 
    - master
  paths:
    exclude: 
    - README.md

jobs:
- job: Kickoff
  displayName: "Kickoff"
  pool:
    vmImage: 'ubuntu-latest'

  steps:
  - script: ./scripts/set-short-commit-variable.sh
    name: shortCommitVariableStep

- job: Hygiene_Checks
  displayName: 'Hygiene Checks'
  timeoutInMinutes: 0
  pool:
    vmImage: 'macOS 10.14'

  variables:
    STAGING_DIRECTORY: $(Build.StagingDirectory)
    ESY__CACHE_INSTALL_PATH: /Users/runner/.esy/3__________________________________________________________________/i
    ESY__CACHE_BUILD_PATH: /Users/runner/.esy/3__________________________________________________________________/b
    ESY__CACHE_SOURCE_TARBALL_PATH: /Users/runner/.esy/source/i
    MACOSX_DEPLOYMENT_TARGET: 10.12
    # ESY__NPM_ROOT: /usr/local/lib/node_modules/esy

  steps:
  - template: .ci/use-node.yml
  - script: brew update
  - script: brew install ragel
  - template: .ci/restore-build-cache.yml
  - template: .ci/swap-xcode.yml
  - template: .ci/js-build-steps.yml
  - template: .ci/esy-check-hygiene.yml
  - template: .ci/publish-build-cache.yml

- job: Linux
  displayName: 'Linux - Ubuntu 18.04'
  timeoutInMinutes: 90
  pool:
    vmImage: 'ubuntu-18.04'

  variables:
    STAGING_DIRECTORY: $(Build.StagingDirectory)
    ESY__CACHE_INSTALL_PATH: /home/vsts/.esy/3_____________________________________________________________________/i
    ESY__CACHE_BUILD_PATH: /home/vsts/.esy/3_____________________________________________________________________/b
    ESY__CACHE_SOURCE_TARBALL_PATH: /home/vsts/.esy/source/i
    # ESY__NPM_ROOT: /opt/hostedtoolcache/node/8.14.0/x64/lib/node_modules/esy

  steps:
  - template: .ci/clean-linux-deps.yml
  - template: .ci/restore-build-cache.yml
  - template: .ci/use-node.yml
  - script: sudo apt-get update
  - script: sudo apt-get install -y libncurses5-dev libacl1-dev libxrandr-dev libxinerama-dev libxcursor-dev libxi-dev libgl1-mesa-dev libglu1-mesa-dev mesa-utils mesa-utils-extra ragel libgtk-3-dev nasm
  - script: gcc --version
    displayName: "gcc version"
  - template: .ci/js-build-steps.yml
  - template: .ci/esy-build-steps.yml
  - template: .ci/run-integration-tests.yml
  - template: .ci/publish-build-cache.yml
