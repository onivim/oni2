{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"vscode\"","webpack:///../node_modules/vscode-languageserver-protocol/lib/main.js","webpack:///../node_modules/vscode-jsonrpc/lib/main.js","webpack:///../node_modules/vscode-languageclient/lib/utils/is.js","webpack:///../node_modules/vscode-languageclient/lib/client.js","webpack:///../node_modules/vscode-languageclient/lib/utils/uuid.js","webpack:///external \"path\"","webpack:///../node_modules/vscode-jsonrpc/lib/is.js","webpack:///../node_modules/vscode-jsonrpc/lib/events.js","webpack:///external \"fs\"","webpack:///../node_modules/vscode-jsonrpc/lib/messageReader.js","webpack:///../node_modules/vscode-jsonrpc/lib/messageWriter.js","webpack:///external \"child_process\"","webpack:///external \"net\"","webpack:///../node_modules/vscode-languageclient/lib/protocolCompletionItem.js","webpack:///../node_modules/vscode-languageclient/lib/protocolCodeLens.js","webpack:///../node_modules/vscode-languageclient/lib/protocolDocumentLink.js","webpack:///./src/cssMain.ts","webpack:///../node_modules/vscode-nls/lib/main.js","webpack:///../node_modules/vscode-languageclient/lib/main.js","webpack:///../node_modules/semver/semver.js","webpack:///../node_modules/vscode-jsonrpc/lib/messages.js","webpack:///../node_modules/vscode-jsonrpc/lib/cancellation.js","webpack:///../node_modules/vscode-jsonrpc/lib/linkedMap.js","webpack:///../node_modules/vscode-jsonrpc/lib/pipeSupport.js","webpack:///external \"os\"","webpack:///external \"crypto\"","webpack:///../node_modules/vscode-jsonrpc/lib/socketSupport.js","webpack:///../node_modules/vscode-languageserver-types/lib/esm/main.js","webpack:///../node_modules/vscode-languageserver-protocol/lib/protocol.js","webpack:///../node_modules/vscode-languageserver-protocol/lib/utils/is.js","webpack:///../node_modules/vscode-languageserver-protocol/lib/protocol.implementation.js","webpack:///../node_modules/vscode-languageserver-protocol/lib/protocol.typeDefinition.js","webpack:///../node_modules/vscode-languageserver-protocol/lib/protocol.workspaceFolders.js","webpack:///../node_modules/vscode-languageserver-protocol/lib/protocol.configuration.js","webpack:///../node_modules/vscode-languageserver-protocol/lib/protocol.colorProvider.js","webpack:///../node_modules/vscode-languageserver-protocol/lib/protocol.foldingRange.js","webpack:///../node_modules/vscode-languageserver-protocol/lib/protocol.declaration.js","webpack:///../node_modules/vscode-languageclient/lib/codeConverter.js","webpack:///../node_modules/vscode-languageclient/lib/protocolConverter.js","webpack:///../node_modules/vscode-languageclient/lib/utils/async.js","webpack:///../node_modules/vscode-languageclient/lib/colorProvider.js","webpack:///../node_modules/vscode-languageclient/lib/configuration.js","webpack:///../node_modules/vscode-languageclient/lib/implementation.js","webpack:///../node_modules/vscode-languageclient/lib/typeDefinition.js","webpack:///../node_modules/vscode-languageclient/lib/workspaceFolders.js","webpack:///../node_modules/vscode-languageclient/lib/foldingRange.js","webpack:///../node_modules/vscode-languageclient/lib/declaration.js","webpack:///../node_modules/vscode-languageclient/lib/utils/processes.js","webpack:///./src/customData.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","__export","vscode_jsonrpc_1","ErrorCodes","ResponseError","CancellationToken","CancellationTokenSource","Disposable","Event","Emitter","Trace","TraceFormat","SetTraceNotification","LogTraceNotification","RequestType","RequestType0","NotificationType","NotificationType0","MessageReader","MessageWriter","ConnectionStrategy","StreamMessageReader","StreamMessageWriter","IPCMessageReader","IPCMessageWriter","createClientPipeTransport","createServerPipeTransport","generateRandomPipeName","createClientSocketTransport","createServerSocketTransport","createProtocolConnection","reader","writer","logger","strategy","createMessageConnection","Is","messages_1","RequestType1","RequestType2","RequestType3","RequestType4","RequestType5","RequestType6","RequestType7","RequestType8","RequestType9","NotificationType1","NotificationType2","NotificationType3","NotificationType4","NotificationType5","NotificationType6","NotificationType7","NotificationType8","NotificationType9","messageReader_1","SocketMessageReader","messageWriter_1","SocketMessageWriter","events_1","cancellation_1","linkedMap_1","CancelNotification","ConnectionErrors","ConnectionState","type","NullLogger","freeze","error","warn","info","log","fromString","toLowerCase","Off","Messages","Verbose","toString","JSON","Text","ConnectionError","Error","[object Object]","code","message","super","this","setPrototypeOf","_createMessageConnection","messageReader","messageWriter","sequenceNumber","notificationSquenceNumber","unknownResponseSquenceNumber","version","timer","tracer","starRequestHandler","undefined","requestHandlers","starNotificationHandler","notificationHandlers","messageQueue","LinkedMap","responsePromises","requestTokens","trace","traceFormat","state","New","errorEmitter","closeEmitter","unhandledNotificationEmitter","disposeEmitter","createRequestQueueKey","id","addMessageToQueue","queue","isRequestMessage","set","isResponseMessage","createResponseQueueKey","cancelUndispatched","_message","isListening","Listening","isClosed","Closed","isDisposed","Disposed","closeHandler","fire","triggerMessageQueue","size","setImmediate","shift","requestMessage","reply","resultOrError","method","startTime","jsonrpc","toJson","result","traceSendingResponse","write","replyError","data","params","stringify","logLSPMessage","traceReceivedRequest","requestHandler","element","handler","Date","now","cancellationSource","tokenKey","String","handlerResult","promise","numberOfParams","token","array","then","string","InternalError","replySuccess","MethodNotFound","handleRequest","isNotificationMessage","notificationHandler","source","cancel","traceReceivedNotification","handleNotification","responseMessage","responsePromise","timerStart","traceReceivedResponse","reject","resolve","handleResponse","number","responseHandler","handleInvalidMessage","processMessageQueue","onClose","onError","callback","toCancel","response","delete","lspMessage","isLSPMessage","timestamp","throwIfClosedOrDisposed","undefinedToNull","param","computeMessageParams","length","push","connection","sendNotification","messageParams","notificationMessage","traceSendingNotification","onNotification","func","sendRequest","throwIfNotListening","is","last","slice","map","Promise","traceSendingRequest","e","MessageWriteError","onCancellationRequested","onRequest","_value","_tracer","sendNotificationOrTraceOptions","_sendNotification","_traceFormat","boolean","event","onUnhandledNotification","onDispose","dispose","keys","forEach","listen","AlreadyListening","throwIfListening","inspect","console","verbose","candidate","input","output","read","isMessageReader","end","isMessageWriter","Array","isArray","Number","stringArray","every","elem","typedArray","check","thenable","vscode_1","vscode_languageserver_protocol_1","c2p","p2c","async_1","UUID","ConsoleLogger","ErrorAction","CloseAction","RevealOutputChannelOn","State","ClientState","DefaultErrorHandler","restarts","_error","count","Continue","Shutdown","Restart","window","showErrorMessage","DoNotRestart","SupportedSymbolKinds","SymbolKind","File","Module","Namespace","Package","Class","Method","Property","Field","Constructor","Enum","Interface","Function","Variable","Constant","Boolean","Key","Null","EnumMember","Struct","Operator","TypeParameter","SupportedCompletionItemKinds","CompletionItemKind","Unit","Value","Keyword","Snippet","Color","Reference","Folder","ensure","target","DynamicFeature","register","unregister","messages","DocumentNotifiactions","_client","_event","_type","_middleware","_createParams","_selectorFilter","_selectors","Map","selectors","textDocument","selector","languages","match","registerOptions","documentSelector","_listener","values","notificationSent","_data","clear","DidOpenTextDocumentFeature","client","_syncedDocuments","workspace","onDidOpenTextDocument","DidOpenTextDocumentNotification","clientOptions","middleware","didOpen","code2ProtocolConverter","asOpenTextDocumentParams","textDocumentFilter","capabilities","dynamicRegistration","textDocumentSyncOptions","resolvedTextDocumentSync","openClose","generateUuid","textDocuments","uri","has","DidCloseTextDocumentFeature","onDidCloseTextDocument","DidCloseTextDocumentNotification","didClose","asCloseTextDocumentParams","DidChangeTextDocumentFeature","_changeData","_forcingDelivery","DidChangeTextDocumentNotification","change","TextDocumentSyncKind","None","assign","syncKind","onDidChangeTextDocument","contentChanges","changeData","document","Incremental","asChangeTextDocumentParams","didChange","Full","_changeDelayer","forceDelivery","delayer","trigger","Delayer","WillSaveFeature","onWillSaveTextDocument","WillSaveTextDocumentNotification","willSave","willSaveEvent","asWillSaveTextDocumentParams","WillSaveWaitUntilFeature","WillSaveTextDocumentWaitUntilRequest","willSaveWaitUntil","edits","vEdits","protocol2CodeConverter","asTextEdits","waitUntil","DidSaveTextDocumentFeature","onDidSaveTextDocument","DidSaveTextDocumentNotification","didSave","asSaveTextDocumentParams","_includeText","save","includeText","FileSystemWatcherFeature","_notifyFileEvent","_watchers","DidChangeWatchedFilesNotification","_capabilities","_documentSelector","_method","watchers","disposeables","watcher","globPattern","watchCreate","watchChange","watchDelete","kind","WatchKind","Create","Change","Delete","fileSystemWatcher","createFileSystemWatcher","hookListeners","fileSystemWatchers","listeners","onDidCreate","resource","asUri","FileChangeType","Created","onDidChange","Changed","onDidDelete","Deleted","disposable","TextDocumentFeature","_providers","provider","registerLanguageProvider","WorkspaceFeature","CompletionItemFeature","CompletionRequest","capabilites","completion","contextSupport","completionItem","snippetSupport","commitCharactersSupport","documentationFormat","MarkupKind","Markdown","PlainText","deprecatedSupport","preselectSupport","completionItemKind","valueSet","completionProvider","options","triggerCharacters","provideCompletionItems","position","context","asCompletionParams","asCompletionResult","logFailedRequest","resolveCompletionItem","item","CompletionResolveRequest","asCompletionItem","registerCompletionItemProvider","provideCompletionItem","resolveProvider","HoverFeature","HoverRequest","hoverCapability","contentFormat","hoverProvider","provideHover","asTextDocumentPositionParams","asHover","registerHoverProvider","SignatureHelpFeature","SignatureHelpRequest","config","signatureInformation","parameterInformation","labelOffsetSupport","signatureHelpProvider","providerSignatureHelp","asSignatureHelp","registerSignatureHelpProvider","provideSignatureHelp","DefinitionFeature","DefinitionRequest","definitionSupport","linkSupport","definitionProvider","provideDefinition","asDefinitionResult","registerDefinitionProvider","ReferencesFeature","ReferencesRequest","referencesProvider","providerReferences","asReferenceParams","asReferences","registerReferenceProvider","provideReferences","DocumentHighlightFeature","DocumentHighlightRequest","documentHighlightProvider","provideDocumentHighlights","asDocumentHighlights","registerDocumentHighlightProvider","DocumentSymbolFeature","DocumentSymbolRequest","symbolCapabilities","symbolKind","hierarchicalDocumentSymbolSupport","documentSymbolProvider","provideDocumentSymbols","asDocumentSymbolParams","DocumentSymbol","asDocumentSymbols","asSymbolInformations","registerDocumentSymbolProvider","WorkspaceSymbolFeature","WorkspaceSymbolRequest","workspaceSymbolProvider","_options","provideWorkspaceSymbols","query","registerWorkspaceSymbolProvider","CodeActionFeature","CodeActionRequest","cap","codeActionLiteralSupport","codeActionKind","CodeActionKind","QuickFix","Refactor","RefactorExtract","RefactorInline","RefactorRewrite","Source","SourceOrganizeImports","codeActionProvider","codeActionKinds","provideCodeActions","range","asTextDocumentIdentifier","asRange","asCodeActionContext","Command","asCommand","asCodeAction","registerCodeActionsProvider","providedCodeActionKinds","asCodeActionKinds","CodeLensFeature","CodeLensRequest","codeLensProvider","provideCodeLenses","asCodeLensParams","asCodeLenses","resolveCodeLens","codeLens","CodeLensResolveRequest","asCodeLens","registerCodeLensProvider","DocumentFormattingFeature","DocumentFormattingRequest","documentFormattingProvider","provideDocumentFormattingEdits","asFormattingOptions","registerDocumentFormattingEditProvider","DocumentRangeFormattingFeature","DocumentRangeFormattingRequest","documentRangeFormattingProvider","provideDocumentRangeFormattingEdits","registerDocumentRangeFormattingEditProvider","DocumentOnTypeFormattingFeature","DocumentOnTypeFormattingRequest","documentOnTypeFormattingProvider","moreTriggerCharacter","provideOnTypeFormattingEdits","ch","asPosition","registerOnTypeFormattingEditProvider","firstTriggerCharacter","RenameFeature","RenameRequest","rename","prepareSupport","renameProvider","prepareProvider","provideRenameEdits","newName","asWorkspaceEdit","prepareRename","PrepareRenameRequest","Range","placeholder","registerRenameProvider","DocumentLinkFeature","DocumentLinkRequest","documentLinkProvider","provideDocumentLinks","asDocumentLinkParams","asDocumentLinks","resolveDocumentLink","link","DocumentLinkResolveRequest","asDocumentLink","registerDocumentLinkProvider","ConfigurationFeature","_listeners","DidChangeConfigurationNotification","section","synchronize","configurationSection","onDidChangeConfiguration","sections","some","affectsConfiguration","didChangeConfiguration","settings","extractSettingsInformation","getMiddleware","ensurePath","path","current","obj","workspaceFolder","index","indexOf","getConfiguration","substr","split","ExecuteCommandFeature","_commands","ExecuteCommandRequest","executeCommandProvider","commands","command","registerCommand","args","arguments","MessageTransports","OnReady","_resolve","_reject","_used","isUsed","BaseLanguageClient","_features","_method2Message","_dynamicFeatures","_id","_name","_clientOptions","diagnosticCollectionName","outputChannelName","revealOutputChannelOn","stdioEncoding","initializationOptions","initializationFailedHandler","errorHandler","uriConverters","Initial","_connectionPromise","_resolvedConnection","_initializeResult","outputChannel","_outputChannel","_disposeOutputChannel","_diagnostics","_fileEvents","_fileEventDelayer","_onReady","_onReadyCallbacks","_onStop","_telemetryEmitter","_stateChangeEmitter","messageOrDataObject","logTrace","logObjectTrace","_c2p","createConverter","code2Protocol","_p2c","protocol2Code","registerBuiltinFeatures","_state","oldState","getPublicState","newState","Running","Starting","Stopped","initializeResult","isConnectionActive","forceDocumentSync","onTelemetry","onDidChangeState","createOutputChannel","diagnostics","_trace","onReady","resolveConnection","responseError","stack","appendLine","toLocaleTimeString","data2String","Info","show","Warn","append","Stopping","createDiagnosticCollection","onLogMessage","MessageType","Warning","onShowMessage","showWarningMessage","showInformationMessage","ShowMessageRequest","messageFunc","actions","initialize","StartFailed","needsStop","stop","createConnection","refreshTrace","initOption","rootPath","fsPath","_clientGetRootPath","initParams","processId","process","pid","rootUri","Uri","file","computeClientCapabilities","workspaceFolders","fillInitializeParams","textDocumentSync","onDiagnostics","handleDiagnostics","RegistrationRequest","handleRegistrationRequest","UnregistrationRequest","handleUnregistrationRequest","ApplyWorkspaceEditRequest","handleApplyWorkspaceEdit","InitializedNotification","hookFileEvents","hookConfigurationChanged","initializeFeatures","retry","title","folders","folder","scheme","cleanUp","shutdown","exit","channel","listener","didChangeWatchedFiles","changes","asDiagnostics","setDiagnostics","handleConnectionError","handleConnectionClosed","createMessageTransports","transports","defaultTraceOptions","InitializeRequest","ShutdownRequest","ExitNotification","LogMessageNotification","ShowMessageNotification","TelemetryEventNotification","didOpenTextDocument","didChangeTextDocument","didCloseTextDocument","didSaveTextDocument","PublishDiagnosticsNotification","action","closed","start","traceConfig","_connection","fileEvents","registerRaw","features","feature","registerFeature","notifyFileEvent","applyEdit","workspaceEdit","documentChanges","resourceOperations","ResourceOperationKind","Rename","failureHandling","FailureHandlingKind","TextOnlyTransactional","relatedInformation","fillClientCapabilities","registration","registrations","unregistration","unregisterations","edit","openTextDocuments","versionMismatch","TextDocumentEdit","applied","RequestCancelled","ValueUUID","other","asHex","V4UUID","_randomHex","_oneOf","_timeHighBits","join","Math","floor","random","_chars","v4","empty","_UUIDPattern","isUUID","test","parse","_disposable","CallbackList","bucket","_callbacks","_contexts","remove","foundCallbackWithDifferentContext","len","splice","ret","callbacks","contexts","apply","thisArgs","disposables","onFirstListenerAdd","isEmpty","add","_noop","onLastListenerRemove","invoke","DefaultSize","CR","Buffer","from","LF","CRLF","MessageBuffer","encoding","buffer","allocUnsafe","chunk","toAppend","str","bufferLen","byteLength","copy","newSize","ceil","concat","header","trim","nextStart","numberOfBytes","onPartialMessage","AbstractMessageReader","partialMessageEmitter","asError","readable","_partialMessageTimeout","partialMessageTimeout","timeout","nextMessageLength","messageToken","partialMessageTimer","on","onData","fireError","fireClose","headers","tryReadHeaders","contentLength","parseInt","isNaN","msg","tryReadContent","setPartialMessageTimer","clearPartialMessageTimer","json","clearTimeout","setTimeout","firePartialMessage","waitingTime","eventEmitter","socket","ContentLength","AbstractMessageWriter","writable","errorCount","sending","doWriteMessage","send","handleError","default","CompletionItem","label","CodeLens","DocumentLink","fs","localize","loadMessageBundle","__dirname","vscode_languageclient_1","customData_1","activate","serverMain","location","readFileSync","readJSONFile","asAbsolutePath","main","serverModule","serverOptions","run","transport","TransportKind","ipc","debug","execArgv","dataPaths","getCustomDataPathsInAllWorkspaces","getCustomDataPathsFromAllExtensions","LanguageClient","registerProposedFeatures","subscriptions","indentationRules","increaseIndentPattern","decreaseIndentPattern","setLanguageConfiguration","wordPattern","regionCompletionRegExpr","doc","pos","lineUntilPos","getText","Position","line","beginProposal","TextEdit","replace","insertText","SnippetString","documentation","filterText","sortText","endProposal","initCompletionProvider","registerSelectionRangeProvider","positions","rawResult","rawSelectionRanges","reduceRight","parent","selectionRange","documentVersion","textEditor","activeTextEditor","mutator","newText","success","MessageFormat","LocalizeInfo","resolvedBundles","isPseudo","isDefined","isString","readJsonFileSync","filename","format","rest","arg","replaced","createScopedLocalizeFunction","_i","isNumber","cacheBundle","bundle","loadNlsBundleOrCreateFromI18n","bundlePath","cacheRoot","hash","useMemoryOnly","writeBundle","flag","utimes","touch","err","SyntaxError","unlink","metaDataPath","languagePackLocation","translationsConfig","languagePack","contents","metaData","module_2","entry","translations","outDir","resultMessages","messageKey","translatedMessage","createNLSBundle","writeFileSync","loadDefaultNlsBundle","module_1","createDefaultNlsBundle","loadNlsBundle","languagePackSupport","languagePackId","translationsConfigFile","root","locale","existsSync","lastIndexOf","substring","findInTheBoxBundle","ext","extname","messageFormat","both","headerFile","dirname","tryFindMetaDataHeaderFile","nlsBundle","module_3","resolvedLanguage","cacheLanguageResolution","resolveLanguage","comment","env","VSCODE_NLS_CONFIG","vscodeOptions","isBoolean","_languagePackSupport","_cacheRoot","_languagePackId","_translationsConfigFile","_corruptedFile","writeFile","_a","initializeSettings","opts","cp","SemVer","client_1","colorProvider_1","configuration_1","implementation_1","typeDefinition_1","workspaceFolders_1","foldingRange_1","declaration_1","processes_1","REQUIRED_VSCODE_VERSION","Executable","Transport","NodeModule","StreamInfo","ChildProcessInfo","ProposedFeatures","isSocket","port","detached","arg1","arg2","arg3","arg4","arg5","forceDebug","_serverOptions","_forceDebug","checkVersion","codeVersion","prerelease","satisfies","_serverProcess","toCheck","_isDetached","checkProcessDied","childProcess","kill","terminate","server","stderr","stdout","stdin","runDebug","v8debug","startedInDebugMode","_getServerWorkingDir","serverWorkingDir","node","stdio","runtime","pipeName","pipe","cwd","silent","sp","fork","onConnected","protocol","execOptions","getEnvironment","serverProcess","spawn","registerFeatures","createAll","TypeDefinitionFeature","ImplementationFeature","ColorProviderFeature","WorkspaceFoldersFeature","FoldingRangeFeature","DeclarationFeature","_mainGetRootPath","lstat","stats","isDirectory","SettingMonitor","_setting","primary","enabled","needsStart","NODE_DEBUG","unshift","SEMVER_SPEC_VERSION","MAX_LENGTH","MAX_SAFE_INTEGER","re","src","R","NUMERICIDENTIFIER","NUMERICIDENTIFIERLOOSE","NONNUMERICIDENTIFIER","MAINVERSION","MAINVERSIONLOOSE","PRERELEASEIDENTIFIER","PRERELEASEIDENTIFIERLOOSE","PRERELEASE","PRERELEASELOOSE","BUILDIDENTIFIER","BUILD","FULL","FULLPLAIN","LOOSEPLAIN","LOOSE","GTLT","XRANGEIDENTIFIERLOOSE","XRANGEIDENTIFIER","XRANGEPLAIN","XRANGEPLAINLOOSE","XRANGE","XRANGELOOSE","COERCE","LONETILDE","TILDETRIM","RegExp","TILDE","TILDELOOSE","LONECARET","CARETTRIM","CARET","CARETLOOSE","COMPARATORLOOSE","COMPARATOR","COMPARATORTRIM","HYPHENRANGE","HYPHENRANGELOOSE","STAR","loose","er","TypeError","raw","major","minor","patch","num","build","valid","v","clean","compare","compareMain","comparePre","compareIdentifiers","a","b","inc","release","identifier","diff","version1","version2","eq","v1","v2","numeric","anum","bnum","gt","lt","neq","gte","lte","cmp","op","Comparator","comp","semver","ANY","operator","rcompareIdentifiers","compareLoose","rcompare","sort","list","rsort","parseRange","filter","isX","hyphenReplace","$0","fM","fm","fp","fpr","fb","to","tM","tm","tp","tpr","tb","testSet","allowed","outside","hilo","gtfn","ltefn","ltfn","ecomp","high","low","comparator","intersects","rangeTmp","sameDirectionIncreasing","sameDirectionDecreasing","sameSemVer","differentDirectionsInclusive","oppositeDirectionsLessThan","oppositeDirectionsGreaterThan","comps","hr","compRe","_","M","pr","charAt","replaceCaret","replaceCarets","replaceTilde","replaceTildes","gtlt","xM","xm","xp","anyX","replaceXRange","replaceXRanges","replaceStars","parseComparator","thisComparators","thisComparator","rangeComparators","rangeComparator","toComparators","maxSatisfying","versions","max","maxSV","rangeObj","minSatisfying","min","minSV","validRange","ltr","gtr","parsed","r1","r2","coerce","ParseError","InvalidRequest","InvalidParams","serverErrorStart","serverErrorEnd","ServerNotInitialized","UnknownErrorCode","MessageReadError","AbstractMessageType","_numberOfParams","isCancellationRequested","Cancelled","shortcutEvent","handle","MutableToken","_isCancelled","_emitter","_token","Touch","First","Last","_map","_head","_tail","_size","next","previous","addItemLast","addItemFirst","removeItem","callbackfn","thisArg","path_1","os_1","crypto_1","net_1","randomSuffix","randomBytes","platform","tmpdir","connectResolve","connected","createServer","close","removeListener","Location","LocationLink","ColorInformation","ColorPresentation","FoldingRangeKind","FoldingRange","DiagnosticRelatedInformation","DiagnosticSeverity","Diagnostic","CreateFile","RenameFile","DeleteFile","WorkspaceEdit","__webpack_exports__","TextDocumentSaveReason","character","objectLiteral","one","two","three","four","defined","targetUri","targetRange","targetSelectionRange","originSelectionRange","red","green","blue","alpha","color","textEdit","additionalTextEdits","startLine","endLine","startCharacter","endCharacter","Information","Hint","severity","insert","del","VersionedTextDocumentIdentifier","overwrite","ignoreIfExists","oldUri","newUri","recursive","ignoreIfNotExists","TextDocumentIdentifier","TextDocumentItem","MarkupContent","InsertTextFormat","CompletionList","MarkedString","Hover","ParameterInformation","SignatureInformation","DocumentHighlightKind","DocumentHighlight","SymbolInformation","TextEditChangeImpl","all","WorkspaceChange","_this","_textEditChanges","_workspaceEdit","textEditChange","configurable","getTextEditChange","textDocumentEdit","createFile","checkDocumentChanges","renameFile","deleteFile","languageId","text","items","isIncomplete","fromPlainText","plainText","language","parameters","Read","Write","containerName","CodeActionContext","CodeAction","FormattingOptions","detail","children","deprecated","only","commandOrEdit","tabSize","insertSpaces","TextDocument","EOL","content","FullTextDocument","lineCount","positionAt","offsetAt","applyEdits","sortedEdits","mergeSort","left","right","leftIdx","rightIdx","lastModifiedOffset","startOffset","endOffset","Manual","AfterDelay","FocusOut","_uri","_languageId","_version","_content","_lineOffsets","update","getLineOffsets","lineOffsets","isLineStart","offset","mid","lineOffset","nextLineOffset","protocol_implementation_1","ImplementationRequest","protocol_typeDefinition_1","TypeDefinitionRequest","protocol_workspaceFolders_1","WorkspaceFoldersRequest","DidChangeWorkspaceFoldersNotification","protocol_configuration_1","ConfigurationRequest","protocol_colorProvider_1","DocumentColorRequest","ColorPresentationRequest","protocol_foldingRange_1","FoldingRangeRequest","protocol_declaration_1","DeclarationRequest","DocumentFilter","pattern","Abort","Transactional","Undo","InitializeError","unknownProtocolVersion","Log","CompletionTriggerKind","Invoked","TriggerCharacter","TriggerForIncompleteCompletions","proto","protocolCompletionItem_1","protocolCodeLens_1","protocolDocumentLink_1","uriConverter","_uriConverter","asVersionedTextDocumentIdentifier","asWorkerPosition","asDiagnosticSeverity","asDiagnostic","asTextEdit","isTextDocument","isTextDocumentChangeEvent","rangeLength","includeContent","reason","asTextDocumentSaveReason","triggerKind","asTriggerKind","triggerCharacter","protocolItem","asDocumentation","insertTextFormat","fromEdit","fillPrimaryInsertText","original","asCompletionItemKind","originalItemKind","commitCharacters","preselect","includeDeclaration","ls","CodeBlock","diagnostic","asDiagnosticRelatedInformation","asRelatedInformation","information","asLocation","MarkdownString","asCompletionInsertText","itemKind","asSignatureInformations","asSignatureInformation","asParameterInformations","asParameterInformation","asLocationLink","asLocationResult","asDocumentHighlight","asDocumentHighlightKind","asSymbolKind","asSymbolInformation","asDocumentSymbol","child","kindMapping","asCodeActionKind","parts","Empty","part","asColor","asColorInformation","ci","asColorPresentation","presentation","asFoldingRangeKind","Comment","Imports","Region","asFoldingRange","hover","appendCodeblock","appendMarkdown","appendText","asHoverContent","SignatureHelp","activeSignature","activeParameter","signatures","asDeclarationResult","asCommands","asFoldingRanges","foldingRanges","asColorInformations","colorInformation","asColorPresentations","colorPresentations","defaultDelay","completionPromise","onSuccess","task","delay","cancelTimeout","colorProvider","implCapabilities","provideColorPresentations","requestParams","provideDocumentColors","registerColorProvider","configuration","scopeUri","implementationSupport","implementationProvider","provideImplementation","registerImplementationProvider","typeDefinitionSupport","typeDefinitionProvider","provideTypeDefinition","registerTypeDefinitionProvider","access","asProtocol","onDidChangeWorkspaceFolders","didChangeWorkspaceFolders","added","removed","capability","rangeLimit","lineFoldingOnly","foldingRangeProvider","provideFoldingRanges","registerFoldingRangeProvider","declarationSupport","declarationProvider","declCapabilities","provideDeclaration","registerDeclarationProvider","isWindows","isMacintosh","isLinux","execFileSync","cmd","spawnSync","wf","wfCSSConfig","workspaceFolderValue","experimental","customData","extension","extensions","contributes","packageJSON","css","rp","extensionPath"],"mappings":"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","file":"cssMain.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 17);\n","module.exports = require(\"vscode\");","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nfunction __export(m) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vscode_jsonrpc_1 = require(\"vscode-jsonrpc\");\r\nexports.ErrorCodes = vscode_jsonrpc_1.ErrorCodes;\r\nexports.ResponseError = vscode_jsonrpc_1.ResponseError;\r\nexports.CancellationToken = vscode_jsonrpc_1.CancellationToken;\r\nexports.CancellationTokenSource = vscode_jsonrpc_1.CancellationTokenSource;\r\nexports.Disposable = vscode_jsonrpc_1.Disposable;\r\nexports.Event = vscode_jsonrpc_1.Event;\r\nexports.Emitter = vscode_jsonrpc_1.Emitter;\r\nexports.Trace = vscode_jsonrpc_1.Trace;\r\nexports.TraceFormat = vscode_jsonrpc_1.TraceFormat;\r\nexports.SetTraceNotification = vscode_jsonrpc_1.SetTraceNotification;\r\nexports.LogTraceNotification = vscode_jsonrpc_1.LogTraceNotification;\r\nexports.RequestType = vscode_jsonrpc_1.RequestType;\r\nexports.RequestType0 = vscode_jsonrpc_1.RequestType0;\r\nexports.NotificationType = vscode_jsonrpc_1.NotificationType;\r\nexports.NotificationType0 = vscode_jsonrpc_1.NotificationType0;\r\nexports.MessageReader = vscode_jsonrpc_1.MessageReader;\r\nexports.MessageWriter = vscode_jsonrpc_1.MessageWriter;\r\nexports.ConnectionStrategy = vscode_jsonrpc_1.ConnectionStrategy;\r\nexports.StreamMessageReader = vscode_jsonrpc_1.StreamMessageReader;\r\nexports.StreamMessageWriter = vscode_jsonrpc_1.StreamMessageWriter;\r\nexports.IPCMessageReader = vscode_jsonrpc_1.IPCMessageReader;\r\nexports.IPCMessageWriter = vscode_jsonrpc_1.IPCMessageWriter;\r\nexports.createClientPipeTransport = vscode_jsonrpc_1.createClientPipeTransport;\r\nexports.createServerPipeTransport = vscode_jsonrpc_1.createServerPipeTransport;\r\nexports.generateRandomPipeName = vscode_jsonrpc_1.generateRandomPipeName;\r\nexports.createClientSocketTransport = vscode_jsonrpc_1.createClientSocketTransport;\r\nexports.createServerSocketTransport = vscode_jsonrpc_1.createServerSocketTransport;\r\n__export(require(\"vscode-languageserver-types\"));\r\n__export(require(\"./protocol\"));\r\nfunction createProtocolConnection(reader, writer, logger, strategy) {\r\n    return vscode_jsonrpc_1.createMessageConnection(reader, writer, logger, strategy);\r\n}\r\nexports.createProtocolConnection = createProtocolConnection;\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n/// <reference path=\"./thenable.ts\" />\r\n'use strict';\r\nfunction __export(m) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst Is = require(\"./is\");\r\nconst messages_1 = require(\"./messages\");\r\nexports.RequestType = messages_1.RequestType;\r\nexports.RequestType0 = messages_1.RequestType0;\r\nexports.RequestType1 = messages_1.RequestType1;\r\nexports.RequestType2 = messages_1.RequestType2;\r\nexports.RequestType3 = messages_1.RequestType3;\r\nexports.RequestType4 = messages_1.RequestType4;\r\nexports.RequestType5 = messages_1.RequestType5;\r\nexports.RequestType6 = messages_1.RequestType6;\r\nexports.RequestType7 = messages_1.RequestType7;\r\nexports.RequestType8 = messages_1.RequestType8;\r\nexports.RequestType9 = messages_1.RequestType9;\r\nexports.ResponseError = messages_1.ResponseError;\r\nexports.ErrorCodes = messages_1.ErrorCodes;\r\nexports.NotificationType = messages_1.NotificationType;\r\nexports.NotificationType0 = messages_1.NotificationType0;\r\nexports.NotificationType1 = messages_1.NotificationType1;\r\nexports.NotificationType2 = messages_1.NotificationType2;\r\nexports.NotificationType3 = messages_1.NotificationType3;\r\nexports.NotificationType4 = messages_1.NotificationType4;\r\nexports.NotificationType5 = messages_1.NotificationType5;\r\nexports.NotificationType6 = messages_1.NotificationType6;\r\nexports.NotificationType7 = messages_1.NotificationType7;\r\nexports.NotificationType8 = messages_1.NotificationType8;\r\nexports.NotificationType9 = messages_1.NotificationType9;\r\nconst messageReader_1 = require(\"./messageReader\");\r\nexports.MessageReader = messageReader_1.MessageReader;\r\nexports.StreamMessageReader = messageReader_1.StreamMessageReader;\r\nexports.IPCMessageReader = messageReader_1.IPCMessageReader;\r\nexports.SocketMessageReader = messageReader_1.SocketMessageReader;\r\nconst messageWriter_1 = require(\"./messageWriter\");\r\nexports.MessageWriter = messageWriter_1.MessageWriter;\r\nexports.StreamMessageWriter = messageWriter_1.StreamMessageWriter;\r\nexports.IPCMessageWriter = messageWriter_1.IPCMessageWriter;\r\nexports.SocketMessageWriter = messageWriter_1.SocketMessageWriter;\r\nconst events_1 = require(\"./events\");\r\nexports.Disposable = events_1.Disposable;\r\nexports.Event = events_1.Event;\r\nexports.Emitter = events_1.Emitter;\r\nconst cancellation_1 = require(\"./cancellation\");\r\nexports.CancellationTokenSource = cancellation_1.CancellationTokenSource;\r\nexports.CancellationToken = cancellation_1.CancellationToken;\r\nconst linkedMap_1 = require(\"./linkedMap\");\r\n__export(require(\"./pipeSupport\"));\r\n__export(require(\"./socketSupport\"));\r\nvar CancelNotification;\r\n(function (CancelNotification) {\r\n    CancelNotification.type = new messages_1.NotificationType('$/cancelRequest');\r\n})(CancelNotification || (CancelNotification = {}));\r\nexports.NullLogger = Object.freeze({\r\n    error: () => { },\r\n    warn: () => { },\r\n    info: () => { },\r\n    log: () => { }\r\n});\r\nvar Trace;\r\n(function (Trace) {\r\n    Trace[Trace[\"Off\"] = 0] = \"Off\";\r\n    Trace[Trace[\"Messages\"] = 1] = \"Messages\";\r\n    Trace[Trace[\"Verbose\"] = 2] = \"Verbose\";\r\n})(Trace = exports.Trace || (exports.Trace = {}));\r\n(function (Trace) {\r\n    function fromString(value) {\r\n        value = value.toLowerCase();\r\n        switch (value) {\r\n            case 'off':\r\n                return Trace.Off;\r\n            case 'messages':\r\n                return Trace.Messages;\r\n            case 'verbose':\r\n                return Trace.Verbose;\r\n            default:\r\n                return Trace.Off;\r\n        }\r\n    }\r\n    Trace.fromString = fromString;\r\n    function toString(value) {\r\n        switch (value) {\r\n            case Trace.Off:\r\n                return 'off';\r\n            case Trace.Messages:\r\n                return 'messages';\r\n            case Trace.Verbose:\r\n                return 'verbose';\r\n            default:\r\n                return 'off';\r\n        }\r\n    }\r\n    Trace.toString = toString;\r\n})(Trace = exports.Trace || (exports.Trace = {}));\r\nvar TraceFormat;\r\n(function (TraceFormat) {\r\n    TraceFormat[\"Text\"] = \"text\";\r\n    TraceFormat[\"JSON\"] = \"json\";\r\n})(TraceFormat = exports.TraceFormat || (exports.TraceFormat = {}));\r\n(function (TraceFormat) {\r\n    function fromString(value) {\r\n        value = value.toLowerCase();\r\n        if (value === 'json') {\r\n            return TraceFormat.JSON;\r\n        }\r\n        else {\r\n            return TraceFormat.Text;\r\n        }\r\n    }\r\n    TraceFormat.fromString = fromString;\r\n})(TraceFormat = exports.TraceFormat || (exports.TraceFormat = {}));\r\nvar SetTraceNotification;\r\n(function (SetTraceNotification) {\r\n    SetTraceNotification.type = new messages_1.NotificationType('$/setTraceNotification');\r\n})(SetTraceNotification = exports.SetTraceNotification || (exports.SetTraceNotification = {}));\r\nvar LogTraceNotification;\r\n(function (LogTraceNotification) {\r\n    LogTraceNotification.type = new messages_1.NotificationType('$/logTraceNotification');\r\n})(LogTraceNotification = exports.LogTraceNotification || (exports.LogTraceNotification = {}));\r\nvar ConnectionErrors;\r\n(function (ConnectionErrors) {\r\n    /**\r\n     * The connection is closed.\r\n     */\r\n    ConnectionErrors[ConnectionErrors[\"Closed\"] = 1] = \"Closed\";\r\n    /**\r\n     * The connection got disposed.\r\n     */\r\n    ConnectionErrors[ConnectionErrors[\"Disposed\"] = 2] = \"Disposed\";\r\n    /**\r\n     * The connection is already in listening mode.\r\n     */\r\n    ConnectionErrors[ConnectionErrors[\"AlreadyListening\"] = 3] = \"AlreadyListening\";\r\n})(ConnectionErrors = exports.ConnectionErrors || (exports.ConnectionErrors = {}));\r\nclass ConnectionError extends Error {\r\n    constructor(code, message) {\r\n        super(message);\r\n        this.code = code;\r\n        Object.setPrototypeOf(this, ConnectionError.prototype);\r\n    }\r\n}\r\nexports.ConnectionError = ConnectionError;\r\nvar ConnectionStrategy;\r\n(function (ConnectionStrategy) {\r\n    function is(value) {\r\n        let candidate = value;\r\n        return candidate && Is.func(candidate.cancelUndispatched);\r\n    }\r\n    ConnectionStrategy.is = is;\r\n})(ConnectionStrategy = exports.ConnectionStrategy || (exports.ConnectionStrategy = {}));\r\nvar ConnectionState;\r\n(function (ConnectionState) {\r\n    ConnectionState[ConnectionState[\"New\"] = 1] = \"New\";\r\n    ConnectionState[ConnectionState[\"Listening\"] = 2] = \"Listening\";\r\n    ConnectionState[ConnectionState[\"Closed\"] = 3] = \"Closed\";\r\n    ConnectionState[ConnectionState[\"Disposed\"] = 4] = \"Disposed\";\r\n})(ConnectionState || (ConnectionState = {}));\r\nfunction _createMessageConnection(messageReader, messageWriter, logger, strategy) {\r\n    let sequenceNumber = 0;\r\n    let notificationSquenceNumber = 0;\r\n    let unknownResponseSquenceNumber = 0;\r\n    const version = '2.0';\r\n    let starRequestHandler = undefined;\r\n    let requestHandlers = Object.create(null);\r\n    let starNotificationHandler = undefined;\r\n    let notificationHandlers = Object.create(null);\r\n    let timer;\r\n    let messageQueue = new linkedMap_1.LinkedMap();\r\n    let responsePromises = Object.create(null);\r\n    let requestTokens = Object.create(null);\r\n    let trace = Trace.Off;\r\n    let traceFormat = TraceFormat.Text;\r\n    let tracer;\r\n    let state = ConnectionState.New;\r\n    let errorEmitter = new events_1.Emitter();\r\n    let closeEmitter = new events_1.Emitter();\r\n    let unhandledNotificationEmitter = new events_1.Emitter();\r\n    let disposeEmitter = new events_1.Emitter();\r\n    function createRequestQueueKey(id) {\r\n        return 'req-' + id.toString();\r\n    }\r\n    function createResponseQueueKey(id) {\r\n        if (id === null) {\r\n            return 'res-unknown-' + (++unknownResponseSquenceNumber).toString();\r\n        }\r\n        else {\r\n            return 'res-' + id.toString();\r\n        }\r\n    }\r\n    function createNotificationQueueKey() {\r\n        return 'not-' + (++notificationSquenceNumber).toString();\r\n    }\r\n    function addMessageToQueue(queue, message) {\r\n        if (messages_1.isRequestMessage(message)) {\r\n            queue.set(createRequestQueueKey(message.id), message);\r\n        }\r\n        else if (messages_1.isResponseMessage(message)) {\r\n            queue.set(createResponseQueueKey(message.id), message);\r\n        }\r\n        else {\r\n            queue.set(createNotificationQueueKey(), message);\r\n        }\r\n    }\r\n    function cancelUndispatched(_message) {\r\n        return undefined;\r\n    }\r\n    function isListening() {\r\n        return state === ConnectionState.Listening;\r\n    }\r\n    function isClosed() {\r\n        return state === ConnectionState.Closed;\r\n    }\r\n    function isDisposed() {\r\n        return state === ConnectionState.Disposed;\r\n    }\r\n    function closeHandler() {\r\n        if (state === ConnectionState.New || state === ConnectionState.Listening) {\r\n            state = ConnectionState.Closed;\r\n            closeEmitter.fire(undefined);\r\n        }\r\n        // If the connection is disposed don't sent close events.\r\n    }\r\n    ;\r\n    function readErrorHandler(error) {\r\n        errorEmitter.fire([error, undefined, undefined]);\r\n    }\r\n    function writeErrorHandler(data) {\r\n        errorEmitter.fire(data);\r\n    }\r\n    messageReader.onClose(closeHandler);\r\n    messageReader.onError(readErrorHandler);\r\n    messageWriter.onClose(closeHandler);\r\n    messageWriter.onError(writeErrorHandler);\r\n    function triggerMessageQueue() {\r\n        if (timer || messageQueue.size === 0) {\r\n            return;\r\n        }\r\n        timer = setImmediate(() => {\r\n            timer = undefined;\r\n            processMessageQueue();\r\n        });\r\n    }\r\n    function processMessageQueue() {\r\n        if (messageQueue.size === 0) {\r\n            return;\r\n        }\r\n        let message = messageQueue.shift();\r\n        try {\r\n            if (messages_1.isRequestMessage(message)) {\r\n                handleRequest(message);\r\n            }\r\n            else if (messages_1.isNotificationMessage(message)) {\r\n                handleNotification(message);\r\n            }\r\n            else if (messages_1.isResponseMessage(message)) {\r\n                handleResponse(message);\r\n            }\r\n            else {\r\n                handleInvalidMessage(message);\r\n            }\r\n        }\r\n        finally {\r\n            triggerMessageQueue();\r\n        }\r\n    }\r\n    let callback = (message) => {\r\n        try {\r\n            // We have received a cancellation message. Check if the message is still in the queue\r\n            // and cancel it if allowed to do so.\r\n            if (messages_1.isNotificationMessage(message) && message.method === CancelNotification.type.method) {\r\n                let key = createRequestQueueKey(message.params.id);\r\n                let toCancel = messageQueue.get(key);\r\n                if (messages_1.isRequestMessage(toCancel)) {\r\n                    let response = strategy && strategy.cancelUndispatched ? strategy.cancelUndispatched(toCancel, cancelUndispatched) : cancelUndispatched(toCancel);\r\n                    if (response && (response.error !== void 0 || response.result !== void 0)) {\r\n                        messageQueue.delete(key);\r\n                        response.id = toCancel.id;\r\n                        traceSendingResponse(response, message.method, Date.now());\r\n                        messageWriter.write(response);\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n            addMessageToQueue(messageQueue, message);\r\n        }\r\n        finally {\r\n            triggerMessageQueue();\r\n        }\r\n    };\r\n    function handleRequest(requestMessage) {\r\n        if (isDisposed()) {\r\n            // we return here silently since we fired an event when the\r\n            // connection got disposed.\r\n            return;\r\n        }\r\n        function reply(resultOrError, method, startTime) {\r\n            let message = {\r\n                jsonrpc: version,\r\n                id: requestMessage.id\r\n            };\r\n            if (resultOrError instanceof messages_1.ResponseError) {\r\n                message.error = resultOrError.toJson();\r\n            }\r\n            else {\r\n                message.result = resultOrError === void 0 ? null : resultOrError;\r\n            }\r\n            traceSendingResponse(message, method, startTime);\r\n            messageWriter.write(message);\r\n        }\r\n        function replyError(error, method, startTime) {\r\n            let message = {\r\n                jsonrpc: version,\r\n                id: requestMessage.id,\r\n                error: error.toJson()\r\n            };\r\n            traceSendingResponse(message, method, startTime);\r\n            messageWriter.write(message);\r\n        }\r\n        function replySuccess(result, method, startTime) {\r\n            // The JSON RPC defines that a response must either have a result or an error\r\n            // So we can't treat undefined as a valid response result.\r\n            if (result === void 0) {\r\n                result = null;\r\n            }\r\n            let message = {\r\n                jsonrpc: version,\r\n                id: requestMessage.id,\r\n                result: result\r\n            };\r\n            traceSendingResponse(message, method, startTime);\r\n            messageWriter.write(message);\r\n        }\r\n        traceReceivedRequest(requestMessage);\r\n        let element = requestHandlers[requestMessage.method];\r\n        let type;\r\n        let requestHandler;\r\n        if (element) {\r\n            type = element.type;\r\n            requestHandler = element.handler;\r\n        }\r\n        let startTime = Date.now();\r\n        if (requestHandler || starRequestHandler) {\r\n            let cancellationSource = new cancellation_1.CancellationTokenSource();\r\n            let tokenKey = String(requestMessage.id);\r\n            requestTokens[tokenKey] = cancellationSource;\r\n            try {\r\n                let handlerResult;\r\n                if (requestMessage.params === void 0 || (type !== void 0 && type.numberOfParams === 0)) {\r\n                    handlerResult = requestHandler\r\n                        ? requestHandler(cancellationSource.token)\r\n                        : starRequestHandler(requestMessage.method, cancellationSource.token);\r\n                }\r\n                else if (Is.array(requestMessage.params) && (type === void 0 || type.numberOfParams > 1)) {\r\n                    handlerResult = requestHandler\r\n                        ? requestHandler(...requestMessage.params, cancellationSource.token)\r\n                        : starRequestHandler(requestMessage.method, ...requestMessage.params, cancellationSource.token);\r\n                }\r\n                else {\r\n                    handlerResult = requestHandler\r\n                        ? requestHandler(requestMessage.params, cancellationSource.token)\r\n                        : starRequestHandler(requestMessage.method, requestMessage.params, cancellationSource.token);\r\n                }\r\n                let promise = handlerResult;\r\n                if (!handlerResult) {\r\n                    delete requestTokens[tokenKey];\r\n                    replySuccess(handlerResult, requestMessage.method, startTime);\r\n                }\r\n                else if (promise.then) {\r\n                    promise.then((resultOrError) => {\r\n                        delete requestTokens[tokenKey];\r\n                        reply(resultOrError, requestMessage.method, startTime);\r\n                    }, error => {\r\n                        delete requestTokens[tokenKey];\r\n                        if (error instanceof messages_1.ResponseError) {\r\n                            replyError(error, requestMessage.method, startTime);\r\n                        }\r\n                        else if (error && Is.string(error.message)) {\r\n                            replyError(new messages_1.ResponseError(messages_1.ErrorCodes.InternalError, `Request ${requestMessage.method} failed with message: ${error.message}`), requestMessage.method, startTime);\r\n                        }\r\n                        else {\r\n                            replyError(new messages_1.ResponseError(messages_1.ErrorCodes.InternalError, `Request ${requestMessage.method} failed unexpectedly without providing any details.`), requestMessage.method, startTime);\r\n                        }\r\n                    });\r\n                }\r\n                else {\r\n                    delete requestTokens[tokenKey];\r\n                    reply(handlerResult, requestMessage.method, startTime);\r\n                }\r\n            }\r\n            catch (error) {\r\n                delete requestTokens[tokenKey];\r\n                if (error instanceof messages_1.ResponseError) {\r\n                    reply(error, requestMessage.method, startTime);\r\n                }\r\n                else if (error && Is.string(error.message)) {\r\n                    replyError(new messages_1.ResponseError(messages_1.ErrorCodes.InternalError, `Request ${requestMessage.method} failed with message: ${error.message}`), requestMessage.method, startTime);\r\n                }\r\n                else {\r\n                    replyError(new messages_1.ResponseError(messages_1.ErrorCodes.InternalError, `Request ${requestMessage.method} failed unexpectedly without providing any details.`), requestMessage.method, startTime);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            replyError(new messages_1.ResponseError(messages_1.ErrorCodes.MethodNotFound, `Unhandled method ${requestMessage.method}`), requestMessage.method, startTime);\r\n        }\r\n    }\r\n    function handleResponse(responseMessage) {\r\n        if (isDisposed()) {\r\n            // See handle request.\r\n            return;\r\n        }\r\n        if (responseMessage.id === null) {\r\n            if (responseMessage.error) {\r\n                logger.error(`Received response message without id: Error is: \\n${JSON.stringify(responseMessage.error, undefined, 4)}`);\r\n            }\r\n            else {\r\n                logger.error(`Received response message without id. No further error information provided.`);\r\n            }\r\n        }\r\n        else {\r\n            let key = String(responseMessage.id);\r\n            let responsePromise = responsePromises[key];\r\n            traceReceivedResponse(responseMessage, responsePromise);\r\n            if (responsePromise) {\r\n                delete responsePromises[key];\r\n                try {\r\n                    if (responseMessage.error) {\r\n                        let error = responseMessage.error;\r\n                        responsePromise.reject(new messages_1.ResponseError(error.code, error.message, error.data));\r\n                    }\r\n                    else if (responseMessage.result !== void 0) {\r\n                        responsePromise.resolve(responseMessage.result);\r\n                    }\r\n                    else {\r\n                        throw new Error('Should never happen.');\r\n                    }\r\n                }\r\n                catch (error) {\r\n                    if (error.message) {\r\n                        logger.error(`Response handler '${responsePromise.method}' failed with message: ${error.message}`);\r\n                    }\r\n                    else {\r\n                        logger.error(`Response handler '${responsePromise.method}' failed unexpectedly.`);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    function handleNotification(message) {\r\n        if (isDisposed()) {\r\n            // See handle request.\r\n            return;\r\n        }\r\n        let type = undefined;\r\n        let notificationHandler;\r\n        if (message.method === CancelNotification.type.method) {\r\n            notificationHandler = (params) => {\r\n                let id = params.id;\r\n                let source = requestTokens[String(id)];\r\n                if (source) {\r\n                    source.cancel();\r\n                }\r\n            };\r\n        }\r\n        else {\r\n            let element = notificationHandlers[message.method];\r\n            if (element) {\r\n                notificationHandler = element.handler;\r\n                type = element.type;\r\n            }\r\n        }\r\n        if (notificationHandler || starNotificationHandler) {\r\n            try {\r\n                traceReceivedNotification(message);\r\n                if (message.params === void 0 || (type !== void 0 && type.numberOfParams === 0)) {\r\n                    notificationHandler ? notificationHandler() : starNotificationHandler(message.method);\r\n                }\r\n                else if (Is.array(message.params) && (type === void 0 || type.numberOfParams > 1)) {\r\n                    notificationHandler ? notificationHandler(...message.params) : starNotificationHandler(message.method, ...message.params);\r\n                }\r\n                else {\r\n                    notificationHandler ? notificationHandler(message.params) : starNotificationHandler(message.method, message.params);\r\n                }\r\n            }\r\n            catch (error) {\r\n                if (error.message) {\r\n                    logger.error(`Notification handler '${message.method}' failed with message: ${error.message}`);\r\n                }\r\n                else {\r\n                    logger.error(`Notification handler '${message.method}' failed unexpectedly.`);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            unhandledNotificationEmitter.fire(message);\r\n        }\r\n    }\r\n    function handleInvalidMessage(message) {\r\n        if (!message) {\r\n            logger.error('Received empty message.');\r\n            return;\r\n        }\r\n        logger.error(`Received message which is neither a response nor a notification message:\\n${JSON.stringify(message, null, 4)}`);\r\n        // Test whether we find an id to reject the promise\r\n        let responseMessage = message;\r\n        if (Is.string(responseMessage.id) || Is.number(responseMessage.id)) {\r\n            let key = String(responseMessage.id);\r\n            let responseHandler = responsePromises[key];\r\n            if (responseHandler) {\r\n                responseHandler.reject(new Error('The received response has neither a result nor an error property.'));\r\n            }\r\n        }\r\n    }\r\n    function traceSendingRequest(message) {\r\n        if (trace === Trace.Off || !tracer) {\r\n            return;\r\n        }\r\n        if (traceFormat === TraceFormat.Text) {\r\n            let data = undefined;\r\n            if (trace === Trace.Verbose && message.params) {\r\n                data = `Params: ${JSON.stringify(message.params, null, 4)}\\n\\n`;\r\n            }\r\n            tracer.log(`Sending request '${message.method} - (${message.id})'.`, data);\r\n        }\r\n        else {\r\n            logLSPMessage('send-request', message);\r\n        }\r\n    }\r\n    function traceSendingNotification(message) {\r\n        if (trace === Trace.Off || !tracer) {\r\n            return;\r\n        }\r\n        if (traceFormat === TraceFormat.Text) {\r\n            let data = undefined;\r\n            if (trace === Trace.Verbose) {\r\n                if (message.params) {\r\n                    data = `Params: ${JSON.stringify(message.params, null, 4)}\\n\\n`;\r\n                }\r\n                else {\r\n                    data = 'No parameters provided.\\n\\n';\r\n                }\r\n            }\r\n            tracer.log(`Sending notification '${message.method}'.`, data);\r\n        }\r\n        else {\r\n            logLSPMessage('send-notification', message);\r\n        }\r\n    }\r\n    function traceSendingResponse(message, method, startTime) {\r\n        if (trace === Trace.Off || !tracer) {\r\n            return;\r\n        }\r\n        if (traceFormat === TraceFormat.Text) {\r\n            let data = undefined;\r\n            if (trace === Trace.Verbose) {\r\n                if (message.error && message.error.data) {\r\n                    data = `Error data: ${JSON.stringify(message.error.data, null, 4)}\\n\\n`;\r\n                }\r\n                else {\r\n                    if (message.result) {\r\n                        data = `Result: ${JSON.stringify(message.result, null, 4)}\\n\\n`;\r\n                    }\r\n                    else if (message.error === void 0) {\r\n                        data = 'No result returned.\\n\\n';\r\n                    }\r\n                }\r\n            }\r\n            tracer.log(`Sending response '${method} - (${message.id})'. Processing request took ${Date.now() - startTime}ms`, data);\r\n        }\r\n        else {\r\n            logLSPMessage('send-response', message);\r\n        }\r\n    }\r\n    function traceReceivedRequest(message) {\r\n        if (trace === Trace.Off || !tracer) {\r\n            return;\r\n        }\r\n        if (traceFormat === TraceFormat.Text) {\r\n            let data = undefined;\r\n            if (trace === Trace.Verbose && message.params) {\r\n                data = `Params: ${JSON.stringify(message.params, null, 4)}\\n\\n`;\r\n            }\r\n            tracer.log(`Received request '${message.method} - (${message.id})'.`, data);\r\n        }\r\n        else {\r\n            logLSPMessage('receive-request', message);\r\n        }\r\n    }\r\n    function traceReceivedNotification(message) {\r\n        if (trace === Trace.Off || !tracer || message.method === LogTraceNotification.type.method) {\r\n            return;\r\n        }\r\n        if (traceFormat === TraceFormat.Text) {\r\n            let data = undefined;\r\n            if (trace === Trace.Verbose) {\r\n                if (message.params) {\r\n                    data = `Params: ${JSON.stringify(message.params, null, 4)}\\n\\n`;\r\n                }\r\n                else {\r\n                    data = 'No parameters provided.\\n\\n';\r\n                }\r\n            }\r\n            tracer.log(`Received notification '${message.method}'.`, data);\r\n        }\r\n        else {\r\n            logLSPMessage('receive-notification', message);\r\n        }\r\n    }\r\n    function traceReceivedResponse(message, responsePromise) {\r\n        if (trace === Trace.Off || !tracer) {\r\n            return;\r\n        }\r\n        if (traceFormat === TraceFormat.Text) {\r\n            let data = undefined;\r\n            if (trace === Trace.Verbose) {\r\n                if (message.error && message.error.data) {\r\n                    data = `Error data: ${JSON.stringify(message.error.data, null, 4)}\\n\\n`;\r\n                }\r\n                else {\r\n                    if (message.result) {\r\n                        data = `Result: ${JSON.stringify(message.result, null, 4)}\\n\\n`;\r\n                    }\r\n                    else if (message.error === void 0) {\r\n                        data = 'No result returned.\\n\\n';\r\n                    }\r\n                }\r\n            }\r\n            if (responsePromise) {\r\n                let error = message.error ? ` Request failed: ${message.error.message} (${message.error.code}).` : '';\r\n                tracer.log(`Received response '${responsePromise.method} - (${message.id})' in ${Date.now() - responsePromise.timerStart}ms.${error}`, data);\r\n            }\r\n            else {\r\n                tracer.log(`Received response ${message.id} without active response promise.`, data);\r\n            }\r\n        }\r\n        else {\r\n            logLSPMessage('receive-response', message);\r\n        }\r\n    }\r\n    function logLSPMessage(type, message) {\r\n        if (!tracer || trace === Trace.Off) {\r\n            return;\r\n        }\r\n        const lspMessage = {\r\n            isLSPMessage: true,\r\n            type,\r\n            message,\r\n            timestamp: Date.now()\r\n        };\r\n        tracer.log(lspMessage);\r\n    }\r\n    function throwIfClosedOrDisposed() {\r\n        if (isClosed()) {\r\n            throw new ConnectionError(ConnectionErrors.Closed, 'Connection is closed.');\r\n        }\r\n        if (isDisposed()) {\r\n            throw new ConnectionError(ConnectionErrors.Disposed, 'Connection is disposed.');\r\n        }\r\n    }\r\n    function throwIfListening() {\r\n        if (isListening()) {\r\n            throw new ConnectionError(ConnectionErrors.AlreadyListening, 'Connection is already listening');\r\n        }\r\n    }\r\n    function throwIfNotListening() {\r\n        if (!isListening()) {\r\n            throw new Error('Call listen() first.');\r\n        }\r\n    }\r\n    function undefinedToNull(param) {\r\n        if (param === void 0) {\r\n            return null;\r\n        }\r\n        else {\r\n            return param;\r\n        }\r\n    }\r\n    function computeMessageParams(type, params) {\r\n        let result;\r\n        let numberOfParams = type.numberOfParams;\r\n        switch (numberOfParams) {\r\n            case 0:\r\n                result = null;\r\n                break;\r\n            case 1:\r\n                result = undefinedToNull(params[0]);\r\n                break;\r\n            default:\r\n                result = [];\r\n                for (let i = 0; i < params.length && i < numberOfParams; i++) {\r\n                    result.push(undefinedToNull(params[i]));\r\n                }\r\n                if (params.length < numberOfParams) {\r\n                    for (let i = params.length; i < numberOfParams; i++) {\r\n                        result.push(null);\r\n                    }\r\n                }\r\n                break;\r\n        }\r\n        return result;\r\n    }\r\n    let connection = {\r\n        sendNotification: (type, ...params) => {\r\n            throwIfClosedOrDisposed();\r\n            let method;\r\n            let messageParams;\r\n            if (Is.string(type)) {\r\n                method = type;\r\n                switch (params.length) {\r\n                    case 0:\r\n                        messageParams = null;\r\n                        break;\r\n                    case 1:\r\n                        messageParams = params[0];\r\n                        break;\r\n                    default:\r\n                        messageParams = params;\r\n                        break;\r\n                }\r\n            }\r\n            else {\r\n                method = type.method;\r\n                messageParams = computeMessageParams(type, params);\r\n            }\r\n            let notificationMessage = {\r\n                jsonrpc: version,\r\n                method: method,\r\n                params: messageParams\r\n            };\r\n            traceSendingNotification(notificationMessage);\r\n            messageWriter.write(notificationMessage);\r\n        },\r\n        onNotification: (type, handler) => {\r\n            throwIfClosedOrDisposed();\r\n            if (Is.func(type)) {\r\n                starNotificationHandler = type;\r\n            }\r\n            else if (handler) {\r\n                if (Is.string(type)) {\r\n                    notificationHandlers[type] = { type: undefined, handler };\r\n                }\r\n                else {\r\n                    notificationHandlers[type.method] = { type, handler };\r\n                }\r\n            }\r\n        },\r\n        sendRequest: (type, ...params) => {\r\n            throwIfClosedOrDisposed();\r\n            throwIfNotListening();\r\n            let method;\r\n            let messageParams;\r\n            let token = undefined;\r\n            if (Is.string(type)) {\r\n                method = type;\r\n                switch (params.length) {\r\n                    case 0:\r\n                        messageParams = null;\r\n                        break;\r\n                    case 1:\r\n                        // The cancellation token is optional so it can also be undefined.\r\n                        if (cancellation_1.CancellationToken.is(params[0])) {\r\n                            messageParams = null;\r\n                            token = params[0];\r\n                        }\r\n                        else {\r\n                            messageParams = undefinedToNull(params[0]);\r\n                        }\r\n                        break;\r\n                    default:\r\n                        const last = params.length - 1;\r\n                        if (cancellation_1.CancellationToken.is(params[last])) {\r\n                            token = params[last];\r\n                            if (params.length === 2) {\r\n                                messageParams = undefinedToNull(params[0]);\r\n                            }\r\n                            else {\r\n                                messageParams = params.slice(0, last).map(value => undefinedToNull(value));\r\n                            }\r\n                        }\r\n                        else {\r\n                            messageParams = params.map(value => undefinedToNull(value));\r\n                        }\r\n                        break;\r\n                }\r\n            }\r\n            else {\r\n                method = type.method;\r\n                messageParams = computeMessageParams(type, params);\r\n                let numberOfParams = type.numberOfParams;\r\n                token = cancellation_1.CancellationToken.is(params[numberOfParams]) ? params[numberOfParams] : undefined;\r\n            }\r\n            let id = sequenceNumber++;\r\n            let result = new Promise((resolve, reject) => {\r\n                let requestMessage = {\r\n                    jsonrpc: version,\r\n                    id: id,\r\n                    method: method,\r\n                    params: messageParams\r\n                };\r\n                let responsePromise = { method: method, timerStart: Date.now(), resolve, reject };\r\n                traceSendingRequest(requestMessage);\r\n                try {\r\n                    messageWriter.write(requestMessage);\r\n                }\r\n                catch (e) {\r\n                    // Writing the message failed. So we need to reject the promise.\r\n                    responsePromise.reject(new messages_1.ResponseError(messages_1.ErrorCodes.MessageWriteError, e.message ? e.message : 'Unknown reason'));\r\n                    responsePromise = null;\r\n                }\r\n                if (responsePromise) {\r\n                    responsePromises[String(id)] = responsePromise;\r\n                }\r\n            });\r\n            if (token) {\r\n                token.onCancellationRequested(() => {\r\n                    connection.sendNotification(CancelNotification.type, { id });\r\n                });\r\n            }\r\n            return result;\r\n        },\r\n        onRequest: (type, handler) => {\r\n            throwIfClosedOrDisposed();\r\n            if (Is.func(type)) {\r\n                starRequestHandler = type;\r\n            }\r\n            else if (handler) {\r\n                if (Is.string(type)) {\r\n                    requestHandlers[type] = { type: undefined, handler };\r\n                }\r\n                else {\r\n                    requestHandlers[type.method] = { type, handler };\r\n                }\r\n            }\r\n        },\r\n        trace: (_value, _tracer, sendNotificationOrTraceOptions) => {\r\n            let _sendNotification = false;\r\n            let _traceFormat = TraceFormat.Text;\r\n            if (sendNotificationOrTraceOptions !== void 0) {\r\n                if (Is.boolean(sendNotificationOrTraceOptions)) {\r\n                    _sendNotification = sendNotificationOrTraceOptions;\r\n                }\r\n                else {\r\n                    _sendNotification = sendNotificationOrTraceOptions.sendNotification || false;\r\n                    _traceFormat = sendNotificationOrTraceOptions.traceFormat || TraceFormat.Text;\r\n                }\r\n            }\r\n            trace = _value;\r\n            traceFormat = _traceFormat;\r\n            if (trace === Trace.Off) {\r\n                tracer = undefined;\r\n            }\r\n            else {\r\n                tracer = _tracer;\r\n            }\r\n            if (_sendNotification && !isClosed() && !isDisposed()) {\r\n                connection.sendNotification(SetTraceNotification.type, { value: Trace.toString(_value) });\r\n            }\r\n        },\r\n        onError: errorEmitter.event,\r\n        onClose: closeEmitter.event,\r\n        onUnhandledNotification: unhandledNotificationEmitter.event,\r\n        onDispose: disposeEmitter.event,\r\n        dispose: () => {\r\n            if (isDisposed()) {\r\n                return;\r\n            }\r\n            state = ConnectionState.Disposed;\r\n            disposeEmitter.fire(undefined);\r\n            let error = new Error('Connection got disposed.');\r\n            Object.keys(responsePromises).forEach((key) => {\r\n                responsePromises[key].reject(error);\r\n            });\r\n            responsePromises = Object.create(null);\r\n            requestTokens = Object.create(null);\r\n            messageQueue = new linkedMap_1.LinkedMap();\r\n            // Test for backwards compatibility\r\n            if (Is.func(messageWriter.dispose)) {\r\n                messageWriter.dispose();\r\n            }\r\n            if (Is.func(messageReader.dispose)) {\r\n                messageReader.dispose();\r\n            }\r\n        },\r\n        listen: () => {\r\n            throwIfClosedOrDisposed();\r\n            throwIfListening();\r\n            state = ConnectionState.Listening;\r\n            messageReader.listen(callback);\r\n        },\r\n        inspect: () => {\r\n            console.log(\"inspect\");\r\n        }\r\n    };\r\n    connection.onNotification(LogTraceNotification.type, (params) => {\r\n        if (trace === Trace.Off || !tracer) {\r\n            return;\r\n        }\r\n        tracer.log(params.message, trace === Trace.Verbose ? params.verbose : undefined);\r\n    });\r\n    return connection;\r\n}\r\nfunction isMessageReader(value) {\r\n    return value.listen !== void 0 && value.read === void 0;\r\n}\r\nfunction isMessageWriter(value) {\r\n    return value.write !== void 0 && value.end === void 0;\r\n}\r\nfunction createMessageConnection(input, output, logger, strategy) {\r\n    if (!logger) {\r\n        logger = exports.NullLogger;\r\n    }\r\n    let reader = isMessageReader(input) ? input : new messageReader_1.StreamMessageReader(input);\r\n    let writer = isMessageWriter(output) ? output : new messageWriter_1.StreamMessageWriter(output);\r\n    return _createMessageConnection(reader, writer, logger, strategy);\r\n}\r\nexports.createMessageConnection = createMessageConnection;\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nfunction boolean(value) {\r\n    return value === true || value === false;\r\n}\r\nexports.boolean = boolean;\r\nfunction string(value) {\r\n    return typeof value === 'string' || value instanceof String;\r\n}\r\nexports.string = string;\r\nfunction number(value) {\r\n    return typeof value === 'number' || value instanceof Number;\r\n}\r\nexports.number = number;\r\nfunction error(value) {\r\n    return value instanceof Error;\r\n}\r\nexports.error = error;\r\nfunction func(value) {\r\n    return typeof value === 'function';\r\n}\r\nexports.func = func;\r\nfunction array(value) {\r\n    return Array.isArray(value);\r\n}\r\nexports.array = array;\r\nfunction stringArray(value) {\r\n    return array(value) && value.every(elem => string(elem));\r\n}\r\nexports.stringArray = stringArray;\r\nfunction typedArray(value, check) {\r\n    return Array.isArray(value) && value.every(check);\r\n}\r\nexports.typedArray = typedArray;\r\nfunction thenable(value) {\r\n    return value && func(value.then);\r\n}\r\nexports.thenable = thenable;\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nfunction __export(m) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vscode_1 = require(\"vscode\");\r\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\r\nconst c2p = require(\"./codeConverter\");\r\nconst p2c = require(\"./protocolConverter\");\r\nconst Is = require(\"./utils/is\");\r\nconst async_1 = require(\"./utils/async\");\r\nconst UUID = require(\"./utils/uuid\");\r\n__export(require(\"vscode-languageserver-protocol\"));\r\nclass ConsoleLogger {\r\n    error(message) {\r\n        console.error(message);\r\n    }\r\n    warn(message) {\r\n        console.warn(message);\r\n    }\r\n    info(message) {\r\n        console.info(message);\r\n    }\r\n    log(message) {\r\n        console.log(message);\r\n    }\r\n}\r\nfunction createConnection(input, output, errorHandler, closeHandler) {\r\n    let logger = new ConsoleLogger();\r\n    let connection = vscode_languageserver_protocol_1.createProtocolConnection(input, output, logger);\r\n    connection.onError((data) => { errorHandler(data[0], data[1], data[2]); });\r\n    connection.onClose(closeHandler);\r\n    let result = {\r\n        listen: () => connection.listen(),\r\n        sendRequest: (type, ...params) => connection.sendRequest(Is.string(type) ? type : type.method, ...params),\r\n        onRequest: (type, handler) => connection.onRequest(Is.string(type) ? type : type.method, handler),\r\n        sendNotification: (type, params) => connection.sendNotification(Is.string(type) ? type : type.method, params),\r\n        onNotification: (type, handler) => connection.onNotification(Is.string(type) ? type : type.method, handler),\r\n        trace: (value, tracer, sendNotificationOrTraceOptions) => {\r\n            const defaultTraceOptions = {\r\n                sendNotification: false,\r\n                traceFormat: vscode_languageserver_protocol_1.TraceFormat.Text\r\n            };\r\n            if (sendNotificationOrTraceOptions === void 0) {\r\n                connection.trace(value, tracer, defaultTraceOptions);\r\n            }\r\n            else if (Is.boolean(sendNotificationOrTraceOptions)) {\r\n                connection.trace(value, tracer, sendNotificationOrTraceOptions);\r\n            }\r\n            else {\r\n                connection.trace(value, tracer, sendNotificationOrTraceOptions);\r\n            }\r\n        },\r\n        initialize: (params) => connection.sendRequest(vscode_languageserver_protocol_1.InitializeRequest.type, params),\r\n        shutdown: () => connection.sendRequest(vscode_languageserver_protocol_1.ShutdownRequest.type, undefined),\r\n        exit: () => connection.sendNotification(vscode_languageserver_protocol_1.ExitNotification.type),\r\n        onLogMessage: (handler) => connection.onNotification(vscode_languageserver_protocol_1.LogMessageNotification.type, handler),\r\n        onShowMessage: (handler) => connection.onNotification(vscode_languageserver_protocol_1.ShowMessageNotification.type, handler),\r\n        onTelemetry: (handler) => connection.onNotification(vscode_languageserver_protocol_1.TelemetryEventNotification.type, handler),\r\n        didChangeConfiguration: (params) => connection.sendNotification(vscode_languageserver_protocol_1.DidChangeConfigurationNotification.type, params),\r\n        didChangeWatchedFiles: (params) => connection.sendNotification(vscode_languageserver_protocol_1.DidChangeWatchedFilesNotification.type, params),\r\n        didOpenTextDocument: (params) => connection.sendNotification(vscode_languageserver_protocol_1.DidOpenTextDocumentNotification.type, params),\r\n        didChangeTextDocument: (params) => connection.sendNotification(vscode_languageserver_protocol_1.DidChangeTextDocumentNotification.type, params),\r\n        didCloseTextDocument: (params) => connection.sendNotification(vscode_languageserver_protocol_1.DidCloseTextDocumentNotification.type, params),\r\n        didSaveTextDocument: (params) => connection.sendNotification(vscode_languageserver_protocol_1.DidSaveTextDocumentNotification.type, params),\r\n        onDiagnostics: (handler) => connection.onNotification(vscode_languageserver_protocol_1.PublishDiagnosticsNotification.type, handler),\r\n        dispose: () => connection.dispose()\r\n    };\r\n    return result;\r\n}\r\n/**\r\n * An action to be performed when the connection is producing errors.\r\n */\r\nvar ErrorAction;\r\n(function (ErrorAction) {\r\n    /**\r\n     * Continue running the server.\r\n     */\r\n    ErrorAction[ErrorAction[\"Continue\"] = 1] = \"Continue\";\r\n    /**\r\n     * Shutdown the server.\r\n     */\r\n    ErrorAction[ErrorAction[\"Shutdown\"] = 2] = \"Shutdown\";\r\n})(ErrorAction = exports.ErrorAction || (exports.ErrorAction = {}));\r\n/**\r\n * An action to be performed when the connection to a server got closed.\r\n */\r\nvar CloseAction;\r\n(function (CloseAction) {\r\n    /**\r\n     * Don't restart the server. The connection stays closed.\r\n     */\r\n    CloseAction[CloseAction[\"DoNotRestart\"] = 1] = \"DoNotRestart\";\r\n    /**\r\n     * Restart the server.\r\n     */\r\n    CloseAction[CloseAction[\"Restart\"] = 2] = \"Restart\";\r\n})(CloseAction = exports.CloseAction || (exports.CloseAction = {}));\r\nclass DefaultErrorHandler {\r\n    constructor(name) {\r\n        this.name = name;\r\n        this.restarts = [];\r\n    }\r\n    error(_error, _message, count) {\r\n        if (count && count <= 3) {\r\n            return ErrorAction.Continue;\r\n        }\r\n        return ErrorAction.Shutdown;\r\n    }\r\n    closed() {\r\n        this.restarts.push(Date.now());\r\n        if (this.restarts.length < 5) {\r\n            return CloseAction.Restart;\r\n        }\r\n        else {\r\n            let diff = this.restarts[this.restarts.length - 1] - this.restarts[0];\r\n            if (diff <= 3 * 60 * 1000) {\r\n                vscode_1.window.showErrorMessage(`The ${this.name} server crashed 5 times in the last 3 minutes. The server will not be restarted.`);\r\n                return CloseAction.DoNotRestart;\r\n            }\r\n            else {\r\n                this.restarts.shift();\r\n                return CloseAction.Restart;\r\n            }\r\n        }\r\n    }\r\n}\r\nvar RevealOutputChannelOn;\r\n(function (RevealOutputChannelOn) {\r\n    RevealOutputChannelOn[RevealOutputChannelOn[\"Info\"] = 1] = \"Info\";\r\n    RevealOutputChannelOn[RevealOutputChannelOn[\"Warn\"] = 2] = \"Warn\";\r\n    RevealOutputChannelOn[RevealOutputChannelOn[\"Error\"] = 3] = \"Error\";\r\n    RevealOutputChannelOn[RevealOutputChannelOn[\"Never\"] = 4] = \"Never\";\r\n})(RevealOutputChannelOn = exports.RevealOutputChannelOn || (exports.RevealOutputChannelOn = {}));\r\nvar State;\r\n(function (State) {\r\n    State[State[\"Stopped\"] = 1] = \"Stopped\";\r\n    State[State[\"Starting\"] = 3] = \"Starting\";\r\n    State[State[\"Running\"] = 2] = \"Running\";\r\n})(State = exports.State || (exports.State = {}));\r\nvar ClientState;\r\n(function (ClientState) {\r\n    ClientState[ClientState[\"Initial\"] = 0] = \"Initial\";\r\n    ClientState[ClientState[\"Starting\"] = 1] = \"Starting\";\r\n    ClientState[ClientState[\"StartFailed\"] = 2] = \"StartFailed\";\r\n    ClientState[ClientState[\"Running\"] = 3] = \"Running\";\r\n    ClientState[ClientState[\"Stopping\"] = 4] = \"Stopping\";\r\n    ClientState[ClientState[\"Stopped\"] = 5] = \"Stopped\";\r\n})(ClientState || (ClientState = {}));\r\nconst SupportedSymbolKinds = [\r\n    vscode_languageserver_protocol_1.SymbolKind.File,\r\n    vscode_languageserver_protocol_1.SymbolKind.Module,\r\n    vscode_languageserver_protocol_1.SymbolKind.Namespace,\r\n    vscode_languageserver_protocol_1.SymbolKind.Package,\r\n    vscode_languageserver_protocol_1.SymbolKind.Class,\r\n    vscode_languageserver_protocol_1.SymbolKind.Method,\r\n    vscode_languageserver_protocol_1.SymbolKind.Property,\r\n    vscode_languageserver_protocol_1.SymbolKind.Field,\r\n    vscode_languageserver_protocol_1.SymbolKind.Constructor,\r\n    vscode_languageserver_protocol_1.SymbolKind.Enum,\r\n    vscode_languageserver_protocol_1.SymbolKind.Interface,\r\n    vscode_languageserver_protocol_1.SymbolKind.Function,\r\n    vscode_languageserver_protocol_1.SymbolKind.Variable,\r\n    vscode_languageserver_protocol_1.SymbolKind.Constant,\r\n    vscode_languageserver_protocol_1.SymbolKind.String,\r\n    vscode_languageserver_protocol_1.SymbolKind.Number,\r\n    vscode_languageserver_protocol_1.SymbolKind.Boolean,\r\n    vscode_languageserver_protocol_1.SymbolKind.Array,\r\n    vscode_languageserver_protocol_1.SymbolKind.Object,\r\n    vscode_languageserver_protocol_1.SymbolKind.Key,\r\n    vscode_languageserver_protocol_1.SymbolKind.Null,\r\n    vscode_languageserver_protocol_1.SymbolKind.EnumMember,\r\n    vscode_languageserver_protocol_1.SymbolKind.Struct,\r\n    vscode_languageserver_protocol_1.SymbolKind.Event,\r\n    vscode_languageserver_protocol_1.SymbolKind.Operator,\r\n    vscode_languageserver_protocol_1.SymbolKind.TypeParameter\r\n];\r\nconst SupportedCompletionItemKinds = [\r\n    vscode_languageserver_protocol_1.CompletionItemKind.Text,\r\n    vscode_languageserver_protocol_1.CompletionItemKind.Method,\r\n    vscode_languageserver_protocol_1.CompletionItemKind.Function,\r\n    vscode_languageserver_protocol_1.CompletionItemKind.Constructor,\r\n    vscode_languageserver_protocol_1.CompletionItemKind.Field,\r\n    vscode_languageserver_protocol_1.CompletionItemKind.Variable,\r\n    vscode_languageserver_protocol_1.CompletionItemKind.Class,\r\n    vscode_languageserver_protocol_1.CompletionItemKind.Interface,\r\n    vscode_languageserver_protocol_1.CompletionItemKind.Module,\r\n    vscode_languageserver_protocol_1.CompletionItemKind.Property,\r\n    vscode_languageserver_protocol_1.CompletionItemKind.Unit,\r\n    vscode_languageserver_protocol_1.CompletionItemKind.Value,\r\n    vscode_languageserver_protocol_1.CompletionItemKind.Enum,\r\n    vscode_languageserver_protocol_1.CompletionItemKind.Keyword,\r\n    vscode_languageserver_protocol_1.CompletionItemKind.Snippet,\r\n    vscode_languageserver_protocol_1.CompletionItemKind.Color,\r\n    vscode_languageserver_protocol_1.CompletionItemKind.File,\r\n    vscode_languageserver_protocol_1.CompletionItemKind.Reference,\r\n    vscode_languageserver_protocol_1.CompletionItemKind.Folder,\r\n    vscode_languageserver_protocol_1.CompletionItemKind.EnumMember,\r\n    vscode_languageserver_protocol_1.CompletionItemKind.Constant,\r\n    vscode_languageserver_protocol_1.CompletionItemKind.Struct,\r\n    vscode_languageserver_protocol_1.CompletionItemKind.Event,\r\n    vscode_languageserver_protocol_1.CompletionItemKind.Operator,\r\n    vscode_languageserver_protocol_1.CompletionItemKind.TypeParameter\r\n];\r\nfunction ensure(target, key) {\r\n    if (target[key] === void 0) {\r\n        target[key] = {};\r\n    }\r\n    return target[key];\r\n}\r\nvar DynamicFeature;\r\n(function (DynamicFeature) {\r\n    function is(value) {\r\n        let candidate = value;\r\n        return candidate && Is.func(candidate.register) && Is.func(candidate.unregister) && Is.func(candidate.dispose) && candidate.messages !== void 0;\r\n    }\r\n    DynamicFeature.is = is;\r\n})(DynamicFeature || (DynamicFeature = {}));\r\nclass DocumentNotifiactions {\r\n    constructor(_client, _event, _type, _middleware, _createParams, _selectorFilter) {\r\n        this._client = _client;\r\n        this._event = _event;\r\n        this._type = _type;\r\n        this._middleware = _middleware;\r\n        this._createParams = _createParams;\r\n        this._selectorFilter = _selectorFilter;\r\n        this._selectors = new Map();\r\n    }\r\n    static textDocumentFilter(selectors, textDocument) {\r\n        for (const selector of selectors) {\r\n            if (vscode_1.languages.match(selector, textDocument)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    register(_message, data) {\r\n        if (!data.registerOptions.documentSelector) {\r\n            return;\r\n        }\r\n        if (!this._listener) {\r\n            this._listener = this._event(this.callback, this);\r\n        }\r\n        this._selectors.set(data.id, data.registerOptions.documentSelector);\r\n    }\r\n    callback(data) {\r\n        if (!this._selectorFilter || this._selectorFilter(this._selectors.values(), data)) {\r\n            if (this._middleware) {\r\n                this._middleware(data, (data) => this._client.sendNotification(this._type, this._createParams(data)));\r\n            }\r\n            else {\r\n                this._client.sendNotification(this._type, this._createParams(data));\r\n            }\r\n            this.notificationSent(data);\r\n        }\r\n    }\r\n    notificationSent(_data) {\r\n    }\r\n    unregister(id) {\r\n        this._selectors.delete(id);\r\n        if (this._selectors.size === 0 && this._listener) {\r\n            this._listener.dispose();\r\n            this._listener = undefined;\r\n        }\r\n    }\r\n    dispose() {\r\n        this._selectors.clear();\r\n        if (this._listener) {\r\n            this._listener.dispose();\r\n            this._listener = undefined;\r\n        }\r\n    }\r\n}\r\nclass DidOpenTextDocumentFeature extends DocumentNotifiactions {\r\n    constructor(client, _syncedDocuments) {\r\n        super(client, vscode_1.workspace.onDidOpenTextDocument, vscode_languageserver_protocol_1.DidOpenTextDocumentNotification.type, client.clientOptions.middleware.didOpen, (textDocument) => client.code2ProtocolConverter.asOpenTextDocumentParams(textDocument), DocumentNotifiactions.textDocumentFilter);\r\n        this._syncedDocuments = _syncedDocuments;\r\n    }\r\n    get messages() {\r\n        return vscode_languageserver_protocol_1.DidOpenTextDocumentNotification.type;\r\n    }\r\n    fillClientCapabilities(capabilities) {\r\n        ensure(ensure(capabilities, 'textDocument'), 'synchronization').dynamicRegistration = true;\r\n    }\r\n    initialize(capabilities, documentSelector) {\r\n        let textDocumentSyncOptions = capabilities.resolvedTextDocumentSync;\r\n        if (documentSelector && textDocumentSyncOptions && textDocumentSyncOptions.openClose) {\r\n            this.register(this.messages, { id: UUID.generateUuid(), registerOptions: { documentSelector: documentSelector } });\r\n        }\r\n    }\r\n    register(message, data) {\r\n        super.register(message, data);\r\n        if (!data.registerOptions.documentSelector) {\r\n            return;\r\n        }\r\n        let documentSelector = data.registerOptions.documentSelector;\r\n        vscode_1.workspace.textDocuments.forEach((textDocument) => {\r\n            let uri = textDocument.uri.toString();\r\n            if (this._syncedDocuments.has(uri)) {\r\n                return;\r\n            }\r\n            if (vscode_1.languages.match(documentSelector, textDocument)) {\r\n                let middleware = this._client.clientOptions.middleware;\r\n                let didOpen = (textDocument) => {\r\n                    this._client.sendNotification(this._type, this._createParams(textDocument));\r\n                };\r\n                if (middleware.didOpen) {\r\n                    middleware.didOpen(textDocument, didOpen);\r\n                }\r\n                else {\r\n                    didOpen(textDocument);\r\n                }\r\n                this._syncedDocuments.set(uri, textDocument);\r\n            }\r\n        });\r\n    }\r\n    notificationSent(textDocument) {\r\n        super.notificationSent(textDocument);\r\n        this._syncedDocuments.set(textDocument.uri.toString(), textDocument);\r\n    }\r\n}\r\nclass DidCloseTextDocumentFeature extends DocumentNotifiactions {\r\n    constructor(client, _syncedDocuments) {\r\n        super(client, vscode_1.workspace.onDidCloseTextDocument, vscode_languageserver_protocol_1.DidCloseTextDocumentNotification.type, client.clientOptions.middleware.didClose, (textDocument) => client.code2ProtocolConverter.asCloseTextDocumentParams(textDocument), DocumentNotifiactions.textDocumentFilter);\r\n        this._syncedDocuments = _syncedDocuments;\r\n    }\r\n    get messages() {\r\n        return vscode_languageserver_protocol_1.DidCloseTextDocumentNotification.type;\r\n    }\r\n    fillClientCapabilities(capabilities) {\r\n        ensure(ensure(capabilities, 'textDocument'), 'synchronization').dynamicRegistration = true;\r\n    }\r\n    initialize(capabilities, documentSelector) {\r\n        let textDocumentSyncOptions = capabilities.resolvedTextDocumentSync;\r\n        if (documentSelector && textDocumentSyncOptions && textDocumentSyncOptions.openClose) {\r\n            this.register(this.messages, { id: UUID.generateUuid(), registerOptions: { documentSelector: documentSelector } });\r\n        }\r\n    }\r\n    notificationSent(textDocument) {\r\n        super.notificationSent(textDocument);\r\n        this._syncedDocuments.delete(textDocument.uri.toString());\r\n    }\r\n    unregister(id) {\r\n        let selector = this._selectors.get(id);\r\n        // The super call removed the selector from the map\r\n        // of selectors.\r\n        super.unregister(id);\r\n        let selectors = this._selectors.values();\r\n        this._syncedDocuments.forEach((textDocument) => {\r\n            if (vscode_1.languages.match(selector, textDocument) && !this._selectorFilter(selectors, textDocument)) {\r\n                let middleware = this._client.clientOptions.middleware;\r\n                let didClose = (textDocument) => {\r\n                    this._client.sendNotification(this._type, this._createParams(textDocument));\r\n                };\r\n                this._syncedDocuments.delete(textDocument.uri.toString());\r\n                if (middleware.didClose) {\r\n                    middleware.didClose(textDocument, didClose);\r\n                }\r\n                else {\r\n                    didClose(textDocument);\r\n                }\r\n            }\r\n        });\r\n    }\r\n}\r\nclass DidChangeTextDocumentFeature {\r\n    constructor(_client) {\r\n        this._client = _client;\r\n        this._changeData = new Map();\r\n        this._forcingDelivery = false;\r\n    }\r\n    get messages() {\r\n        return vscode_languageserver_protocol_1.DidChangeTextDocumentNotification.type;\r\n    }\r\n    fillClientCapabilities(capabilities) {\r\n        ensure(ensure(capabilities, 'textDocument'), 'synchronization').dynamicRegistration = true;\r\n    }\r\n    initialize(capabilities, documentSelector) {\r\n        let textDocumentSyncOptions = capabilities.resolvedTextDocumentSync;\r\n        if (documentSelector && textDocumentSyncOptions && textDocumentSyncOptions.change !== void 0 && textDocumentSyncOptions.change !== vscode_languageserver_protocol_1.TextDocumentSyncKind.None) {\r\n            this.register(this.messages, {\r\n                id: UUID.generateUuid(),\r\n                registerOptions: Object.assign({}, { documentSelector: documentSelector }, { syncKind: textDocumentSyncOptions.change })\r\n            });\r\n        }\r\n    }\r\n    register(_message, data) {\r\n        if (!data.registerOptions.documentSelector) {\r\n            return;\r\n        }\r\n        if (!this._listener) {\r\n            this._listener = vscode_1.workspace.onDidChangeTextDocument(this.callback, this);\r\n        }\r\n        this._changeData.set(data.id, {\r\n            documentSelector: data.registerOptions.documentSelector,\r\n            syncKind: data.registerOptions.syncKind\r\n        });\r\n    }\r\n    callback(event) {\r\n        // Text document changes are send for dirty changes as well. We don't\r\n        // have dirty / undirty events in the LSP so we ignore content changes\r\n        // with length zero.\r\n        if (event.contentChanges.length === 0) {\r\n            return;\r\n        }\r\n        for (const changeData of this._changeData.values()) {\r\n            if (vscode_1.languages.match(changeData.documentSelector, event.document)) {\r\n                let middleware = this._client.clientOptions.middleware;\r\n                if (changeData.syncKind === vscode_languageserver_protocol_1.TextDocumentSyncKind.Incremental) {\r\n                    let params = this._client.code2ProtocolConverter.asChangeTextDocumentParams(event);\r\n                    if (middleware.didChange) {\r\n                        middleware.didChange(event, () => this._client.sendNotification(vscode_languageserver_protocol_1.DidChangeTextDocumentNotification.type, params));\r\n                    }\r\n                    else {\r\n                        this._client.sendNotification(vscode_languageserver_protocol_1.DidChangeTextDocumentNotification.type, params);\r\n                    }\r\n                }\r\n                else if (changeData.syncKind === vscode_languageserver_protocol_1.TextDocumentSyncKind.Full) {\r\n                    let didChange = (event) => {\r\n                        if (this._changeDelayer) {\r\n                            if (this._changeDelayer.uri !== event.document.uri.toString()) {\r\n                                // Use this force delivery to track boolean state. Otherwise we might call two times.\r\n                                this.forceDelivery();\r\n                                this._changeDelayer.uri = event.document.uri.toString();\r\n                            }\r\n                            this._changeDelayer.delayer.trigger(() => {\r\n                                this._client.sendNotification(vscode_languageserver_protocol_1.DidChangeTextDocumentNotification.type, this._client.code2ProtocolConverter.asChangeTextDocumentParams(event.document));\r\n                            });\r\n                        }\r\n                        else {\r\n                            this._changeDelayer = {\r\n                                uri: event.document.uri.toString(),\r\n                                delayer: new async_1.Delayer(200)\r\n                            };\r\n                            this._changeDelayer.delayer.trigger(() => {\r\n                                this._client.sendNotification(vscode_languageserver_protocol_1.DidChangeTextDocumentNotification.type, this._client.code2ProtocolConverter.asChangeTextDocumentParams(event.document));\r\n                            }, -1);\r\n                        }\r\n                    };\r\n                    if (middleware.didChange) {\r\n                        middleware.didChange(event, didChange);\r\n                    }\r\n                    else {\r\n                        didChange(event);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    unregister(id) {\r\n        this._changeData.delete(id);\r\n        if (this._changeData.size === 0 && this._listener) {\r\n            this._listener.dispose();\r\n            this._listener = undefined;\r\n        }\r\n    }\r\n    dispose() {\r\n        this._changeDelayer = undefined;\r\n        this._forcingDelivery = false;\r\n        this._changeData.clear();\r\n        if (this._listener) {\r\n            this._listener.dispose();\r\n            this._listener = undefined;\r\n        }\r\n    }\r\n    forceDelivery() {\r\n        if (this._forcingDelivery || !this._changeDelayer) {\r\n            return;\r\n        }\r\n        try {\r\n            this._forcingDelivery = true;\r\n            this._changeDelayer.delayer.forceDelivery();\r\n        }\r\n        finally {\r\n            this._forcingDelivery = false;\r\n        }\r\n    }\r\n}\r\nclass WillSaveFeature extends DocumentNotifiactions {\r\n    constructor(client) {\r\n        super(client, vscode_1.workspace.onWillSaveTextDocument, vscode_languageserver_protocol_1.WillSaveTextDocumentNotification.type, client.clientOptions.middleware.willSave, (willSaveEvent) => client.code2ProtocolConverter.asWillSaveTextDocumentParams(willSaveEvent), (selectors, willSaveEvent) => DocumentNotifiactions.textDocumentFilter(selectors, willSaveEvent.document));\r\n    }\r\n    get messages() {\r\n        return vscode_languageserver_protocol_1.WillSaveTextDocumentNotification.type;\r\n    }\r\n    fillClientCapabilities(capabilities) {\r\n        let value = ensure(ensure(capabilities, 'textDocument'), 'synchronization');\r\n        value.willSave = true;\r\n    }\r\n    initialize(capabilities, documentSelector) {\r\n        let textDocumentSyncOptions = capabilities.resolvedTextDocumentSync;\r\n        if (documentSelector && textDocumentSyncOptions && textDocumentSyncOptions.willSave) {\r\n            this.register(this.messages, {\r\n                id: UUID.generateUuid(),\r\n                registerOptions: { documentSelector: documentSelector }\r\n            });\r\n        }\r\n    }\r\n}\r\nclass WillSaveWaitUntilFeature {\r\n    constructor(_client) {\r\n        this._client = _client;\r\n        this._selectors = new Map();\r\n    }\r\n    get messages() {\r\n        return vscode_languageserver_protocol_1.WillSaveTextDocumentWaitUntilRequest.type;\r\n    }\r\n    fillClientCapabilities(capabilities) {\r\n        let value = ensure(ensure(capabilities, 'textDocument'), 'synchronization');\r\n        value.willSaveWaitUntil = true;\r\n    }\r\n    initialize(capabilities, documentSelector) {\r\n        let textDocumentSyncOptions = capabilities.resolvedTextDocumentSync;\r\n        if (documentSelector && textDocumentSyncOptions && textDocumentSyncOptions.willSaveWaitUntil) {\r\n            this.register(this.messages, {\r\n                id: UUID.generateUuid(),\r\n                registerOptions: { documentSelector: documentSelector }\r\n            });\r\n        }\r\n    }\r\n    register(_message, data) {\r\n        if (!data.registerOptions.documentSelector) {\r\n            return;\r\n        }\r\n        if (!this._listener) {\r\n            this._listener = vscode_1.workspace.onWillSaveTextDocument(this.callback, this);\r\n        }\r\n        this._selectors.set(data.id, data.registerOptions.documentSelector);\r\n    }\r\n    callback(event) {\r\n        if (DocumentNotifiactions.textDocumentFilter(this._selectors.values(), event.document)) {\r\n            let middleware = this._client.clientOptions.middleware;\r\n            let willSaveWaitUntil = (event) => {\r\n                return this._client.sendRequest(vscode_languageserver_protocol_1.WillSaveTextDocumentWaitUntilRequest.type, this._client.code2ProtocolConverter.asWillSaveTextDocumentParams(event)).then((edits) => {\r\n                    let vEdits = this._client.protocol2CodeConverter.asTextEdits(edits);\r\n                    return vEdits === void 0 ? [] : vEdits;\r\n                });\r\n            };\r\n            event.waitUntil(middleware.willSaveWaitUntil\r\n                ? middleware.willSaveWaitUntil(event, willSaveWaitUntil)\r\n                : willSaveWaitUntil(event));\r\n        }\r\n    }\r\n    unregister(id) {\r\n        this._selectors.delete(id);\r\n        if (this._selectors.size === 0 && this._listener) {\r\n            this._listener.dispose();\r\n            this._listener = undefined;\r\n        }\r\n    }\r\n    dispose() {\r\n        this._selectors.clear();\r\n        if (this._listener) {\r\n            this._listener.dispose();\r\n            this._listener = undefined;\r\n        }\r\n    }\r\n}\r\nclass DidSaveTextDocumentFeature extends DocumentNotifiactions {\r\n    constructor(client) {\r\n        super(client, vscode_1.workspace.onDidSaveTextDocument, vscode_languageserver_protocol_1.DidSaveTextDocumentNotification.type, client.clientOptions.middleware.didSave, (textDocument) => client.code2ProtocolConverter.asSaveTextDocumentParams(textDocument, this._includeText), DocumentNotifiactions.textDocumentFilter);\r\n    }\r\n    get messages() {\r\n        return vscode_languageserver_protocol_1.DidSaveTextDocumentNotification.type;\r\n    }\r\n    fillClientCapabilities(capabilities) {\r\n        ensure(ensure(capabilities, 'textDocument'), 'synchronization').didSave = true;\r\n    }\r\n    initialize(capabilities, documentSelector) {\r\n        let textDocumentSyncOptions = capabilities.resolvedTextDocumentSync;\r\n        if (documentSelector && textDocumentSyncOptions && textDocumentSyncOptions.save) {\r\n            this.register(this.messages, {\r\n                id: UUID.generateUuid(),\r\n                registerOptions: Object.assign({}, { documentSelector: documentSelector }, { includeText: !!textDocumentSyncOptions.save.includeText })\r\n            });\r\n        }\r\n    }\r\n    register(method, data) {\r\n        this._includeText = !!data.registerOptions.includeText;\r\n        super.register(method, data);\r\n    }\r\n}\r\nclass FileSystemWatcherFeature {\r\n    constructor(_client, _notifyFileEvent) {\r\n        this._client = _client;\r\n        this._notifyFileEvent = _notifyFileEvent;\r\n        this._watchers = new Map();\r\n    }\r\n    get messages() {\r\n        return vscode_languageserver_protocol_1.DidChangeWatchedFilesNotification.type;\r\n    }\r\n    fillClientCapabilities(capabilities) {\r\n        ensure(ensure(capabilities, 'workspace'), 'didChangeWatchedFiles').dynamicRegistration = true;\r\n    }\r\n    initialize(_capabilities, _documentSelector) {\r\n    }\r\n    register(_method, data) {\r\n        if (!Array.isArray(data.registerOptions.watchers)) {\r\n            return;\r\n        }\r\n        let disposeables = [];\r\n        for (let watcher of data.registerOptions.watchers) {\r\n            if (!Is.string(watcher.globPattern)) {\r\n                continue;\r\n            }\r\n            let watchCreate = true, watchChange = true, watchDelete = true;\r\n            if (watcher.kind !== void 0 && watcher.kind !== null) {\r\n                watchCreate = (watcher.kind & vscode_languageserver_protocol_1.WatchKind.Create) !== 0;\r\n                watchChange = (watcher.kind & vscode_languageserver_protocol_1.WatchKind.Change) != 0;\r\n                watchDelete = (watcher.kind & vscode_languageserver_protocol_1.WatchKind.Delete) != 0;\r\n            }\r\n            let fileSystemWatcher = vscode_1.workspace.createFileSystemWatcher(watcher.globPattern, !watchCreate, !watchChange, !watchDelete);\r\n            this.hookListeners(fileSystemWatcher, watchCreate, watchChange, watchDelete);\r\n            disposeables.push(fileSystemWatcher);\r\n        }\r\n        this._watchers.set(data.id, disposeables);\r\n    }\r\n    registerRaw(id, fileSystemWatchers) {\r\n        let disposeables = [];\r\n        for (let fileSystemWatcher of fileSystemWatchers) {\r\n            this.hookListeners(fileSystemWatcher, true, true, true, disposeables);\r\n        }\r\n        this._watchers.set(id, disposeables);\r\n    }\r\n    hookListeners(fileSystemWatcher, watchCreate, watchChange, watchDelete, listeners) {\r\n        if (watchCreate) {\r\n            fileSystemWatcher.onDidCreate((resource) => this._notifyFileEvent({\r\n                uri: this._client.code2ProtocolConverter.asUri(resource),\r\n                type: vscode_languageserver_protocol_1.FileChangeType.Created\r\n            }), null, listeners);\r\n        }\r\n        if (watchChange) {\r\n            fileSystemWatcher.onDidChange((resource) => this._notifyFileEvent({\r\n                uri: this._client.code2ProtocolConverter.asUri(resource),\r\n                type: vscode_languageserver_protocol_1.FileChangeType.Changed\r\n            }), null, listeners);\r\n        }\r\n        if (watchDelete) {\r\n            fileSystemWatcher.onDidDelete((resource) => this._notifyFileEvent({\r\n                uri: this._client.code2ProtocolConverter.asUri(resource),\r\n                type: vscode_languageserver_protocol_1.FileChangeType.Deleted\r\n            }), null, listeners);\r\n        }\r\n    }\r\n    unregister(id) {\r\n        let disposeables = this._watchers.get(id);\r\n        if (disposeables) {\r\n            for (let disposable of disposeables) {\r\n                disposable.dispose();\r\n            }\r\n        }\r\n    }\r\n    dispose() {\r\n        this._watchers.forEach((disposeables) => {\r\n            for (let disposable of disposeables) {\r\n                disposable.dispose();\r\n            }\r\n        });\r\n        this._watchers.clear();\r\n    }\r\n}\r\nclass TextDocumentFeature {\r\n    constructor(_client, _message) {\r\n        this._client = _client;\r\n        this._message = _message;\r\n        this._providers = new Map();\r\n    }\r\n    get messages() {\r\n        return this._message;\r\n    }\r\n    register(message, data) {\r\n        if (message.method !== this.messages.method) {\r\n            throw new Error(`Register called on wrong feature. Requested ${message.method} but reached feature ${this.messages.method}`);\r\n        }\r\n        if (!data.registerOptions.documentSelector) {\r\n            return;\r\n        }\r\n        let provider = this.registerLanguageProvider(data.registerOptions);\r\n        if (provider) {\r\n            this._providers.set(data.id, provider);\r\n        }\r\n    }\r\n    unregister(id) {\r\n        let provider = this._providers.get(id);\r\n        if (provider) {\r\n            provider.dispose();\r\n        }\r\n    }\r\n    dispose() {\r\n        this._providers.forEach((value) => {\r\n            value.dispose();\r\n        });\r\n        this._providers.clear();\r\n    }\r\n}\r\nexports.TextDocumentFeature = TextDocumentFeature;\r\nclass WorkspaceFeature {\r\n    constructor(_client, _message) {\r\n        this._client = _client;\r\n        this._message = _message;\r\n        this._providers = new Map();\r\n    }\r\n    get messages() {\r\n        return this._message;\r\n    }\r\n    register(message, data) {\r\n        if (message.method !== this.messages.method) {\r\n            throw new Error(`Register called on wron feature. Requested ${message.method} but reached feature ${this.messages.method}`);\r\n        }\r\n        let provider = this.registerLanguageProvider(data.registerOptions);\r\n        if (provider) {\r\n            this._providers.set(data.id, provider);\r\n        }\r\n    }\r\n    unregister(id) {\r\n        let provider = this._providers.get(id);\r\n        if (provider) {\r\n            provider.dispose();\r\n        }\r\n    }\r\n    dispose() {\r\n        this._providers.forEach((value) => {\r\n            value.dispose();\r\n        });\r\n        this._providers.clear();\r\n    }\r\n}\r\nclass CompletionItemFeature extends TextDocumentFeature {\r\n    constructor(client) {\r\n        super(client, vscode_languageserver_protocol_1.CompletionRequest.type);\r\n    }\r\n    fillClientCapabilities(capabilites) {\r\n        let completion = ensure(ensure(capabilites, 'textDocument'), 'completion');\r\n        completion.dynamicRegistration = true;\r\n        completion.contextSupport = true;\r\n        completion.completionItem = {\r\n            snippetSupport: true,\r\n            commitCharactersSupport: true,\r\n            documentationFormat: [vscode_languageserver_protocol_1.MarkupKind.Markdown, vscode_languageserver_protocol_1.MarkupKind.PlainText],\r\n            deprecatedSupport: true,\r\n            preselectSupport: true\r\n        };\r\n        completion.completionItemKind = { valueSet: SupportedCompletionItemKinds };\r\n    }\r\n    initialize(capabilities, documentSelector) {\r\n        if (!capabilities.completionProvider || !documentSelector) {\r\n            return;\r\n        }\r\n        this.register(this.messages, {\r\n            id: UUID.generateUuid(),\r\n            registerOptions: Object.assign({}, { documentSelector: documentSelector }, capabilities.completionProvider)\r\n        });\r\n    }\r\n    registerLanguageProvider(options) {\r\n        let triggerCharacters = options.triggerCharacters || [];\r\n        let client = this._client;\r\n        let provideCompletionItems = (document, position, context, token) => {\r\n            return client.sendRequest(vscode_languageserver_protocol_1.CompletionRequest.type, client.code2ProtocolConverter.asCompletionParams(document, position, context), token).then(client.protocol2CodeConverter.asCompletionResult, (error) => {\r\n                client.logFailedRequest(vscode_languageserver_protocol_1.CompletionRequest.type, error);\r\n                return Promise.resolve([]);\r\n            });\r\n        };\r\n        let resolveCompletionItem = (item, token) => {\r\n            return client.sendRequest(vscode_languageserver_protocol_1.CompletionResolveRequest.type, client.code2ProtocolConverter.asCompletionItem(item), token).then(client.protocol2CodeConverter.asCompletionItem, (error) => {\r\n                client.logFailedRequest(vscode_languageserver_protocol_1.CompletionResolveRequest.type, error);\r\n                return Promise.resolve(item);\r\n            });\r\n        };\r\n        let middleware = this._client.clientOptions.middleware;\r\n        return vscode_1.languages.registerCompletionItemProvider(options.documentSelector, {\r\n            provideCompletionItems: (document, position, token, context) => {\r\n                return middleware.provideCompletionItem\r\n                    ? middleware.provideCompletionItem(document, position, context, token, provideCompletionItems)\r\n                    : provideCompletionItems(document, position, context, token);\r\n            },\r\n            resolveCompletionItem: options.resolveProvider\r\n                ? (item, token) => {\r\n                    return middleware.resolveCompletionItem\r\n                        ? middleware.resolveCompletionItem(item, token, resolveCompletionItem)\r\n                        : resolveCompletionItem(item, token);\r\n                }\r\n                : undefined\r\n        }, ...triggerCharacters);\r\n    }\r\n}\r\nclass HoverFeature extends TextDocumentFeature {\r\n    constructor(client) {\r\n        super(client, vscode_languageserver_protocol_1.HoverRequest.type);\r\n    }\r\n    fillClientCapabilities(capabilites) {\r\n        const hoverCapability = (ensure(ensure(capabilites, 'textDocument'), 'hover'));\r\n        hoverCapability.dynamicRegistration = true;\r\n        hoverCapability.contentFormat = [vscode_languageserver_protocol_1.MarkupKind.Markdown, vscode_languageserver_protocol_1.MarkupKind.PlainText];\r\n    }\r\n    initialize(capabilities, documentSelector) {\r\n        if (!capabilities.hoverProvider || !documentSelector) {\r\n            return;\r\n        }\r\n        this.register(this.messages, {\r\n            id: UUID.generateUuid(),\r\n            registerOptions: Object.assign({}, { documentSelector: documentSelector })\r\n        });\r\n    }\r\n    registerLanguageProvider(options) {\r\n        let client = this._client;\r\n        let provideHover = (document, position, token) => {\r\n            return client.sendRequest(vscode_languageserver_protocol_1.HoverRequest.type, client.code2ProtocolConverter.asTextDocumentPositionParams(document, position), token).then(client.protocol2CodeConverter.asHover, (error) => {\r\n                client.logFailedRequest(vscode_languageserver_protocol_1.HoverRequest.type, error);\r\n                return Promise.resolve(null);\r\n            });\r\n        };\r\n        let middleware = client.clientOptions.middleware;\r\n        return vscode_1.languages.registerHoverProvider(options.documentSelector, {\r\n            provideHover: (document, position, token) => {\r\n                return middleware.provideHover\r\n                    ? middleware.provideHover(document, position, token, provideHover)\r\n                    : provideHover(document, position, token);\r\n            }\r\n        });\r\n    }\r\n}\r\nclass SignatureHelpFeature extends TextDocumentFeature {\r\n    constructor(client) {\r\n        super(client, vscode_languageserver_protocol_1.SignatureHelpRequest.type);\r\n    }\r\n    fillClientCapabilities(capabilites) {\r\n        let config = ensure(ensure(capabilites, 'textDocument'), 'signatureHelp');\r\n        config.dynamicRegistration = true;\r\n        config.signatureInformation = { documentationFormat: [vscode_languageserver_protocol_1.MarkupKind.Markdown, vscode_languageserver_protocol_1.MarkupKind.PlainText] };\r\n        config.signatureInformation.parameterInformation = { labelOffsetSupport: true };\r\n    }\r\n    initialize(capabilities, documentSelector) {\r\n        if (!capabilities.signatureHelpProvider || !documentSelector) {\r\n            return;\r\n        }\r\n        this.register(this.messages, {\r\n            id: UUID.generateUuid(),\r\n            registerOptions: Object.assign({}, { documentSelector: documentSelector }, capabilities.signatureHelpProvider)\r\n        });\r\n    }\r\n    registerLanguageProvider(options) {\r\n        let client = this._client;\r\n        let providerSignatureHelp = (document, position, token) => {\r\n            return client.sendRequest(vscode_languageserver_protocol_1.SignatureHelpRequest.type, client.code2ProtocolConverter.asTextDocumentPositionParams(document, position), token).then(client.protocol2CodeConverter.asSignatureHelp, (error) => {\r\n                client.logFailedRequest(vscode_languageserver_protocol_1.SignatureHelpRequest.type, error);\r\n                return Promise.resolve(null);\r\n            });\r\n        };\r\n        let middleware = client.clientOptions.middleware;\r\n        let triggerCharacters = options.triggerCharacters || [];\r\n        return vscode_1.languages.registerSignatureHelpProvider(options.documentSelector, {\r\n            provideSignatureHelp: (document, position, token) => {\r\n                return middleware.provideSignatureHelp\r\n                    ? middleware.provideSignatureHelp(document, position, token, providerSignatureHelp)\r\n                    : providerSignatureHelp(document, position, token);\r\n            }\r\n        }, ...triggerCharacters);\r\n    }\r\n}\r\nclass DefinitionFeature extends TextDocumentFeature {\r\n    constructor(client) {\r\n        super(client, vscode_languageserver_protocol_1.DefinitionRequest.type);\r\n    }\r\n    fillClientCapabilities(capabilites) {\r\n        let definitionSupport = ensure(ensure(capabilites, 'textDocument'), 'definition');\r\n        definitionSupport.dynamicRegistration = true;\r\n        definitionSupport.linkSupport = true;\r\n    }\r\n    initialize(capabilities, documentSelector) {\r\n        if (!capabilities.definitionProvider || !documentSelector) {\r\n            return;\r\n        }\r\n        this.register(this.messages, {\r\n            id: UUID.generateUuid(),\r\n            registerOptions: Object.assign({}, { documentSelector: documentSelector })\r\n        });\r\n    }\r\n    registerLanguageProvider(options) {\r\n        let client = this._client;\r\n        let provideDefinition = (document, position, token) => {\r\n            return client.sendRequest(vscode_languageserver_protocol_1.DefinitionRequest.type, client.code2ProtocolConverter.asTextDocumentPositionParams(document, position), token).then(client.protocol2CodeConverter.asDefinitionResult, (error) => {\r\n                client.logFailedRequest(vscode_languageserver_protocol_1.DefinitionRequest.type, error);\r\n                return Promise.resolve(null);\r\n            });\r\n        };\r\n        let middleware = client.clientOptions.middleware;\r\n        return vscode_1.languages.registerDefinitionProvider(options.documentSelector, {\r\n            provideDefinition: (document, position, token) => {\r\n                return middleware.provideDefinition\r\n                    ? middleware.provideDefinition(document, position, token, provideDefinition)\r\n                    : provideDefinition(document, position, token);\r\n            }\r\n        });\r\n    }\r\n}\r\nclass ReferencesFeature extends TextDocumentFeature {\r\n    constructor(client) {\r\n        super(client, vscode_languageserver_protocol_1.ReferencesRequest.type);\r\n    }\r\n    fillClientCapabilities(capabilites) {\r\n        ensure(ensure(capabilites, 'textDocument'), 'references').dynamicRegistration = true;\r\n    }\r\n    initialize(capabilities, documentSelector) {\r\n        if (!capabilities.referencesProvider || !documentSelector) {\r\n            return;\r\n        }\r\n        this.register(this.messages, {\r\n            id: UUID.generateUuid(),\r\n            registerOptions: Object.assign({}, { documentSelector: documentSelector })\r\n        });\r\n    }\r\n    registerLanguageProvider(options) {\r\n        let client = this._client;\r\n        let providerReferences = (document, position, options, token) => {\r\n            return client.sendRequest(vscode_languageserver_protocol_1.ReferencesRequest.type, client.code2ProtocolConverter.asReferenceParams(document, position, options), token).then(client.protocol2CodeConverter.asReferences, (error) => {\r\n                client.logFailedRequest(vscode_languageserver_protocol_1.ReferencesRequest.type, error);\r\n                return Promise.resolve([]);\r\n            });\r\n        };\r\n        let middleware = client.clientOptions.middleware;\r\n        return vscode_1.languages.registerReferenceProvider(options.documentSelector, {\r\n            provideReferences: (document, position, options, token) => {\r\n                return middleware.provideReferences\r\n                    ? middleware.provideReferences(document, position, options, token, providerReferences)\r\n                    : providerReferences(document, position, options, token);\r\n            }\r\n        });\r\n    }\r\n}\r\nclass DocumentHighlightFeature extends TextDocumentFeature {\r\n    constructor(client) {\r\n        super(client, vscode_languageserver_protocol_1.DocumentHighlightRequest.type);\r\n    }\r\n    fillClientCapabilities(capabilites) {\r\n        ensure(ensure(capabilites, 'textDocument'), 'documentHighlight').dynamicRegistration = true;\r\n    }\r\n    initialize(capabilities, documentSelector) {\r\n        if (!capabilities.documentHighlightProvider || !documentSelector) {\r\n            return;\r\n        }\r\n        this.register(this.messages, {\r\n            id: UUID.generateUuid(),\r\n            registerOptions: Object.assign({}, { documentSelector: documentSelector })\r\n        });\r\n    }\r\n    registerLanguageProvider(options) {\r\n        let client = this._client;\r\n        let provideDocumentHighlights = (document, position, token) => {\r\n            return client.sendRequest(vscode_languageserver_protocol_1.DocumentHighlightRequest.type, client.code2ProtocolConverter.asTextDocumentPositionParams(document, position), token).then(client.protocol2CodeConverter.asDocumentHighlights, (error) => {\r\n                client.logFailedRequest(vscode_languageserver_protocol_1.DocumentHighlightRequest.type, error);\r\n                return Promise.resolve([]);\r\n            });\r\n        };\r\n        let middleware = client.clientOptions.middleware;\r\n        return vscode_1.languages.registerDocumentHighlightProvider(options.documentSelector, {\r\n            provideDocumentHighlights: (document, position, token) => {\r\n                return middleware.provideDocumentHighlights\r\n                    ? middleware.provideDocumentHighlights(document, position, token, provideDocumentHighlights)\r\n                    : provideDocumentHighlights(document, position, token);\r\n            }\r\n        });\r\n    }\r\n}\r\nclass DocumentSymbolFeature extends TextDocumentFeature {\r\n    constructor(client) {\r\n        super(client, vscode_languageserver_protocol_1.DocumentSymbolRequest.type);\r\n    }\r\n    fillClientCapabilities(capabilites) {\r\n        let symbolCapabilities = ensure(ensure(capabilites, 'textDocument'), 'documentSymbol');\r\n        symbolCapabilities.dynamicRegistration = true;\r\n        symbolCapabilities.symbolKind = {\r\n            valueSet: SupportedSymbolKinds\r\n        };\r\n        symbolCapabilities.hierarchicalDocumentSymbolSupport = true;\r\n    }\r\n    initialize(capabilities, documentSelector) {\r\n        if (!capabilities.documentSymbolProvider || !documentSelector) {\r\n            return;\r\n        }\r\n        this.register(this.messages, {\r\n            id: UUID.generateUuid(),\r\n            registerOptions: Object.assign({}, { documentSelector: documentSelector })\r\n        });\r\n    }\r\n    registerLanguageProvider(options) {\r\n        let client = this._client;\r\n        let provideDocumentSymbols = (document, token) => {\r\n            return client.sendRequest(vscode_languageserver_protocol_1.DocumentSymbolRequest.type, client.code2ProtocolConverter.asDocumentSymbolParams(document), token).then((data) => {\r\n                if (data === null) {\r\n                    return undefined;\r\n                }\r\n                if (data.length === 0) {\r\n                    return [];\r\n                }\r\n                else {\r\n                    let element = data[0];\r\n                    if (vscode_languageserver_protocol_1.DocumentSymbol.is(element)) {\r\n                        return client.protocol2CodeConverter.asDocumentSymbols(data);\r\n                    }\r\n                    else {\r\n                        return client.protocol2CodeConverter.asSymbolInformations(data);\r\n                    }\r\n                }\r\n            }, (error) => {\r\n                client.logFailedRequest(vscode_languageserver_protocol_1.DocumentSymbolRequest.type, error);\r\n                return Promise.resolve([]);\r\n            });\r\n        };\r\n        let middleware = client.clientOptions.middleware;\r\n        return vscode_1.languages.registerDocumentSymbolProvider(options.documentSelector, {\r\n            provideDocumentSymbols: (document, token) => {\r\n                return middleware.provideDocumentSymbols\r\n                    ? middleware.provideDocumentSymbols(document, token, provideDocumentSymbols)\r\n                    : provideDocumentSymbols(document, token);\r\n            }\r\n        });\r\n    }\r\n}\r\nclass WorkspaceSymbolFeature extends WorkspaceFeature {\r\n    constructor(client) {\r\n        super(client, vscode_languageserver_protocol_1.WorkspaceSymbolRequest.type);\r\n    }\r\n    fillClientCapabilities(capabilites) {\r\n        let symbolCapabilities = ensure(ensure(capabilites, 'workspace'), 'symbol');\r\n        symbolCapabilities.dynamicRegistration = true;\r\n        symbolCapabilities.symbolKind = {\r\n            valueSet: SupportedSymbolKinds\r\n        };\r\n    }\r\n    initialize(capabilities) {\r\n        if (!capabilities.workspaceSymbolProvider) {\r\n            return;\r\n        }\r\n        this.register(this.messages, {\r\n            id: UUID.generateUuid(),\r\n            registerOptions: undefined\r\n        });\r\n    }\r\n    registerLanguageProvider(_options) {\r\n        let client = this._client;\r\n        let provideWorkspaceSymbols = (query, token) => {\r\n            return client.sendRequest(vscode_languageserver_protocol_1.WorkspaceSymbolRequest.type, { query }, token).then(client.protocol2CodeConverter.asSymbolInformations, (error) => {\r\n                client.logFailedRequest(vscode_languageserver_protocol_1.WorkspaceSymbolRequest.type, error);\r\n                return Promise.resolve([]);\r\n            });\r\n        };\r\n        let middleware = client.clientOptions.middleware;\r\n        return vscode_1.languages.registerWorkspaceSymbolProvider({\r\n            provideWorkspaceSymbols: (query, token) => {\r\n                return middleware.provideWorkspaceSymbols\r\n                    ? middleware.provideWorkspaceSymbols(query, token, provideWorkspaceSymbols)\r\n                    : provideWorkspaceSymbols(query, token);\r\n            }\r\n        });\r\n    }\r\n}\r\nclass CodeActionFeature extends TextDocumentFeature {\r\n    constructor(client) {\r\n        super(client, vscode_languageserver_protocol_1.CodeActionRequest.type);\r\n    }\r\n    fillClientCapabilities(capabilites) {\r\n        const cap = ensure(ensure(capabilites, 'textDocument'), 'codeAction');\r\n        cap.dynamicRegistration = true;\r\n        cap.codeActionLiteralSupport = {\r\n            codeActionKind: {\r\n                valueSet: [\r\n                    '',\r\n                    vscode_languageserver_protocol_1.CodeActionKind.QuickFix,\r\n                    vscode_languageserver_protocol_1.CodeActionKind.Refactor,\r\n                    vscode_languageserver_protocol_1.CodeActionKind.RefactorExtract,\r\n                    vscode_languageserver_protocol_1.CodeActionKind.RefactorInline,\r\n                    vscode_languageserver_protocol_1.CodeActionKind.RefactorRewrite,\r\n                    vscode_languageserver_protocol_1.CodeActionKind.Source,\r\n                    vscode_languageserver_protocol_1.CodeActionKind.SourceOrganizeImports\r\n                ]\r\n            }\r\n        };\r\n    }\r\n    initialize(capabilities, documentSelector) {\r\n        if (!capabilities.codeActionProvider || !documentSelector) {\r\n            return;\r\n        }\r\n        let codeActionKinds = undefined;\r\n        if (!Is.boolean(capabilities.codeActionProvider)) {\r\n            codeActionKinds = capabilities.codeActionProvider.codeActionKinds;\r\n        }\r\n        this.register(this.messages, {\r\n            id: UUID.generateUuid(),\r\n            registerOptions: { documentSelector: documentSelector, codeActionKinds }\r\n        });\r\n    }\r\n    registerLanguageProvider(options) {\r\n        let client = this._client;\r\n        let provideCodeActions = (document, range, context, token) => {\r\n            let params = {\r\n                textDocument: client.code2ProtocolConverter.asTextDocumentIdentifier(document),\r\n                range: client.code2ProtocolConverter.asRange(range),\r\n                context: client.code2ProtocolConverter.asCodeActionContext(context)\r\n            };\r\n            return client.sendRequest(vscode_languageserver_protocol_1.CodeActionRequest.type, params, token).then((values) => {\r\n                if (values === null) {\r\n                    return undefined;\r\n                }\r\n                let result = [];\r\n                for (let item of values) {\r\n                    if (vscode_languageserver_protocol_1.Command.is(item)) {\r\n                        result.push(client.protocol2CodeConverter.asCommand(item));\r\n                    }\r\n                    else {\r\n                        result.push(client.protocol2CodeConverter.asCodeAction(item));\r\n                    }\r\n                    ;\r\n                }\r\n                return result;\r\n            }, (error) => {\r\n                client.logFailedRequest(vscode_languageserver_protocol_1.CodeActionRequest.type, error);\r\n                return Promise.resolve([]);\r\n            });\r\n        };\r\n        let middleware = client.clientOptions.middleware;\r\n        return vscode_1.languages.registerCodeActionsProvider(options.documentSelector, {\r\n            provideCodeActions: (document, range, context, token) => {\r\n                return middleware.provideCodeActions\r\n                    ? middleware.provideCodeActions(document, range, context, token, provideCodeActions)\r\n                    : provideCodeActions(document, range, context, token);\r\n            }\r\n        }, options.codeActionKinds\r\n            ? { providedCodeActionKinds: client.protocol2CodeConverter.asCodeActionKinds(options.codeActionKinds) }\r\n            : undefined);\r\n    }\r\n}\r\nclass CodeLensFeature extends TextDocumentFeature {\r\n    constructor(client) {\r\n        super(client, vscode_languageserver_protocol_1.CodeLensRequest.type);\r\n    }\r\n    fillClientCapabilities(capabilites) {\r\n        ensure(ensure(capabilites, 'textDocument'), 'codeLens').dynamicRegistration = true;\r\n    }\r\n    initialize(capabilities, documentSelector) {\r\n        if (!capabilities.codeLensProvider || !documentSelector) {\r\n            return;\r\n        }\r\n        this.register(this.messages, {\r\n            id: UUID.generateUuid(),\r\n            registerOptions: Object.assign({}, { documentSelector: documentSelector }, capabilities.codeLensProvider)\r\n        });\r\n    }\r\n    registerLanguageProvider(options) {\r\n        let client = this._client;\r\n        let provideCodeLenses = (document, token) => {\r\n            return client.sendRequest(vscode_languageserver_protocol_1.CodeLensRequest.type, client.code2ProtocolConverter.asCodeLensParams(document), token).then(client.protocol2CodeConverter.asCodeLenses, (error) => {\r\n                client.logFailedRequest(vscode_languageserver_protocol_1.CodeLensRequest.type, error);\r\n                return Promise.resolve([]);\r\n            });\r\n        };\r\n        let resolveCodeLens = (codeLens, token) => {\r\n            return client.sendRequest(vscode_languageserver_protocol_1.CodeLensResolveRequest.type, client.code2ProtocolConverter.asCodeLens(codeLens), token).then(client.protocol2CodeConverter.asCodeLens, (error) => {\r\n                client.logFailedRequest(vscode_languageserver_protocol_1.CodeLensResolveRequest.type, error);\r\n                return codeLens;\r\n            });\r\n        };\r\n        let middleware = client.clientOptions.middleware;\r\n        return vscode_1.languages.registerCodeLensProvider(options.documentSelector, {\r\n            provideCodeLenses: (document, token) => {\r\n                return middleware.provideCodeLenses\r\n                    ? middleware.provideCodeLenses(document, token, provideCodeLenses)\r\n                    : provideCodeLenses(document, token);\r\n            },\r\n            resolveCodeLens: (options.resolveProvider)\r\n                ? (codeLens, token) => {\r\n                    return middleware.resolveCodeLens\r\n                        ? middleware.resolveCodeLens(codeLens, token, resolveCodeLens)\r\n                        : resolveCodeLens(codeLens, token);\r\n                }\r\n                : undefined\r\n        });\r\n    }\r\n}\r\nclass DocumentFormattingFeature extends TextDocumentFeature {\r\n    constructor(client) {\r\n        super(client, vscode_languageserver_protocol_1.DocumentFormattingRequest.type);\r\n    }\r\n    fillClientCapabilities(capabilites) {\r\n        ensure(ensure(capabilites, 'textDocument'), 'formatting').dynamicRegistration = true;\r\n    }\r\n    initialize(capabilities, documentSelector) {\r\n        if (!capabilities.documentFormattingProvider || !documentSelector) {\r\n            return;\r\n        }\r\n        this.register(this.messages, {\r\n            id: UUID.generateUuid(),\r\n            registerOptions: Object.assign({}, { documentSelector: documentSelector })\r\n        });\r\n    }\r\n    registerLanguageProvider(options) {\r\n        let client = this._client;\r\n        let provideDocumentFormattingEdits = (document, options, token) => {\r\n            let params = {\r\n                textDocument: client.code2ProtocolConverter.asTextDocumentIdentifier(document),\r\n                options: client.code2ProtocolConverter.asFormattingOptions(options)\r\n            };\r\n            return client.sendRequest(vscode_languageserver_protocol_1.DocumentFormattingRequest.type, params, token).then(client.protocol2CodeConverter.asTextEdits, (error) => {\r\n                client.logFailedRequest(vscode_languageserver_protocol_1.DocumentFormattingRequest.type, error);\r\n                return Promise.resolve([]);\r\n            });\r\n        };\r\n        let middleware = client.clientOptions.middleware;\r\n        return vscode_1.languages.registerDocumentFormattingEditProvider(options.documentSelector, {\r\n            provideDocumentFormattingEdits: (document, options, token) => {\r\n                return middleware.provideDocumentFormattingEdits\r\n                    ? middleware.provideDocumentFormattingEdits(document, options, token, provideDocumentFormattingEdits)\r\n                    : provideDocumentFormattingEdits(document, options, token);\r\n            }\r\n        });\r\n    }\r\n}\r\nclass DocumentRangeFormattingFeature extends TextDocumentFeature {\r\n    constructor(client) {\r\n        super(client, vscode_languageserver_protocol_1.DocumentRangeFormattingRequest.type);\r\n    }\r\n    fillClientCapabilities(capabilites) {\r\n        ensure(ensure(capabilites, 'textDocument'), 'rangeFormatting').dynamicRegistration = true;\r\n    }\r\n    initialize(capabilities, documentSelector) {\r\n        if (!capabilities.documentRangeFormattingProvider || !documentSelector) {\r\n            return;\r\n        }\r\n        this.register(this.messages, {\r\n            id: UUID.generateUuid(),\r\n            registerOptions: Object.assign({}, { documentSelector: documentSelector })\r\n        });\r\n    }\r\n    registerLanguageProvider(options) {\r\n        let client = this._client;\r\n        let provideDocumentRangeFormattingEdits = (document, range, options, token) => {\r\n            let params = {\r\n                textDocument: client.code2ProtocolConverter.asTextDocumentIdentifier(document),\r\n                range: client.code2ProtocolConverter.asRange(range),\r\n                options: client.code2ProtocolConverter.asFormattingOptions(options)\r\n            };\r\n            return client.sendRequest(vscode_languageserver_protocol_1.DocumentRangeFormattingRequest.type, params, token).then(client.protocol2CodeConverter.asTextEdits, (error) => {\r\n                client.logFailedRequest(vscode_languageserver_protocol_1.DocumentRangeFormattingRequest.type, error);\r\n                return Promise.resolve([]);\r\n            });\r\n        };\r\n        let middleware = client.clientOptions.middleware;\r\n        return vscode_1.languages.registerDocumentRangeFormattingEditProvider(options.documentSelector, {\r\n            provideDocumentRangeFormattingEdits: (document, range, options, token) => {\r\n                return middleware.provideDocumentRangeFormattingEdits\r\n                    ? middleware.provideDocumentRangeFormattingEdits(document, range, options, token, provideDocumentRangeFormattingEdits)\r\n                    : provideDocumentRangeFormattingEdits(document, range, options, token);\r\n            }\r\n        });\r\n    }\r\n}\r\nclass DocumentOnTypeFormattingFeature extends TextDocumentFeature {\r\n    constructor(client) {\r\n        super(client, vscode_languageserver_protocol_1.DocumentOnTypeFormattingRequest.type);\r\n    }\r\n    fillClientCapabilities(capabilites) {\r\n        ensure(ensure(capabilites, 'textDocument'), 'onTypeFormatting').dynamicRegistration = true;\r\n    }\r\n    initialize(capabilities, documentSelector) {\r\n        if (!capabilities.documentOnTypeFormattingProvider || !documentSelector) {\r\n            return;\r\n        }\r\n        this.register(this.messages, {\r\n            id: UUID.generateUuid(),\r\n            registerOptions: Object.assign({}, { documentSelector: documentSelector }, capabilities.documentOnTypeFormattingProvider)\r\n        });\r\n    }\r\n    registerLanguageProvider(options) {\r\n        let client = this._client;\r\n        let moreTriggerCharacter = options.moreTriggerCharacter || [];\r\n        let provideOnTypeFormattingEdits = (document, position, ch, options, token) => {\r\n            let params = {\r\n                textDocument: client.code2ProtocolConverter.asTextDocumentIdentifier(document),\r\n                position: client.code2ProtocolConverter.asPosition(position),\r\n                ch: ch,\r\n                options: client.code2ProtocolConverter.asFormattingOptions(options)\r\n            };\r\n            return client.sendRequest(vscode_languageserver_protocol_1.DocumentOnTypeFormattingRequest.type, params, token).then(client.protocol2CodeConverter.asTextEdits, (error) => {\r\n                client.logFailedRequest(vscode_languageserver_protocol_1.DocumentOnTypeFormattingRequest.type, error);\r\n                return Promise.resolve([]);\r\n            });\r\n        };\r\n        let middleware = client.clientOptions.middleware;\r\n        return vscode_1.languages.registerOnTypeFormattingEditProvider(options.documentSelector, {\r\n            provideOnTypeFormattingEdits: (document, position, ch, options, token) => {\r\n                return middleware.provideOnTypeFormattingEdits\r\n                    ? middleware.provideOnTypeFormattingEdits(document, position, ch, options, token, provideOnTypeFormattingEdits)\r\n                    : provideOnTypeFormattingEdits(document, position, ch, options, token);\r\n            }\r\n        }, options.firstTriggerCharacter, ...moreTriggerCharacter);\r\n    }\r\n}\r\nclass RenameFeature extends TextDocumentFeature {\r\n    constructor(client) {\r\n        super(client, vscode_languageserver_protocol_1.RenameRequest.type);\r\n    }\r\n    fillClientCapabilities(capabilites) {\r\n        let rename = ensure(ensure(capabilites, 'textDocument'), 'rename');\r\n        rename.dynamicRegistration = true;\r\n        rename.prepareSupport = true;\r\n    }\r\n    initialize(capabilities, documentSelector) {\r\n        if (!capabilities.renameProvider || !documentSelector) {\r\n            return;\r\n        }\r\n        let options = Object.assign({}, { documentSelector: documentSelector });\r\n        if (Is.boolean(capabilities.renameProvider)) {\r\n            options.prepareProvider = false;\r\n        }\r\n        else {\r\n            options.prepareProvider = capabilities.renameProvider.prepareProvider;\r\n        }\r\n        this.register(this.messages, {\r\n            id: UUID.generateUuid(),\r\n            registerOptions: options\r\n        });\r\n    }\r\n    registerLanguageProvider(options) {\r\n        let client = this._client;\r\n        let provideRenameEdits = (document, position, newName, token) => {\r\n            let params = {\r\n                textDocument: client.code2ProtocolConverter.asTextDocumentIdentifier(document),\r\n                position: client.code2ProtocolConverter.asPosition(position),\r\n                newName: newName\r\n            };\r\n            return client.sendRequest(vscode_languageserver_protocol_1.RenameRequest.type, params, token).then(client.protocol2CodeConverter.asWorkspaceEdit, (error) => {\r\n                client.logFailedRequest(vscode_languageserver_protocol_1.RenameRequest.type, error);\r\n                return Promise.reject(new Error(error.message));\r\n            });\r\n        };\r\n        let prepareRename = (document, position, token) => {\r\n            let params = {\r\n                textDocument: client.code2ProtocolConverter.asTextDocumentIdentifier(document),\r\n                position: client.code2ProtocolConverter.asPosition(position),\r\n            };\r\n            return client.sendRequest(vscode_languageserver_protocol_1.PrepareRenameRequest.type, params, token).then((result) => {\r\n                if (vscode_languageserver_protocol_1.Range.is(result)) {\r\n                    return client.protocol2CodeConverter.asRange(result);\r\n                }\r\n                else if (result && result.range) {\r\n                    return {\r\n                        range: client.protocol2CodeConverter.asRange(result.range),\r\n                        placeholder: result.placeholder\r\n                    };\r\n                }\r\n                return null;\r\n            }, (error) => {\r\n                client.logFailedRequest(vscode_languageserver_protocol_1.PrepareRenameRequest.type, error);\r\n                return Promise.reject(new Error(error.message));\r\n            });\r\n        };\r\n        let middleware = client.clientOptions.middleware;\r\n        return vscode_1.languages.registerRenameProvider(options.documentSelector, {\r\n            provideRenameEdits: (document, position, newName, token) => {\r\n                return middleware.provideRenameEdits\r\n                    ? middleware.provideRenameEdits(document, position, newName, token, provideRenameEdits)\r\n                    : provideRenameEdits(document, position, newName, token);\r\n            },\r\n            prepareRename: options.prepareProvider\r\n                ? (document, position, token) => {\r\n                    return middleware.prepareRename\r\n                        ? middleware.prepareRename(document, position, token, prepareRename)\r\n                        : prepareRename(document, position, token);\r\n                }\r\n                : undefined\r\n        });\r\n    }\r\n}\r\nclass DocumentLinkFeature extends TextDocumentFeature {\r\n    constructor(client) {\r\n        super(client, vscode_languageserver_protocol_1.DocumentLinkRequest.type);\r\n    }\r\n    fillClientCapabilities(capabilites) {\r\n        ensure(ensure(capabilites, 'textDocument'), 'documentLink').dynamicRegistration = true;\r\n    }\r\n    initialize(capabilities, documentSelector) {\r\n        if (!capabilities.documentLinkProvider || !documentSelector) {\r\n            return;\r\n        }\r\n        this.register(this.messages, {\r\n            id: UUID.generateUuid(),\r\n            registerOptions: Object.assign({}, { documentSelector: documentSelector }, capabilities.documentLinkProvider)\r\n        });\r\n    }\r\n    registerLanguageProvider(options) {\r\n        let client = this._client;\r\n        let provideDocumentLinks = (document, token) => {\r\n            return client.sendRequest(vscode_languageserver_protocol_1.DocumentLinkRequest.type, client.code2ProtocolConverter.asDocumentLinkParams(document), token).then(client.protocol2CodeConverter.asDocumentLinks, (error) => {\r\n                client.logFailedRequest(vscode_languageserver_protocol_1.DocumentLinkRequest.type, error);\r\n                Promise.resolve(new Error(error.message));\r\n            });\r\n        };\r\n        let resolveDocumentLink = (link, token) => {\r\n            return client.sendRequest(vscode_languageserver_protocol_1.DocumentLinkResolveRequest.type, client.code2ProtocolConverter.asDocumentLink(link), token).then(client.protocol2CodeConverter.asDocumentLink, (error) => {\r\n                client.logFailedRequest(vscode_languageserver_protocol_1.DocumentLinkResolveRequest.type, error);\r\n                Promise.resolve(new Error(error.message));\r\n            });\r\n        };\r\n        let middleware = client.clientOptions.middleware;\r\n        return vscode_1.languages.registerDocumentLinkProvider(options.documentSelector, {\r\n            provideDocumentLinks: (document, token) => {\r\n                return middleware.provideDocumentLinks\r\n                    ? middleware.provideDocumentLinks(document, token, provideDocumentLinks)\r\n                    : provideDocumentLinks(document, token);\r\n            },\r\n            resolveDocumentLink: options.resolveProvider\r\n                ? (link, token) => {\r\n                    return middleware.resolveDocumentLink\r\n                        ? middleware.resolveDocumentLink(link, token, resolveDocumentLink)\r\n                        : resolveDocumentLink(link, token);\r\n                }\r\n                : undefined\r\n        });\r\n    }\r\n}\r\nclass ConfigurationFeature {\r\n    constructor(_client) {\r\n        this._client = _client;\r\n        this._listeners = new Map();\r\n    }\r\n    get messages() {\r\n        return vscode_languageserver_protocol_1.DidChangeConfigurationNotification.type;\r\n    }\r\n    fillClientCapabilities(capabilities) {\r\n        ensure(ensure(capabilities, 'workspace'), 'didChangeConfiguration').dynamicRegistration = true;\r\n    }\r\n    initialize() {\r\n        let section = this._client.clientOptions.synchronize.configurationSection;\r\n        if (section !== void 0) {\r\n            this.register(this.messages, {\r\n                id: UUID.generateUuid(),\r\n                registerOptions: {\r\n                    section: section\r\n                }\r\n            });\r\n        }\r\n    }\r\n    register(_message, data) {\r\n        let disposable = vscode_1.workspace.onDidChangeConfiguration((event) => {\r\n            this.onDidChangeConfiguration(data.registerOptions.section, event);\r\n        });\r\n        this._listeners.set(data.id, disposable);\r\n        if (data.registerOptions.section !== void 0) {\r\n            this.onDidChangeConfiguration(data.registerOptions.section, undefined);\r\n        }\r\n    }\r\n    unregister(id) {\r\n        let disposable = this._listeners.get(id);\r\n        if (disposable) {\r\n            this._listeners.delete(id);\r\n            disposable.dispose();\r\n        }\r\n    }\r\n    dispose() {\r\n        for (let disposable of this._listeners.values()) {\r\n            disposable.dispose();\r\n        }\r\n        this._listeners.clear();\r\n    }\r\n    onDidChangeConfiguration(configurationSection, event) {\r\n        let sections;\r\n        if (Is.string(configurationSection)) {\r\n            sections = [configurationSection];\r\n        }\r\n        else {\r\n            sections = configurationSection;\r\n        }\r\n        if (sections !== void 0 && event !== void 0) {\r\n            let affected = sections.some((section) => event.affectsConfiguration(section));\r\n            if (!affected) {\r\n                return;\r\n            }\r\n        }\r\n        let didChangeConfiguration = (sections) => {\r\n            if (sections === void 0) {\r\n                this._client.sendNotification(vscode_languageserver_protocol_1.DidChangeConfigurationNotification.type, { settings: null });\r\n                return;\r\n            }\r\n            this._client.sendNotification(vscode_languageserver_protocol_1.DidChangeConfigurationNotification.type, { settings: this.extractSettingsInformation(sections) });\r\n        };\r\n        let middleware = this.getMiddleware();\r\n        middleware\r\n            ? middleware(sections, didChangeConfiguration)\r\n            : didChangeConfiguration(sections);\r\n    }\r\n    extractSettingsInformation(keys) {\r\n        function ensurePath(config, path) {\r\n            let current = config;\r\n            for (let i = 0; i < path.length - 1; i++) {\r\n                let obj = current[path[i]];\r\n                if (!obj) {\r\n                    obj = Object.create(null);\r\n                    current[path[i]] = obj;\r\n                }\r\n                current = obj;\r\n            }\r\n            return current;\r\n        }\r\n        let resource = this._client.clientOptions.workspaceFolder\r\n            ? this._client.clientOptions.workspaceFolder.uri\r\n            : undefined;\r\n        let result = Object.create(null);\r\n        for (let i = 0; i < keys.length; i++) {\r\n            let key = keys[i];\r\n            let index = key.indexOf('.');\r\n            let config = null;\r\n            if (index >= 0) {\r\n                config = vscode_1.workspace.getConfiguration(key.substr(0, index), resource).get(key.substr(index + 1));\r\n            }\r\n            else {\r\n                config = vscode_1.workspace.getConfiguration(key, resource);\r\n            }\r\n            if (config) {\r\n                let path = keys[i].split('.');\r\n                ensurePath(result, path)[path[path.length - 1]] = config;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    getMiddleware() {\r\n        let middleware = this._client.clientOptions.middleware;\r\n        if (middleware.workspace && middleware.workspace.didChangeConfiguration) {\r\n            return middleware.workspace.didChangeConfiguration;\r\n        }\r\n        else {\r\n            return undefined;\r\n        }\r\n    }\r\n}\r\nclass ExecuteCommandFeature {\r\n    constructor(_client) {\r\n        this._client = _client;\r\n        this._commands = new Map();\r\n    }\r\n    get messages() {\r\n        return vscode_languageserver_protocol_1.ExecuteCommandRequest.type;\r\n    }\r\n    fillClientCapabilities(capabilities) {\r\n        ensure(ensure(capabilities, 'workspace'), 'executeCommand').dynamicRegistration = true;\r\n    }\r\n    initialize(capabilities) {\r\n        if (!capabilities.executeCommandProvider) {\r\n            return;\r\n        }\r\n        this.register(this.messages, {\r\n            id: UUID.generateUuid(),\r\n            registerOptions: Object.assign({}, capabilities.executeCommandProvider)\r\n        });\r\n    }\r\n    register(_message, data) {\r\n        let client = this._client;\r\n        if (data.registerOptions.commands) {\r\n            let disposeables = [];\r\n            for (const command of data.registerOptions.commands) {\r\n                disposeables.push(vscode_1.commands.registerCommand(command, (...args) => {\r\n                    let params = {\r\n                        command,\r\n                        arguments: args\r\n                    };\r\n                    return client.sendRequest(vscode_languageserver_protocol_1.ExecuteCommandRequest.type, params).then(undefined, (error) => {\r\n                        client.logFailedRequest(vscode_languageserver_protocol_1.ExecuteCommandRequest.type, error);\r\n                    });\r\n                }));\r\n            }\r\n            this._commands.set(data.id, disposeables);\r\n        }\r\n    }\r\n    unregister(id) {\r\n        let disposeables = this._commands.get(id);\r\n        if (disposeables) {\r\n            disposeables.forEach(disposable => disposable.dispose());\r\n        }\r\n    }\r\n    dispose() {\r\n        this._commands.forEach((value) => {\r\n            value.forEach(disposable => disposable.dispose());\r\n        });\r\n        this._commands.clear();\r\n    }\r\n}\r\nvar MessageTransports;\r\n(function (MessageTransports) {\r\n    function is(value) {\r\n        let candidate = value;\r\n        return candidate && vscode_languageserver_protocol_1.MessageReader.is(value.reader) && vscode_languageserver_protocol_1.MessageWriter.is(value.writer);\r\n    }\r\n    MessageTransports.is = is;\r\n})(MessageTransports = exports.MessageTransports || (exports.MessageTransports = {}));\r\nclass OnReady {\r\n    constructor(_resolve, _reject) {\r\n        this._resolve = _resolve;\r\n        this._reject = _reject;\r\n        this._used = false;\r\n    }\r\n    get isUsed() {\r\n        return this._used;\r\n    }\r\n    resolve() {\r\n        this._used = true;\r\n        this._resolve();\r\n    }\r\n    reject(error) {\r\n        this._used = true;\r\n        this._reject(error);\r\n    }\r\n}\r\nclass BaseLanguageClient {\r\n    constructor(id, name, clientOptions) {\r\n        this._traceFormat = vscode_languageserver_protocol_1.TraceFormat.Text;\r\n        this._features = [];\r\n        this._method2Message = new Map();\r\n        this._dynamicFeatures = new Map();\r\n        this._id = id;\r\n        this._name = name;\r\n        clientOptions = clientOptions || {};\r\n        this._clientOptions = {\r\n            documentSelector: clientOptions.documentSelector || [],\r\n            synchronize: clientOptions.synchronize || {},\r\n            diagnosticCollectionName: clientOptions.diagnosticCollectionName,\r\n            outputChannelName: clientOptions.outputChannelName || this._name,\r\n            revealOutputChannelOn: clientOptions.revealOutputChannelOn || RevealOutputChannelOn.Error,\r\n            stdioEncoding: clientOptions.stdioEncoding || 'utf8',\r\n            initializationOptions: clientOptions.initializationOptions,\r\n            initializationFailedHandler: clientOptions.initializationFailedHandler,\r\n            errorHandler: clientOptions.errorHandler || new DefaultErrorHandler(this._name),\r\n            middleware: clientOptions.middleware || {},\r\n            uriConverters: clientOptions.uriConverters,\r\n            workspaceFolder: clientOptions.workspaceFolder\r\n        };\r\n        this._clientOptions.synchronize = this._clientOptions.synchronize || {};\r\n        this.state = ClientState.Initial;\r\n        this._connectionPromise = undefined;\r\n        this._resolvedConnection = undefined;\r\n        this._initializeResult = undefined;\r\n        if (clientOptions.outputChannel) {\r\n            this._outputChannel = clientOptions.outputChannel;\r\n            this._disposeOutputChannel = false;\r\n        }\r\n        else {\r\n            this._outputChannel = undefined;\r\n            this._disposeOutputChannel = true;\r\n        }\r\n        this._listeners = undefined;\r\n        this._providers = undefined;\r\n        this._diagnostics = undefined;\r\n        this._fileEvents = [];\r\n        this._fileEventDelayer = new async_1.Delayer(250);\r\n        this._onReady = new Promise((resolve, reject) => {\r\n            this._onReadyCallbacks = new OnReady(resolve, reject);\r\n        });\r\n        this._onStop = undefined;\r\n        this._telemetryEmitter = new vscode_languageserver_protocol_1.Emitter();\r\n        this._stateChangeEmitter = new vscode_languageserver_protocol_1.Emitter();\r\n        this._tracer = {\r\n            log: (messageOrDataObject, data) => {\r\n                if (Is.string(messageOrDataObject)) {\r\n                    this.logTrace(messageOrDataObject, data);\r\n                }\r\n                else {\r\n                    this.logObjectTrace(messageOrDataObject);\r\n                }\r\n            },\r\n        };\r\n        this._c2p = c2p.createConverter(clientOptions.uriConverters ? clientOptions.uriConverters.code2Protocol : undefined);\r\n        this._p2c = p2c.createConverter(clientOptions.uriConverters ? clientOptions.uriConverters.protocol2Code : undefined);\r\n        this._syncedDocuments = new Map();\r\n        this.registerBuiltinFeatures();\r\n    }\r\n    get state() {\r\n        return this._state;\r\n    }\r\n    set state(value) {\r\n        let oldState = this.getPublicState();\r\n        this._state = value;\r\n        let newState = this.getPublicState();\r\n        if (newState !== oldState) {\r\n            this._stateChangeEmitter.fire({ oldState, newState });\r\n        }\r\n    }\r\n    getPublicState() {\r\n        if (this.state === ClientState.Running) {\r\n            return State.Running;\r\n        }\r\n        else if (this.state === ClientState.Starting) {\r\n            return State.Starting;\r\n        }\r\n        else {\r\n            return State.Stopped;\r\n        }\r\n    }\r\n    get initializeResult() {\r\n        return this._initializeResult;\r\n    }\r\n    sendRequest(type, ...params) {\r\n        if (!this.isConnectionActive()) {\r\n            throw new Error('Language client is not ready yet');\r\n        }\r\n        this.forceDocumentSync();\r\n        try {\r\n            return this._resolvedConnection.sendRequest(type, ...params);\r\n        }\r\n        catch (error) {\r\n            this.error(`Sending request ${Is.string(type) ? type : type.method} failed.`, error);\r\n            throw error;\r\n        }\r\n    }\r\n    onRequest(type, handler) {\r\n        if (!this.isConnectionActive()) {\r\n            throw new Error('Language client is not ready yet');\r\n        }\r\n        try {\r\n            this._resolvedConnection.onRequest(type, handler);\r\n        }\r\n        catch (error) {\r\n            this.error(`Registering request handler ${Is.string(type) ? type : type.method} failed.`, error);\r\n            throw error;\r\n        }\r\n    }\r\n    sendNotification(type, params) {\r\n        if (!this.isConnectionActive()) {\r\n            throw new Error('Language client is not ready yet');\r\n        }\r\n        this.forceDocumentSync();\r\n        try {\r\n            this._resolvedConnection.sendNotification(type, params);\r\n        }\r\n        catch (error) {\r\n            this.error(`Sending notification ${Is.string(type) ? type : type.method} failed.`, error);\r\n            throw error;\r\n        }\r\n    }\r\n    onNotification(type, handler) {\r\n        if (!this.isConnectionActive()) {\r\n            throw new Error('Language client is not ready yet');\r\n        }\r\n        try {\r\n            this._resolvedConnection.onNotification(type, handler);\r\n        }\r\n        catch (error) {\r\n            this.error(`Registering notification handler ${Is.string(type) ? type : type.method} failed.`, error);\r\n            throw error;\r\n        }\r\n    }\r\n    get clientOptions() {\r\n        return this._clientOptions;\r\n    }\r\n    get protocol2CodeConverter() {\r\n        return this._p2c;\r\n    }\r\n    get code2ProtocolConverter() {\r\n        return this._c2p;\r\n    }\r\n    get onTelemetry() {\r\n        return this._telemetryEmitter.event;\r\n    }\r\n    get onDidChangeState() {\r\n        return this._stateChangeEmitter.event;\r\n    }\r\n    get outputChannel() {\r\n        if (!this._outputChannel) {\r\n            this._outputChannel = vscode_1.window.createOutputChannel(this._clientOptions.outputChannelName ? this._clientOptions.outputChannelName : this._name);\r\n        }\r\n        return this._outputChannel;\r\n    }\r\n    get diagnostics() {\r\n        return this._diagnostics;\r\n    }\r\n    createDefaultErrorHandler() {\r\n        return new DefaultErrorHandler(this._name);\r\n    }\r\n    set trace(value) {\r\n        this._trace = value;\r\n        this.onReady().then(() => {\r\n            this.resolveConnection().then((connection) => {\r\n                connection.trace(this._trace, this._tracer, {\r\n                    sendNotification: false,\r\n                    traceFormat: this._traceFormat\r\n                });\r\n            });\r\n        }, () => {\r\n        });\r\n    }\r\n    data2String(data) {\r\n        if (data instanceof vscode_languageserver_protocol_1.ResponseError) {\r\n            const responseError = data;\r\n            return `  Message: ${responseError.message}\\n  Code: ${responseError.code} ${responseError.data ? '\\n' + responseError.data.toString() : ''}`;\r\n        }\r\n        if (data instanceof Error) {\r\n            if (Is.string(data.stack)) {\r\n                return data.stack;\r\n            }\r\n            return data.message;\r\n        }\r\n        if (Is.string(data)) {\r\n            return data;\r\n        }\r\n        return data.toString();\r\n    }\r\n    info(message, data) {\r\n        this.outputChannel.appendLine(`[Info  - ${(new Date().toLocaleTimeString())}] ${message}`);\r\n        if (data) {\r\n            this.outputChannel.appendLine(this.data2String(data));\r\n        }\r\n        if (this._clientOptions.revealOutputChannelOn <= RevealOutputChannelOn.Info) {\r\n            this.outputChannel.show(true);\r\n        }\r\n    }\r\n    warn(message, data) {\r\n        this.outputChannel.appendLine(`[Warn  - ${(new Date().toLocaleTimeString())}] ${message}`);\r\n        if (data) {\r\n            this.outputChannel.appendLine(this.data2String(data));\r\n        }\r\n        if (this._clientOptions.revealOutputChannelOn <= RevealOutputChannelOn.Warn) {\r\n            this.outputChannel.show(true);\r\n        }\r\n    }\r\n    error(message, data) {\r\n        this.outputChannel.appendLine(`[Error - ${(new Date().toLocaleTimeString())}] ${message}`);\r\n        if (data) {\r\n            this.outputChannel.appendLine(this.data2String(data));\r\n        }\r\n        if (this._clientOptions.revealOutputChannelOn <= RevealOutputChannelOn.Error) {\r\n            this.outputChannel.show(true);\r\n        }\r\n    }\r\n    logTrace(message, data) {\r\n        this.outputChannel.appendLine(`[Trace - ${(new Date().toLocaleTimeString())}] ${message}`);\r\n        if (data) {\r\n            this.outputChannel.appendLine(this.data2String(data));\r\n        }\r\n    }\r\n    logObjectTrace(data) {\r\n        if (data.isLSPMessage && data.type) {\r\n            this.outputChannel.append(`[LSP   - ${(new Date().toLocaleTimeString())}] `);\r\n        }\r\n        else {\r\n            this.outputChannel.append(`[Trace - ${(new Date().toLocaleTimeString())}] `);\r\n        }\r\n        if (data) {\r\n            this.outputChannel.appendLine(`${JSON.stringify(data)}`);\r\n        }\r\n    }\r\n    needsStart() {\r\n        return this.state === ClientState.Initial || this.state === ClientState.Stopping || this.state === ClientState.Stopped;\r\n    }\r\n    needsStop() {\r\n        return this.state === ClientState.Starting || this.state === ClientState.Running;\r\n    }\r\n    onReady() {\r\n        return this._onReady;\r\n    }\r\n    isConnectionActive() {\r\n        return this.state === ClientState.Running && !!this._resolvedConnection;\r\n    }\r\n    start() {\r\n        if (this._onReadyCallbacks.isUsed) {\r\n            this._onReady = new Promise((resolve, reject) => {\r\n                this._onReadyCallbacks = new OnReady(resolve, reject);\r\n            });\r\n        }\r\n        this._listeners = [];\r\n        this._providers = [];\r\n        // If we restart then the diagnostics collection is reused.\r\n        if (!this._diagnostics) {\r\n            this._diagnostics = this._clientOptions.diagnosticCollectionName\r\n                ? vscode_1.languages.createDiagnosticCollection(this._clientOptions.diagnosticCollectionName)\r\n                : vscode_1.languages.createDiagnosticCollection();\r\n        }\r\n        this.state = ClientState.Starting;\r\n        this.resolveConnection().then((connection) => {\r\n            connection.onLogMessage((message) => {\r\n                switch (message.type) {\r\n                    case vscode_languageserver_protocol_1.MessageType.Error:\r\n                        this.error(message.message);\r\n                        break;\r\n                    case vscode_languageserver_protocol_1.MessageType.Warning:\r\n                        this.warn(message.message);\r\n                        break;\r\n                    case vscode_languageserver_protocol_1.MessageType.Info:\r\n                        this.info(message.message);\r\n                        break;\r\n                    default:\r\n                        this.outputChannel.appendLine(message.message);\r\n                }\r\n            });\r\n            connection.onShowMessage((message) => {\r\n                switch (message.type) {\r\n                    case vscode_languageserver_protocol_1.MessageType.Error:\r\n                        vscode_1.window.showErrorMessage(message.message);\r\n                        break;\r\n                    case vscode_languageserver_protocol_1.MessageType.Warning:\r\n                        vscode_1.window.showWarningMessage(message.message);\r\n                        break;\r\n                    case vscode_languageserver_protocol_1.MessageType.Info:\r\n                        vscode_1.window.showInformationMessage(message.message);\r\n                        break;\r\n                    default:\r\n                        vscode_1.window.showInformationMessage(message.message);\r\n                }\r\n            });\r\n            connection.onRequest(vscode_languageserver_protocol_1.ShowMessageRequest.type, (params) => {\r\n                let messageFunc;\r\n                switch (params.type) {\r\n                    case vscode_languageserver_protocol_1.MessageType.Error:\r\n                        messageFunc = vscode_1.window.showErrorMessage;\r\n                        break;\r\n                    case vscode_languageserver_protocol_1.MessageType.Warning:\r\n                        messageFunc = vscode_1.window.showWarningMessage;\r\n                        break;\r\n                    case vscode_languageserver_protocol_1.MessageType.Info:\r\n                        messageFunc = vscode_1.window.showInformationMessage;\r\n                        break;\r\n                    default:\r\n                        messageFunc = vscode_1.window.showInformationMessage;\r\n                }\r\n                let actions = params.actions || [];\r\n                return messageFunc(params.message, ...actions);\r\n            });\r\n            connection.onTelemetry((data) => {\r\n                this._telemetryEmitter.fire(data);\r\n            });\r\n            connection.listen();\r\n            // Error is handled in the initialize call.\r\n            return this.initialize(connection);\r\n        }).then(undefined, (error) => {\r\n            this.state = ClientState.StartFailed;\r\n            this._onReadyCallbacks.reject(error);\r\n            this.error('Starting client failed', error);\r\n            vscode_1.window.showErrorMessage(`Couldn't start client ${this._name}`);\r\n        });\r\n        return new vscode_1.Disposable(() => {\r\n            if (this.needsStop()) {\r\n                this.stop();\r\n            }\r\n        });\r\n    }\r\n    resolveConnection() {\r\n        if (!this._connectionPromise) {\r\n            this._connectionPromise = this.createConnection();\r\n        }\r\n        return this._connectionPromise;\r\n    }\r\n    initialize(connection) {\r\n        this.refreshTrace(connection, false);\r\n        let initOption = this._clientOptions.initializationOptions;\r\n        let rootPath = this._clientOptions.workspaceFolder\r\n            ? this._clientOptions.workspaceFolder.uri.fsPath\r\n            : this._clientGetRootPath();\r\n        let initParams = {\r\n            processId: process.pid,\r\n            rootPath: rootPath ? rootPath : null,\r\n            rootUri: rootPath ? this._c2p.asUri(vscode_1.Uri.file(rootPath)) : null,\r\n            capabilities: this.computeClientCapabilities(),\r\n            initializationOptions: Is.func(initOption) ? initOption() : initOption,\r\n            trace: vscode_languageserver_protocol_1.Trace.toString(this._trace),\r\n            workspaceFolders: null\r\n        };\r\n        this.fillInitializeParams(initParams);\r\n        return connection.initialize(initParams).then((result) => {\r\n            this._resolvedConnection = connection;\r\n            this._initializeResult = result;\r\n            this.state = ClientState.Running;\r\n            let textDocumentSyncOptions = undefined;\r\n            if (Is.number(result.capabilities.textDocumentSync)) {\r\n                if (result.capabilities.textDocumentSync === vscode_languageserver_protocol_1.TextDocumentSyncKind.None) {\r\n                    textDocumentSyncOptions = {\r\n                        openClose: false,\r\n                        change: vscode_languageserver_protocol_1.TextDocumentSyncKind.None,\r\n                        save: undefined\r\n                    };\r\n                }\r\n                else {\r\n                    textDocumentSyncOptions = {\r\n                        openClose: true,\r\n                        change: result.capabilities.textDocumentSync,\r\n                        save: {\r\n                            includeText: false\r\n                        }\r\n                    };\r\n                }\r\n            }\r\n            else if (result.capabilities.textDocumentSync !== void 0 && result.capabilities.textDocumentSync !== null) {\r\n                textDocumentSyncOptions = result.capabilities.textDocumentSync;\r\n            }\r\n            this._capabilities = Object.assign({}, result.capabilities, { resolvedTextDocumentSync: textDocumentSyncOptions });\r\n            connection.onDiagnostics(params => this.handleDiagnostics(params));\r\n            connection.onRequest(vscode_languageserver_protocol_1.RegistrationRequest.type, params => this.handleRegistrationRequest(params));\r\n            // See https://github.com/Microsoft/vscode-languageserver-node/issues/199\r\n            connection.onRequest('client/registerFeature', params => this.handleRegistrationRequest(params));\r\n            connection.onRequest(vscode_languageserver_protocol_1.UnregistrationRequest.type, params => this.handleUnregistrationRequest(params));\r\n            // See https://github.com/Microsoft/vscode-languageserver-node/issues/199\r\n            connection.onRequest('client/unregisterFeature', params => this.handleUnregistrationRequest(params));\r\n            connection.onRequest(vscode_languageserver_protocol_1.ApplyWorkspaceEditRequest.type, params => this.handleApplyWorkspaceEdit(params));\r\n            connection.sendNotification(vscode_languageserver_protocol_1.InitializedNotification.type, {});\r\n            this.hookFileEvents(connection);\r\n            this.hookConfigurationChanged(connection);\r\n            this.initializeFeatures(connection);\r\n            this._onReadyCallbacks.resolve();\r\n            return result;\r\n        }).then(undefined, (error) => {\r\n            if (this._clientOptions.initializationFailedHandler) {\r\n                if (this._clientOptions.initializationFailedHandler(error)) {\r\n                    this.initialize(connection);\r\n                }\r\n                else {\r\n                    this.stop();\r\n                    this._onReadyCallbacks.reject(error);\r\n                }\r\n            }\r\n            else if (error instanceof vscode_languageserver_protocol_1.ResponseError && error.data && error.data.retry) {\r\n                vscode_1.window.showErrorMessage(error.message, { title: 'Retry', id: \"retry\" }).then(item => {\r\n                    if (item && item.id === 'retry') {\r\n                        this.initialize(connection);\r\n                    }\r\n                    else {\r\n                        this.stop();\r\n                        this._onReadyCallbacks.reject(error);\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                if (error && error.message) {\r\n                    vscode_1.window.showErrorMessage(error.message);\r\n                }\r\n                this.error('Server initialization failed.', error);\r\n                this.stop();\r\n                this._onReadyCallbacks.reject(error);\r\n            }\r\n        });\r\n    }\r\n    _clientGetRootPath() {\r\n        let folders = vscode_1.workspace.workspaceFolders;\r\n        if (!folders || folders.length === 0) {\r\n            return undefined;\r\n        }\r\n        let folder = folders[0];\r\n        if (folder.uri.scheme === 'file') {\r\n            return folder.uri.fsPath;\r\n        }\r\n        return undefined;\r\n    }\r\n    stop() {\r\n        this._initializeResult = undefined;\r\n        if (!this._connectionPromise) {\r\n            this.state = ClientState.Stopped;\r\n            return Promise.resolve();\r\n        }\r\n        if (this.state === ClientState.Stopping && this._onStop) {\r\n            return this._onStop;\r\n        }\r\n        this.state = ClientState.Stopping;\r\n        this.cleanUp();\r\n        // unhook listeners\r\n        return this._onStop = this.resolveConnection().then(connection => {\r\n            return connection.shutdown().then(() => {\r\n                connection.exit();\r\n                connection.dispose();\r\n                this.state = ClientState.Stopped;\r\n                this._onStop = undefined;\r\n                this._connectionPromise = undefined;\r\n                this._resolvedConnection = undefined;\r\n            });\r\n        });\r\n    }\r\n    cleanUp(channel = true, diagnostics = true) {\r\n        if (this._listeners) {\r\n            this._listeners.forEach(listener => listener.dispose());\r\n            this._listeners = undefined;\r\n        }\r\n        if (this._providers) {\r\n            this._providers.forEach(provider => provider.dispose());\r\n            this._providers = undefined;\r\n        }\r\n        if (this._syncedDocuments) {\r\n            this._syncedDocuments.clear();\r\n        }\r\n        for (let handler of this._dynamicFeatures.values()) {\r\n            handler.dispose();\r\n        }\r\n        if (channel && this._outputChannel && this._disposeOutputChannel) {\r\n            this._outputChannel.dispose();\r\n            this._outputChannel = undefined;\r\n        }\r\n        if (diagnostics && this._diagnostics) {\r\n            this._diagnostics.dispose();\r\n            this._diagnostics = undefined;\r\n        }\r\n    }\r\n    notifyFileEvent(event) {\r\n        this._fileEvents.push(event);\r\n        this._fileEventDelayer.trigger(() => {\r\n            this.onReady().then(() => {\r\n                this.resolveConnection().then(connection => {\r\n                    if (this.isConnectionActive()) {\r\n                        connection.didChangeWatchedFiles({ changes: this._fileEvents });\r\n                    }\r\n                    this._fileEvents = [];\r\n                });\r\n            }, (error) => {\r\n                this.error(`Notify file events failed.`, error);\r\n            });\r\n        });\r\n    }\r\n    forceDocumentSync() {\r\n        this._dynamicFeatures.get(vscode_languageserver_protocol_1.DidChangeTextDocumentNotification.type.method).forceDelivery();\r\n    }\r\n    handleDiagnostics(params) {\r\n        if (!this._diagnostics) {\r\n            return;\r\n        }\r\n        let uri = this._p2c.asUri(params.uri);\r\n        let diagnostics = this._p2c.asDiagnostics(params.diagnostics);\r\n        let middleware = this.clientOptions.middleware.handleDiagnostics;\r\n        if (middleware) {\r\n            middleware(uri, diagnostics, (uri, diagnostics) => this.setDiagnostics(uri, diagnostics));\r\n        }\r\n        else {\r\n            this.setDiagnostics(uri, diagnostics);\r\n        }\r\n    }\r\n    setDiagnostics(uri, diagnostics) {\r\n        if (!this._diagnostics) {\r\n            return;\r\n        }\r\n        this._diagnostics.set(uri, diagnostics);\r\n    }\r\n    createConnection() {\r\n        let errorHandler = (error, message, count) => {\r\n            this.handleConnectionError(error, message, count);\r\n        };\r\n        let closeHandler = () => {\r\n            this.handleConnectionClosed();\r\n        };\r\n        return this.createMessageTransports(this._clientOptions.stdioEncoding || 'utf8').then((transports) => {\r\n            return createConnection(transports.reader, transports.writer, errorHandler, closeHandler);\r\n        });\r\n    }\r\n    handleConnectionClosed() {\r\n        // Check whether this is a normal shutdown in progress or the client stopped normally.\r\n        if (this.state === ClientState.Stopping || this.state === ClientState.Stopped) {\r\n            return;\r\n        }\r\n        try {\r\n            if (this._resolvedConnection) {\r\n                this._resolvedConnection.dispose();\r\n            }\r\n        }\r\n        catch (error) {\r\n            // Disposing a connection could fail if error cases.\r\n        }\r\n        let action = CloseAction.DoNotRestart;\r\n        try {\r\n            action = this._clientOptions.errorHandler.closed();\r\n        }\r\n        catch (error) {\r\n            // Ignore errors coming from the error handler.\r\n        }\r\n        this._connectionPromise = undefined;\r\n        this._resolvedConnection = undefined;\r\n        if (action === CloseAction.DoNotRestart) {\r\n            this.error('Connection to server got closed. Server will not be restarted.');\r\n            this.state = ClientState.Stopped;\r\n            this.cleanUp(false, true);\r\n        }\r\n        else if (action === CloseAction.Restart) {\r\n            this.info('Connection to server got closed. Server will restart.');\r\n            this.cleanUp(false, false);\r\n            this.state = ClientState.Initial;\r\n            this.start();\r\n        }\r\n    }\r\n    handleConnectionError(error, message, count) {\r\n        let action = this._clientOptions.errorHandler.error(error, message, count);\r\n        if (action === ErrorAction.Shutdown) {\r\n            this.error('Connection to server is erroring. Shutting down server.');\r\n            this.stop();\r\n        }\r\n    }\r\n    hookConfigurationChanged(connection) {\r\n        vscode_1.workspace.onDidChangeConfiguration(() => {\r\n            this.refreshTrace(connection, true);\r\n        });\r\n    }\r\n    refreshTrace(connection, sendNotification = false) {\r\n        let config = vscode_1.workspace.getConfiguration(this._id);\r\n        let trace = vscode_languageserver_protocol_1.Trace.Off;\r\n        let traceFormat = vscode_languageserver_protocol_1.TraceFormat.Text;\r\n        if (config) {\r\n            const traceConfig = config.get('trace.server', 'off');\r\n            if (typeof traceConfig === 'string') {\r\n                trace = vscode_languageserver_protocol_1.Trace.fromString(traceConfig);\r\n            }\r\n            else {\r\n                trace = vscode_languageserver_protocol_1.Trace.fromString(config.get('trace.server.verbosity', 'off'));\r\n                traceFormat = vscode_languageserver_protocol_1.TraceFormat.fromString(config.get('trace.server.format', 'text'));\r\n            }\r\n        }\r\n        this._trace = trace;\r\n        this._traceFormat = traceFormat;\r\n        connection.trace(this._trace, this._tracer, {\r\n            sendNotification,\r\n            traceFormat: this._traceFormat\r\n        });\r\n    }\r\n    hookFileEvents(_connection) {\r\n        let fileEvents = this._clientOptions.synchronize.fileEvents;\r\n        if (!fileEvents) {\r\n            return;\r\n        }\r\n        let watchers;\r\n        if (Is.array(fileEvents)) {\r\n            watchers = fileEvents;\r\n        }\r\n        else {\r\n            watchers = [fileEvents];\r\n        }\r\n        if (!watchers) {\r\n            return;\r\n        }\r\n        this._dynamicFeatures.get(vscode_languageserver_protocol_1.DidChangeWatchedFilesNotification.type.method).registerRaw(UUID.generateUuid(), watchers);\r\n    }\r\n    registerFeatures(features) {\r\n        for (let feature of features) {\r\n            this.registerFeature(feature);\r\n        }\r\n    }\r\n    registerFeature(feature) {\r\n        this._features.push(feature);\r\n        if (DynamicFeature.is(feature)) {\r\n            let messages = feature.messages;\r\n            if (Array.isArray(messages)) {\r\n                for (let message of messages) {\r\n                    this._method2Message.set(message.method, message);\r\n                    this._dynamicFeatures.set(message.method, feature);\r\n                }\r\n            }\r\n            else {\r\n                this._method2Message.set(messages.method, messages);\r\n                this._dynamicFeatures.set(messages.method, feature);\r\n            }\r\n        }\r\n    }\r\n    registerBuiltinFeatures() {\r\n        this.registerFeature(new ConfigurationFeature(this));\r\n        this.registerFeature(new DidOpenTextDocumentFeature(this, this._syncedDocuments));\r\n        this.registerFeature(new DidChangeTextDocumentFeature(this));\r\n        this.registerFeature(new WillSaveFeature(this));\r\n        this.registerFeature(new WillSaveWaitUntilFeature(this));\r\n        this.registerFeature(new DidSaveTextDocumentFeature(this));\r\n        this.registerFeature(new DidCloseTextDocumentFeature(this, this._syncedDocuments));\r\n        this.registerFeature(new FileSystemWatcherFeature(this, (event) => this.notifyFileEvent(event)));\r\n        this.registerFeature(new CompletionItemFeature(this));\r\n        this.registerFeature(new HoverFeature(this));\r\n        this.registerFeature(new SignatureHelpFeature(this));\r\n        this.registerFeature(new DefinitionFeature(this));\r\n        this.registerFeature(new ReferencesFeature(this));\r\n        this.registerFeature(new DocumentHighlightFeature(this));\r\n        this.registerFeature(new DocumentSymbolFeature(this));\r\n        this.registerFeature(new WorkspaceSymbolFeature(this));\r\n        this.registerFeature(new CodeActionFeature(this));\r\n        this.registerFeature(new CodeLensFeature(this));\r\n        this.registerFeature(new DocumentFormattingFeature(this));\r\n        this.registerFeature(new DocumentRangeFormattingFeature(this));\r\n        this.registerFeature(new DocumentOnTypeFormattingFeature(this));\r\n        this.registerFeature(new RenameFeature(this));\r\n        this.registerFeature(new DocumentLinkFeature(this));\r\n        this.registerFeature(new ExecuteCommandFeature(this));\r\n    }\r\n    fillInitializeParams(params) {\r\n        for (let feature of this._features) {\r\n            if (Is.func(feature.fillInitializeParams)) {\r\n                feature.fillInitializeParams(params);\r\n            }\r\n        }\r\n    }\r\n    computeClientCapabilities() {\r\n        let result = {};\r\n        ensure(result, 'workspace').applyEdit = true;\r\n        let workspaceEdit = ensure(ensure(result, 'workspace'), 'workspaceEdit');\r\n        workspaceEdit.documentChanges = true;\r\n        workspaceEdit.resourceOperations = [vscode_languageserver_protocol_1.ResourceOperationKind.Create, vscode_languageserver_protocol_1.ResourceOperationKind.Rename, vscode_languageserver_protocol_1.ResourceOperationKind.Delete];\r\n        workspaceEdit.failureHandling = vscode_languageserver_protocol_1.FailureHandlingKind.TextOnlyTransactional;\r\n        ensure(ensure(result, 'textDocument'), 'publishDiagnostics').relatedInformation = true;\r\n        for (let feature of this._features) {\r\n            feature.fillClientCapabilities(result);\r\n        }\r\n        return result;\r\n    }\r\n    initializeFeatures(_connection) {\r\n        let documentSelector = this._clientOptions.documentSelector;\r\n        for (let feature of this._features) {\r\n            feature.initialize(this._capabilities, documentSelector);\r\n        }\r\n    }\r\n    handleRegistrationRequest(params) {\r\n        return new Promise((resolve, reject) => {\r\n            for (let registration of params.registrations) {\r\n                const feature = this._dynamicFeatures.get(registration.method);\r\n                if (!feature) {\r\n                    reject(new Error(`No feature implementation for ${registration.method} found. Registration failed.`));\r\n                    return;\r\n                }\r\n                const options = registration.registerOptions || {};\r\n                options.documentSelector = options.documentSelector || this._clientOptions.documentSelector;\r\n                const data = {\r\n                    id: registration.id,\r\n                    registerOptions: options\r\n                };\r\n                feature.register(this._method2Message.get(registration.method), data);\r\n            }\r\n            resolve();\r\n        });\r\n    }\r\n    handleUnregistrationRequest(params) {\r\n        return new Promise((resolve, reject) => {\r\n            for (let unregistration of params.unregisterations) {\r\n                const feature = this._dynamicFeatures.get(unregistration.method);\r\n                if (!feature) {\r\n                    reject(new Error(`No feature implementation for ${unregistration.method} found. Unregistration failed.`));\r\n                    return;\r\n                }\r\n                feature.unregister(unregistration.id);\r\n            }\r\n            ;\r\n            resolve();\r\n        });\r\n    }\r\n    handleApplyWorkspaceEdit(params) {\r\n        // This is some sort of workaround since the version check should be done by VS Code in the Workspace.applyEdit.\r\n        // However doing it here adds some safety since the server can lag more behind then an extension.\r\n        let workspaceEdit = params.edit;\r\n        let openTextDocuments = new Map();\r\n        vscode_1.workspace.textDocuments.forEach((document) => openTextDocuments.set(document.uri.toString(), document));\r\n        let versionMismatch = false;\r\n        if (workspaceEdit.documentChanges) {\r\n            for (const change of workspaceEdit.documentChanges) {\r\n                if (vscode_languageserver_protocol_1.TextDocumentEdit.is(change) && change.textDocument.version && change.textDocument.version >= 0) {\r\n                    let textDocument = openTextDocuments.get(change.textDocument.uri);\r\n                    if (textDocument && textDocument.version !== change.textDocument.version) {\r\n                        versionMismatch = true;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (versionMismatch) {\r\n            return Promise.resolve({ applied: false });\r\n        }\r\n        return vscode_1.workspace.applyEdit(this._p2c.asWorkspaceEdit(params.edit)).then((value) => { return { applied: value }; });\r\n    }\r\n    ;\r\n    logFailedRequest(type, error) {\r\n        // If we get a request cancel don't log anything.\r\n        if (error instanceof vscode_languageserver_protocol_1.ResponseError && error.code === vscode_languageserver_protocol_1.ErrorCodes.RequestCancelled) {\r\n            return;\r\n        }\r\n        this.error(`Request ${type.method} failed.`, error);\r\n    }\r\n}\r\nexports.BaseLanguageClient = BaseLanguageClient;\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nclass ValueUUID {\r\n    constructor(_value) {\r\n        this._value = _value;\r\n        // empty\r\n    }\r\n    asHex() {\r\n        return this._value;\r\n    }\r\n    equals(other) {\r\n        return this.asHex() === other.asHex();\r\n    }\r\n}\r\nclass V4UUID extends ValueUUID {\r\n    constructor() {\r\n        super([\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            '-',\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            '-',\r\n            '4',\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            '-',\r\n            V4UUID._oneOf(V4UUID._timeHighBits),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            '-',\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n        ].join(''));\r\n    }\r\n    static _oneOf(array) {\r\n        return array[Math.floor(array.length * Math.random())];\r\n    }\r\n    static _randomHex() {\r\n        return V4UUID._oneOf(V4UUID._chars);\r\n    }\r\n}\r\nV4UUID._chars = ['0', '1', '2', '3', '4', '5', '6', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f'];\r\nV4UUID._timeHighBits = ['8', '9', 'a', 'b'];\r\n/**\r\n * An empty UUID that contains only zeros.\r\n */\r\nexports.empty = new ValueUUID('00000000-0000-0000-0000-000000000000');\r\nfunction v4() {\r\n    return new V4UUID();\r\n}\r\nexports.v4 = v4;\r\nconst _UUIDPattern = /^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/i;\r\nfunction isUUID(value) {\r\n    return _UUIDPattern.test(value);\r\n}\r\nexports.isUUID = isUUID;\r\n/**\r\n * Parses a UUID that is of the format xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx.\r\n * @param value A uuid string.\r\n */\r\nfunction parse(value) {\r\n    if (!isUUID(value)) {\r\n        throw new Error('invalid uuid');\r\n    }\r\n    return new ValueUUID(value);\r\n}\r\nexports.parse = parse;\r\nfunction generateUuid() {\r\n    return v4().asHex();\r\n}\r\nexports.generateUuid = generateUuid;\r\n","module.exports = require(\"path\");","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nfunction boolean(value) {\r\n    return value === true || value === false;\r\n}\r\nexports.boolean = boolean;\r\nfunction string(value) {\r\n    return typeof value === 'string' || value instanceof String;\r\n}\r\nexports.string = string;\r\nfunction number(value) {\r\n    return typeof value === 'number' || value instanceof Number;\r\n}\r\nexports.number = number;\r\nfunction error(value) {\r\n    return value instanceof Error;\r\n}\r\nexports.error = error;\r\nfunction func(value) {\r\n    return typeof value === 'function';\r\n}\r\nexports.func = func;\r\nfunction array(value) {\r\n    return Array.isArray(value);\r\n}\r\nexports.array = array;\r\nfunction stringArray(value) {\r\n    return array(value) && value.every(elem => string(elem));\r\n}\r\nexports.stringArray = stringArray;\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Disposable;\r\n(function (Disposable) {\r\n    function create(func) {\r\n        return {\r\n            dispose: func\r\n        };\r\n    }\r\n    Disposable.create = create;\r\n})(Disposable = exports.Disposable || (exports.Disposable = {}));\r\nvar Event;\r\n(function (Event) {\r\n    const _disposable = { dispose() { } };\r\n    Event.None = function () { return _disposable; };\r\n})(Event = exports.Event || (exports.Event = {}));\r\nclass CallbackList {\r\n    add(callback, context = null, bucket) {\r\n        if (!this._callbacks) {\r\n            this._callbacks = [];\r\n            this._contexts = [];\r\n        }\r\n        this._callbacks.push(callback);\r\n        this._contexts.push(context);\r\n        if (Array.isArray(bucket)) {\r\n            bucket.push({ dispose: () => this.remove(callback, context) });\r\n        }\r\n    }\r\n    remove(callback, context = null) {\r\n        if (!this._callbacks) {\r\n            return;\r\n        }\r\n        var foundCallbackWithDifferentContext = false;\r\n        for (var i = 0, len = this._callbacks.length; i < len; i++) {\r\n            if (this._callbacks[i] === callback) {\r\n                if (this._contexts[i] === context) {\r\n                    // callback & context match => remove it\r\n                    this._callbacks.splice(i, 1);\r\n                    this._contexts.splice(i, 1);\r\n                    return;\r\n                }\r\n                else {\r\n                    foundCallbackWithDifferentContext = true;\r\n                }\r\n            }\r\n        }\r\n        if (foundCallbackWithDifferentContext) {\r\n            throw new Error('When adding a listener with a context, you should remove it with the same context');\r\n        }\r\n    }\r\n    invoke(...args) {\r\n        if (!this._callbacks) {\r\n            return [];\r\n        }\r\n        var ret = [], callbacks = this._callbacks.slice(0), contexts = this._contexts.slice(0);\r\n        for (var i = 0, len = callbacks.length; i < len; i++) {\r\n            try {\r\n                ret.push(callbacks[i].apply(contexts[i], args));\r\n            }\r\n            catch (e) {\r\n                console.error(e);\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n    isEmpty() {\r\n        return !this._callbacks || this._callbacks.length === 0;\r\n    }\r\n    dispose() {\r\n        this._callbacks = undefined;\r\n        this._contexts = undefined;\r\n    }\r\n}\r\nclass Emitter {\r\n    constructor(_options) {\r\n        this._options = _options;\r\n    }\r\n    /**\r\n     * For the public to allow to subscribe\r\n     * to events from this Emitter\r\n     */\r\n    get event() {\r\n        if (!this._event) {\r\n            this._event = (listener, thisArgs, disposables) => {\r\n                if (!this._callbacks) {\r\n                    this._callbacks = new CallbackList();\r\n                }\r\n                if (this._options && this._options.onFirstListenerAdd && this._callbacks.isEmpty()) {\r\n                    this._options.onFirstListenerAdd(this);\r\n                }\r\n                this._callbacks.add(listener, thisArgs);\r\n                let result;\r\n                result = {\r\n                    dispose: () => {\r\n                        this._callbacks.remove(listener, thisArgs);\r\n                        result.dispose = Emitter._noop;\r\n                        if (this._options && this._options.onLastListenerRemove && this._callbacks.isEmpty()) {\r\n                            this._options.onLastListenerRemove(this);\r\n                        }\r\n                    }\r\n                };\r\n                if (Array.isArray(disposables)) {\r\n                    disposables.push(result);\r\n                }\r\n                return result;\r\n            };\r\n        }\r\n        return this._event;\r\n    }\r\n    /**\r\n     * To be kept private to fire an event to\r\n     * subscribers\r\n     */\r\n    fire(event) {\r\n        if (this._callbacks) {\r\n            this._callbacks.invoke.call(this._callbacks, event);\r\n        }\r\n    }\r\n    dispose() {\r\n        if (this._callbacks) {\r\n            this._callbacks.dispose();\r\n            this._callbacks = undefined;\r\n        }\r\n    }\r\n}\r\nEmitter._noop = function () { };\r\nexports.Emitter = Emitter;\r\n","module.exports = require(\"fs\");","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst events_1 = require(\"./events\");\r\nconst Is = require(\"./is\");\r\nlet DefaultSize = 8192;\r\nlet CR = Buffer.from('\\r', 'ascii')[0];\r\nlet LF = Buffer.from('\\n', 'ascii')[0];\r\nlet CRLF = '\\r\\n';\r\nclass MessageBuffer {\r\n    constructor(encoding = 'utf8') {\r\n        this.encoding = encoding;\r\n        this.index = 0;\r\n        this.buffer = Buffer.allocUnsafe(DefaultSize);\r\n    }\r\n    append(chunk) {\r\n        var toAppend = chunk;\r\n        if (typeof (chunk) === 'string') {\r\n            var str = chunk;\r\n            var bufferLen = Buffer.byteLength(str, this.encoding);\r\n            toAppend = Buffer.allocUnsafe(bufferLen);\r\n            toAppend.write(str, 0, bufferLen, this.encoding);\r\n        }\r\n        if (this.buffer.length - this.index >= toAppend.length) {\r\n            toAppend.copy(this.buffer, this.index, 0, toAppend.length);\r\n        }\r\n        else {\r\n            var newSize = (Math.ceil((this.index + toAppend.length) / DefaultSize) + 1) * DefaultSize;\r\n            if (this.index === 0) {\r\n                this.buffer = Buffer.allocUnsafe(newSize);\r\n                toAppend.copy(this.buffer, 0, 0, toAppend.length);\r\n            }\r\n            else {\r\n                this.buffer = Buffer.concat([this.buffer.slice(0, this.index), toAppend], newSize);\r\n            }\r\n        }\r\n        this.index += toAppend.length;\r\n    }\r\n    tryReadHeaders() {\r\n        let result = undefined;\r\n        let current = 0;\r\n        while (current + 3 < this.index && (this.buffer[current] !== CR || this.buffer[current + 1] !== LF || this.buffer[current + 2] !== CR || this.buffer[current + 3] !== LF)) {\r\n            current++;\r\n        }\r\n        // No header / body separator found (e.g CRLFCRLF)\r\n        if (current + 3 >= this.index) {\r\n            return result;\r\n        }\r\n        result = Object.create(null);\r\n        let headers = this.buffer.toString('ascii', 0, current).split(CRLF);\r\n        headers.forEach((header) => {\r\n            let index = header.indexOf(':');\r\n            if (index === -1) {\r\n                throw new Error('Message header must separate key and value using :');\r\n            }\r\n            let key = header.substr(0, index);\r\n            let value = header.substr(index + 1).trim();\r\n            result[key] = value;\r\n        });\r\n        let nextStart = current + 4;\r\n        this.buffer = this.buffer.slice(nextStart);\r\n        this.index = this.index - nextStart;\r\n        return result;\r\n    }\r\n    tryReadContent(length) {\r\n        if (this.index < length) {\r\n            return null;\r\n        }\r\n        let result = this.buffer.toString(this.encoding, 0, length);\r\n        let nextStart = length;\r\n        this.buffer.copy(this.buffer, 0, nextStart);\r\n        this.index = this.index - nextStart;\r\n        return result;\r\n    }\r\n    get numberOfBytes() {\r\n        return this.index;\r\n    }\r\n}\r\nvar MessageReader;\r\n(function (MessageReader) {\r\n    function is(value) {\r\n        let candidate = value;\r\n        return candidate && Is.func(candidate.listen) && Is.func(candidate.dispose) &&\r\n            Is.func(candidate.onError) && Is.func(candidate.onClose) && Is.func(candidate.onPartialMessage);\r\n    }\r\n    MessageReader.is = is;\r\n})(MessageReader = exports.MessageReader || (exports.MessageReader = {}));\r\nclass AbstractMessageReader {\r\n    constructor() {\r\n        this.errorEmitter = new events_1.Emitter();\r\n        this.closeEmitter = new events_1.Emitter();\r\n        this.partialMessageEmitter = new events_1.Emitter();\r\n    }\r\n    dispose() {\r\n        this.errorEmitter.dispose();\r\n        this.closeEmitter.dispose();\r\n    }\r\n    get onError() {\r\n        return this.errorEmitter.event;\r\n    }\r\n    fireError(error) {\r\n        this.errorEmitter.fire(this.asError(error));\r\n    }\r\n    get onClose() {\r\n        return this.closeEmitter.event;\r\n    }\r\n    fireClose() {\r\n        this.closeEmitter.fire(undefined);\r\n    }\r\n    get onPartialMessage() {\r\n        return this.partialMessageEmitter.event;\r\n    }\r\n    firePartialMessage(info) {\r\n        this.partialMessageEmitter.fire(info);\r\n    }\r\n    asError(error) {\r\n        if (error instanceof Error) {\r\n            return error;\r\n        }\r\n        else {\r\n            return new Error(`Reader recevied error. Reason: ${Is.string(error.message) ? error.message : 'unknown'}`);\r\n        }\r\n    }\r\n}\r\nexports.AbstractMessageReader = AbstractMessageReader;\r\nclass StreamMessageReader extends AbstractMessageReader {\r\n    constructor(readable, encoding = 'utf8') {\r\n        super();\r\n        this.readable = readable;\r\n        this.buffer = new MessageBuffer(encoding);\r\n        this._partialMessageTimeout = 10000;\r\n    }\r\n    set partialMessageTimeout(timeout) {\r\n        this._partialMessageTimeout = timeout;\r\n    }\r\n    get partialMessageTimeout() {\r\n        return this._partialMessageTimeout;\r\n    }\r\n    listen(callback) {\r\n        this.nextMessageLength = -1;\r\n        this.messageToken = 0;\r\n        this.partialMessageTimer = undefined;\r\n        this.callback = callback;\r\n        this.readable.on('data', (data) => {\r\n            this.onData(data);\r\n        });\r\n        this.readable.on('error', (error) => this.fireError(error));\r\n        this.readable.on('close', () => this.fireClose());\r\n    }\r\n    onData(data) {\r\n        this.buffer.append(data);\r\n        while (true) {\r\n            if (this.nextMessageLength === -1) {\r\n                let headers = this.buffer.tryReadHeaders();\r\n                if (!headers) {\r\n                    return;\r\n                }\r\n                let contentLength = headers['Content-Length'];\r\n                if (!contentLength) {\r\n                    throw new Error('Header must provide a Content-Length property.');\r\n                }\r\n                let length = parseInt(contentLength);\r\n                if (isNaN(length)) {\r\n                    throw new Error('Content-Length value must be a number.');\r\n                }\r\n                this.nextMessageLength = length;\r\n                // Take the encoding form the header. For compatibility\r\n                // treat both utf-8 and utf8 as node utf8\r\n            }\r\n            var msg = this.buffer.tryReadContent(this.nextMessageLength);\r\n            if (msg === null) {\r\n                /** We haven't recevied the full message yet. */\r\n                this.setPartialMessageTimer();\r\n                return;\r\n            }\r\n            this.clearPartialMessageTimer();\r\n            this.nextMessageLength = -1;\r\n            this.messageToken++;\r\n            var json = JSON.parse(msg);\r\n            this.callback(json);\r\n        }\r\n    }\r\n    clearPartialMessageTimer() {\r\n        if (this.partialMessageTimer) {\r\n            clearTimeout(this.partialMessageTimer);\r\n            this.partialMessageTimer = undefined;\r\n        }\r\n    }\r\n    setPartialMessageTimer() {\r\n        this.clearPartialMessageTimer();\r\n        if (this._partialMessageTimeout <= 0) {\r\n            return;\r\n        }\r\n        this.partialMessageTimer = setTimeout((token, timeout) => {\r\n            this.partialMessageTimer = undefined;\r\n            if (token === this.messageToken) {\r\n                this.firePartialMessage({ messageToken: token, waitingTime: timeout });\r\n                this.setPartialMessageTimer();\r\n            }\r\n        }, this._partialMessageTimeout, this.messageToken, this._partialMessageTimeout);\r\n    }\r\n}\r\nexports.StreamMessageReader = StreamMessageReader;\r\nclass IPCMessageReader extends AbstractMessageReader {\r\n    constructor(process) {\r\n        super();\r\n        this.process = process;\r\n        let eventEmitter = this.process;\r\n        eventEmitter.on('error', (error) => this.fireError(error));\r\n        eventEmitter.on('close', () => this.fireClose());\r\n    }\r\n    listen(callback) {\r\n        this.process.on('message', callback);\r\n    }\r\n}\r\nexports.IPCMessageReader = IPCMessageReader;\r\nclass SocketMessageReader extends StreamMessageReader {\r\n    constructor(socket, encoding = 'utf-8') {\r\n        super(socket, encoding);\r\n    }\r\n}\r\nexports.SocketMessageReader = SocketMessageReader;\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst events_1 = require(\"./events\");\r\nconst Is = require(\"./is\");\r\nlet ContentLength = 'Content-Length: ';\r\nlet CRLF = '\\r\\n';\r\nvar MessageWriter;\r\n(function (MessageWriter) {\r\n    function is(value) {\r\n        let candidate = value;\r\n        return candidate && Is.func(candidate.dispose) && Is.func(candidate.onClose) &&\r\n            Is.func(candidate.onError) && Is.func(candidate.write);\r\n    }\r\n    MessageWriter.is = is;\r\n})(MessageWriter = exports.MessageWriter || (exports.MessageWriter = {}));\r\nclass AbstractMessageWriter {\r\n    constructor() {\r\n        this.errorEmitter = new events_1.Emitter();\r\n        this.closeEmitter = new events_1.Emitter();\r\n    }\r\n    dispose() {\r\n        this.errorEmitter.dispose();\r\n        this.closeEmitter.dispose();\r\n    }\r\n    get onError() {\r\n        return this.errorEmitter.event;\r\n    }\r\n    fireError(error, message, count) {\r\n        this.errorEmitter.fire([this.asError(error), message, count]);\r\n    }\r\n    get onClose() {\r\n        return this.closeEmitter.event;\r\n    }\r\n    fireClose() {\r\n        this.closeEmitter.fire(undefined);\r\n    }\r\n    asError(error) {\r\n        if (error instanceof Error) {\r\n            return error;\r\n        }\r\n        else {\r\n            return new Error(`Writer recevied error. Reason: ${Is.string(error.message) ? error.message : 'unknown'}`);\r\n        }\r\n    }\r\n}\r\nexports.AbstractMessageWriter = AbstractMessageWriter;\r\nclass StreamMessageWriter extends AbstractMessageWriter {\r\n    constructor(writable, encoding = 'utf8') {\r\n        super();\r\n        this.writable = writable;\r\n        this.encoding = encoding;\r\n        this.errorCount = 0;\r\n        this.writable.on('error', (error) => this.fireError(error));\r\n        this.writable.on('close', () => this.fireClose());\r\n    }\r\n    write(msg) {\r\n        let json = JSON.stringify(msg);\r\n        let contentLength = Buffer.byteLength(json, this.encoding);\r\n        let headers = [\r\n            ContentLength, contentLength.toString(), CRLF,\r\n            CRLF\r\n        ];\r\n        try {\r\n            // Header must be written in ASCII encoding\r\n            this.writable.write(headers.join(''), 'ascii');\r\n            // Now write the content. This can be written in any encoding\r\n            this.writable.write(json, this.encoding);\r\n            this.errorCount = 0;\r\n        }\r\n        catch (error) {\r\n            this.errorCount++;\r\n            this.fireError(error, msg, this.errorCount);\r\n        }\r\n    }\r\n}\r\nexports.StreamMessageWriter = StreamMessageWriter;\r\nclass IPCMessageWriter extends AbstractMessageWriter {\r\n    constructor(process) {\r\n        super();\r\n        this.process = process;\r\n        this.errorCount = 0;\r\n        this.queue = [];\r\n        this.sending = false;\r\n        let eventEmitter = this.process;\r\n        eventEmitter.on('error', (error) => this.fireError(error));\r\n        eventEmitter.on('close', () => this.fireClose);\r\n    }\r\n    write(msg) {\r\n        if (!this.sending && this.queue.length === 0) {\r\n            // See https://github.com/nodejs/node/issues/7657\r\n            this.doWriteMessage(msg);\r\n        }\r\n        else {\r\n            this.queue.push(msg);\r\n        }\r\n    }\r\n    doWriteMessage(msg) {\r\n        try {\r\n            if (this.process.send) {\r\n                this.sending = true;\r\n                this.process.send(msg, undefined, undefined, (error) => {\r\n                    this.sending = false;\r\n                    if (error) {\r\n                        this.errorCount++;\r\n                        this.fireError(error, msg, this.errorCount);\r\n                    }\r\n                    else {\r\n                        this.errorCount = 0;\r\n                    }\r\n                    if (this.queue.length > 0) {\r\n                        this.doWriteMessage(this.queue.shift());\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        catch (error) {\r\n            this.errorCount++;\r\n            this.fireError(error, msg, this.errorCount);\r\n        }\r\n    }\r\n}\r\nexports.IPCMessageWriter = IPCMessageWriter;\r\nclass SocketMessageWriter extends AbstractMessageWriter {\r\n    constructor(socket, encoding = 'utf8') {\r\n        super();\r\n        this.socket = socket;\r\n        this.queue = [];\r\n        this.sending = false;\r\n        this.encoding = encoding;\r\n        this.errorCount = 0;\r\n        this.socket.on('error', (error) => this.fireError(error));\r\n        this.socket.on('close', () => this.fireClose());\r\n    }\r\n    write(msg) {\r\n        if (!this.sending && this.queue.length === 0) {\r\n            // See https://github.com/nodejs/node/issues/7657\r\n            this.doWriteMessage(msg);\r\n        }\r\n        else {\r\n            this.queue.push(msg);\r\n        }\r\n    }\r\n    doWriteMessage(msg) {\r\n        let json = JSON.stringify(msg);\r\n        let contentLength = Buffer.byteLength(json, this.encoding);\r\n        let headers = [\r\n            ContentLength, contentLength.toString(), CRLF,\r\n            CRLF\r\n        ];\r\n        try {\r\n            // Header must be written in ASCII encoding\r\n            this.sending = true;\r\n            this.socket.write(headers.join(''), 'ascii', (error) => {\r\n                if (error) {\r\n                    this.handleError(error, msg);\r\n                }\r\n                try {\r\n                    // Now write the content. This can be written in any encoding\r\n                    this.socket.write(json, this.encoding, (error) => {\r\n                        this.sending = false;\r\n                        if (error) {\r\n                            this.handleError(error, msg);\r\n                        }\r\n                        else {\r\n                            this.errorCount = 0;\r\n                        }\r\n                        if (this.queue.length > 0) {\r\n                            this.doWriteMessage(this.queue.shift());\r\n                        }\r\n                    });\r\n                }\r\n                catch (error) {\r\n                    this.handleError(error, msg);\r\n                }\r\n            });\r\n        }\r\n        catch (error) {\r\n            this.handleError(error, msg);\r\n        }\r\n    }\r\n    handleError(error, msg) {\r\n        this.errorCount++;\r\n        this.fireError(error, msg, this.errorCount);\r\n    }\r\n}\r\nexports.SocketMessageWriter = SocketMessageWriter;\r\n","module.exports = require(\"child_process\");","module.exports = require(\"net\");","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst code = require(\"vscode\");\r\nclass ProtocolCompletionItem extends code.CompletionItem {\r\n    constructor(label) {\r\n        super(label);\r\n    }\r\n}\r\nexports.default = ProtocolCompletionItem;\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst code = require(\"vscode\");\r\nclass ProtocolCodeLens extends code.CodeLens {\r\n    constructor(range) {\r\n        super(range);\r\n    }\r\n}\r\nexports.default = ProtocolCodeLens;\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst code = require(\"vscode\");\r\nclass ProtocolDocumentLink extends code.DocumentLink {\r\n    constructor(range, target) {\r\n        super(range, target);\r\n    }\r\n}\r\nexports.default = ProtocolDocumentLink;\r\n",null,"/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar path = require(\"path\");\r\nvar fs = require(\"fs\");\r\nvar toString = Object.prototype.toString;\r\nfunction isDefined(value) {\r\n    return typeof value !== 'undefined';\r\n}\r\nfunction isNumber(value) {\r\n    return toString.call(value) === '[object Number]';\r\n}\r\nfunction isString(value) {\r\n    return toString.call(value) === '[object String]';\r\n}\r\nfunction isBoolean(value) {\r\n    return value === true || value === false;\r\n}\r\nfunction readJsonFileSync(filename) {\r\n    return JSON.parse(fs.readFileSync(filename, 'utf8'));\r\n}\r\nvar MessageFormat;\r\n(function (MessageFormat) {\r\n    MessageFormat[\"file\"] = \"file\";\r\n    MessageFormat[\"bundle\"] = \"bundle\";\r\n    MessageFormat[\"both\"] = \"both\";\r\n})(MessageFormat = exports.MessageFormat || (exports.MessageFormat = {}));\r\nvar LocalizeInfo;\r\n(function (LocalizeInfo) {\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate && isDefined(candidate.key) && isDefined(candidate.comment);\r\n    }\r\n    LocalizeInfo.is = is;\r\n})(LocalizeInfo || (LocalizeInfo = {}));\r\nvar resolvedLanguage;\r\nvar resolvedBundles;\r\nvar options;\r\nvar isPseudo;\r\nfunction initializeSettings() {\r\n    options = { locale: undefined, languagePackSupport: false, cacheLanguageResolution: true, messageFormat: MessageFormat.bundle };\r\n    if (isString(process.env.VSCODE_NLS_CONFIG)) {\r\n        try {\r\n            var vscodeOptions = JSON.parse(process.env.VSCODE_NLS_CONFIG);\r\n            if (isString(vscodeOptions.locale)) {\r\n                options.locale = vscodeOptions.locale.toLowerCase();\r\n            }\r\n            if (isBoolean(vscodeOptions._languagePackSupport)) {\r\n                options.languagePackSupport = vscodeOptions._languagePackSupport;\r\n            }\r\n            if (isString(vscodeOptions._cacheRoot)) {\r\n                options.cacheRoot = vscodeOptions._cacheRoot;\r\n            }\r\n            if (isString(vscodeOptions._languagePackId)) {\r\n                options.languagePackId = vscodeOptions._languagePackId;\r\n            }\r\n            if (isString(vscodeOptions._translationsConfigFile)) {\r\n                options.translationsConfigFile = vscodeOptions._translationsConfigFile;\r\n                try {\r\n                    options.translationsConfig = readJsonFileSync(options.translationsConfigFile);\r\n                }\r\n                catch (error) {\r\n                    // We can't read the translation config file. Mark the cache as corrupted.\r\n                    if (vscodeOptions._corruptedFile) {\r\n                        fs.writeFile(vscodeOptions._corruptedFile, 'corrupted', 'utf8', function (err) {\r\n                            console.error(err);\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        catch (_a) {\r\n            // Do nothing.\r\n        }\r\n    }\r\n    isPseudo = options.locale === 'pseudo';\r\n    resolvedLanguage = undefined;\r\n    resolvedBundles = Object.create(null);\r\n}\r\ninitializeSettings();\r\nfunction supportsLanguagePack() {\r\n    return options.languagePackSupport === true && options.cacheRoot !== undefined && options.languagePackId !== undefined && options.translationsConfigFile !== undefined\r\n        && options.translationsConfig !== undefined;\r\n}\r\nfunction format(message, args) {\r\n    var result;\r\n    if (isPseudo) {\r\n        // FF3B and FF3D is the Unicode zenkaku representation for [ and ]\r\n        message = '\\uFF3B' + message.replace(/[aouei]/g, '$&$&') + '\\uFF3D';\r\n    }\r\n    if (args.length === 0) {\r\n        result = message;\r\n    }\r\n    else {\r\n        result = message.replace(/\\{(\\d+)\\}/g, function (match, rest) {\r\n            var index = rest[0];\r\n            var arg = args[index];\r\n            var replaced = match;\r\n            if (typeof arg === 'string') {\r\n                replaced = arg;\r\n            }\r\n            else if (typeof arg === 'number' || typeof arg === 'boolean' || arg === void 0 || arg === null) {\r\n                replaced = String(arg);\r\n            }\r\n            return replaced;\r\n        });\r\n    }\r\n    return result;\r\n}\r\nfunction createScopedLocalizeFunction(messages) {\r\n    return function (key, message) {\r\n        var args = [];\r\n        for (var _i = 2; _i < arguments.length; _i++) {\r\n            args[_i - 2] = arguments[_i];\r\n        }\r\n        if (isNumber(key)) {\r\n            if (key >= messages.length) {\r\n                console.error(\"Broken localize call found. Index out of bounds. Stacktrace is\\n: \" + new Error('').stack);\r\n                return;\r\n            }\r\n            return format(messages[key], args);\r\n        }\r\n        else {\r\n            if (isString(message)) {\r\n                console.warn(\"Message \" + message + \" didn't get externalized correctly.\");\r\n                return format(message, args);\r\n            }\r\n            else {\r\n                console.error(\"Broken localize call found. Stacktrace is\\n: \" + new Error('').stack);\r\n            }\r\n        }\r\n    };\r\n}\r\nfunction localize(key, message) {\r\n    var args = [];\r\n    for (var _i = 2; _i < arguments.length; _i++) {\r\n        args[_i - 2] = arguments[_i];\r\n    }\r\n    return format(message, args);\r\n}\r\nfunction resolveLanguage(file) {\r\n    var resolvedLanguage;\r\n    if (options.cacheLanguageResolution && resolvedLanguage) {\r\n        resolvedLanguage = resolvedLanguage;\r\n    }\r\n    else {\r\n        if (isPseudo || !options.locale) {\r\n            resolvedLanguage = '.nls.json';\r\n        }\r\n        else {\r\n            var locale = options.locale;\r\n            while (locale) {\r\n                var candidate = '.nls.' + locale + '.json';\r\n                if (fs.existsSync(file + candidate)) {\r\n                    resolvedLanguage = candidate;\r\n                    break;\r\n                }\r\n                else {\r\n                    var index = locale.lastIndexOf('-');\r\n                    if (index > 0) {\r\n                        locale = locale.substring(0, index);\r\n                    }\r\n                    else {\r\n                        resolvedLanguage = '.nls.json';\r\n                        locale = null;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (options.cacheLanguageResolution) {\r\n            resolvedLanguage = resolvedLanguage;\r\n        }\r\n    }\r\n    return file + resolvedLanguage;\r\n}\r\nfunction findInTheBoxBundle(root) {\r\n    var locale = options.locale;\r\n    while (locale) {\r\n        var candidate = path.join(root, \"nls.bundle.\" + locale + \".json\");\r\n        if (fs.existsSync(candidate)) {\r\n            return candidate;\r\n        }\r\n        else {\r\n            var index = locale.lastIndexOf('-');\r\n            if (index > 0) {\r\n                locale = locale.substring(0, index);\r\n            }\r\n            else {\r\n                locale = undefined;\r\n            }\r\n        }\r\n    }\r\n    // Test if we can reslove the default bundle.\r\n    if (locale === undefined) {\r\n        var candidate = path.join(root, 'nls.bundle.json');\r\n        if (fs.existsSync(candidate)) {\r\n            return candidate;\r\n        }\r\n    }\r\n    return undefined;\r\n}\r\nfunction mkdir(directory) {\r\n    try {\r\n        fs.mkdirSync(directory);\r\n    }\r\n    catch (err) {\r\n        if (err.code === 'EEXIST') {\r\n            return;\r\n        }\r\n        else if (err.code === 'ENOENT') {\r\n            var parent = path.dirname(directory);\r\n            if (parent !== directory) {\r\n                mkdir(parent);\r\n                fs.mkdirSync(directory);\r\n            }\r\n        }\r\n        else {\r\n            throw err;\r\n        }\r\n    }\r\n}\r\nfunction createDefaultNlsBundle(folder) {\r\n    var metaData = readJsonFileSync(path.join(folder, 'nls.metadata.json'));\r\n    var result = Object.create(null);\r\n    for (var module_1 in metaData) {\r\n        var entry = metaData[module_1];\r\n        result[module_1] = entry.messages;\r\n    }\r\n    return result;\r\n}\r\nfunction createNLSBundle(header, metaDataPath) {\r\n    var languagePackLocation = options.translationsConfig[header.id];\r\n    if (!languagePackLocation) {\r\n        return undefined;\r\n    }\r\n    var languagePack = readJsonFileSync(languagePackLocation).contents;\r\n    var metaData = readJsonFileSync(path.join(metaDataPath, 'nls.metadata.json'));\r\n    var result = Object.create(null);\r\n    for (var module_2 in metaData) {\r\n        var entry = metaData[module_2];\r\n        var translations = languagePack[header.outDir + \"/\" + module_2];\r\n        if (translations) {\r\n            var resultMessages = [];\r\n            for (var i = 0; i < entry.keys.length; i++) {\r\n                var messageKey = entry.keys[i];\r\n                var key = isString(messageKey) ? messageKey : messageKey.key;\r\n                var translatedMessage = translations[key];\r\n                if (translatedMessage === undefined) {\r\n                    translatedMessage = entry.messages[i];\r\n                }\r\n                resultMessages.push(translatedMessage);\r\n            }\r\n            result[module_2] = resultMessages;\r\n        }\r\n        else {\r\n            result[module_2] = entry.messages;\r\n        }\r\n    }\r\n    return result;\r\n}\r\nfunction touch(file) {\r\n    var d = new Date();\r\n    fs.utimes(file, d, d, function () {\r\n        // Do nothing. Ignore\r\n    });\r\n}\r\nfunction cacheBundle(key, bundle) {\r\n    resolvedBundles[key] = bundle;\r\n    return bundle;\r\n}\r\nfunction loadNlsBundleOrCreateFromI18n(header, bundlePath) {\r\n    var result;\r\n    var bundle = path.join(options.cacheRoot, header.id + \"-\" + header.hash + \".json\");\r\n    var useMemoryOnly = false;\r\n    var writeBundle = false;\r\n    try {\r\n        result = JSON.parse(fs.readFileSync(bundle, { encoding: 'utf8', flag: 'r' }));\r\n        touch(bundle);\r\n        return result;\r\n    }\r\n    catch (err) {\r\n        if (err.code === 'ENOENT') {\r\n            writeBundle = true;\r\n        }\r\n        else if (err instanceof SyntaxError) {\r\n            // We have a syntax error. So no valid JSON. Use\r\n            console.log(\"Syntax error parsing message bundle: \" + err.message + \".\");\r\n            fs.unlink(bundle, function (err) {\r\n                if (err) {\r\n                    console.error(\"Deleting corrupted bundle \" + bundle + \" failed.\");\r\n                }\r\n            });\r\n            useMemoryOnly = true;\r\n        }\r\n        else {\r\n            throw err;\r\n        }\r\n    }\r\n    result = createNLSBundle(header, bundlePath);\r\n    if (!result || useMemoryOnly) {\r\n        return result;\r\n    }\r\n    if (writeBundle) {\r\n        try {\r\n            fs.writeFileSync(bundle, JSON.stringify(result), { encoding: 'utf8', flag: 'wx' });\r\n        }\r\n        catch (err) {\r\n            if (err.code === 'EEXIST') {\r\n                return result;\r\n            }\r\n            throw err;\r\n        }\r\n    }\r\n    return result;\r\n}\r\nfunction loadDefaultNlsBundle(bundlePath) {\r\n    try {\r\n        return createDefaultNlsBundle(bundlePath);\r\n    }\r\n    catch (err) {\r\n        console.log(\"Generating default bundle from meta data failed.\", err);\r\n        return undefined;\r\n    }\r\n}\r\nfunction loadNlsBundle(header, bundlePath) {\r\n    var result;\r\n    // Core decided to use a language pack. Do the same in the extension\r\n    if (supportsLanguagePack()) {\r\n        try {\r\n            result = loadNlsBundleOrCreateFromI18n(header, bundlePath);\r\n        }\r\n        catch (err) {\r\n            console.log(\"Load or create bundle failed \", err);\r\n        }\r\n    }\r\n    if (!result) {\r\n        // No language pack found, but core is running in language pack mode\r\n        // Don't try to use old in the box bundles since the might be stale\r\n        // Fall right back to the default bundle.\r\n        if (options.languagePackSupport) {\r\n            return loadDefaultNlsBundle(bundlePath);\r\n        }\r\n        var candidate = findInTheBoxBundle(bundlePath);\r\n        if (candidate) {\r\n            try {\r\n                return readJsonFileSync(candidate);\r\n            }\r\n            catch (err) {\r\n                console.log(\"Loading in the box message bundle failed.\", err);\r\n            }\r\n        }\r\n        result = loadDefaultNlsBundle(bundlePath);\r\n    }\r\n    return result;\r\n}\r\nfunction tryFindMetaDataHeaderFile(file) {\r\n    var result;\r\n    var dirname = path.dirname(file);\r\n    while (true) {\r\n        result = path.join(dirname, 'nls.metadata.header.json');\r\n        if (fs.existsSync(result)) {\r\n            break;\r\n        }\r\n        var parent = path.dirname(dirname);\r\n        if (parent === dirname) {\r\n            result = undefined;\r\n            break;\r\n        }\r\n        else {\r\n            dirname = parent;\r\n        }\r\n    }\r\n    return result;\r\n}\r\nfunction loadMessageBundle(file) {\r\n    if (!file) {\r\n        // No file. We are in dev mode. Return the default\r\n        // localize function.\r\n        return localize;\r\n    }\r\n    // Remove extension since we load json files.\r\n    var ext = path.extname(file);\r\n    if (ext) {\r\n        file = file.substr(0, file.length - ext.length);\r\n    }\r\n    if (options.messageFormat === MessageFormat.both || options.messageFormat === MessageFormat.bundle) {\r\n        var headerFile = tryFindMetaDataHeaderFile(file);\r\n        if (headerFile) {\r\n            var bundlePath = path.dirname(headerFile);\r\n            var bundle = resolvedBundles[bundlePath];\r\n            if (bundle === undefined) {\r\n                try {\r\n                    var header = JSON.parse(fs.readFileSync(headerFile, 'utf8'));\r\n                    try {\r\n                        var nlsBundle = loadNlsBundle(header, bundlePath);\r\n                        bundle = cacheBundle(bundlePath, nlsBundle ? { header: header, nlsBundle: nlsBundle } : null);\r\n                    }\r\n                    catch (err) {\r\n                        console.error('Failed to load nls bundle', err);\r\n                        bundle = cacheBundle(bundlePath, null);\r\n                    }\r\n                }\r\n                catch (err) {\r\n                    console.error('Failed to read header file', err);\r\n                    bundle = cacheBundle(bundlePath, null);\r\n                }\r\n            }\r\n            if (bundle) {\r\n                var module_3 = file.substr(bundlePath.length + 1).replace(/\\\\/g, '/');\r\n                var messages = bundle.nlsBundle[module_3];\r\n                if (messages === undefined) {\r\n                    console.error(\"Messages for file \" + file + \" not found. See console for details.\");\r\n                    return function () {\r\n                        return 'Messages not found.';\r\n                    };\r\n                }\r\n                return createScopedLocalizeFunction(messages);\r\n            }\r\n        }\r\n    }\r\n    if (options.messageFormat === MessageFormat.both || options.messageFormat === MessageFormat.file) {\r\n        // Try to load a single file bundle\r\n        try {\r\n            var json = readJsonFileSync(resolveLanguage(file));\r\n            if (Array.isArray(json)) {\r\n                return createScopedLocalizeFunction(json);\r\n            }\r\n            else {\r\n                if (isDefined(json.messages) && isDefined(json.keys)) {\r\n                    return createScopedLocalizeFunction(json.messages);\r\n                }\r\n                else {\r\n                    console.error(\"String bundle '\" + file + \"' uses an unsupported format.\");\r\n                    return function () {\r\n                        return 'File bundle has unsupported format. See console for details';\r\n                    };\r\n                }\r\n            }\r\n        }\r\n        catch (err) {\r\n            if (err.code !== 'ENOENT') {\r\n                console.error('Failed to load single file bundle', err);\r\n            }\r\n        }\r\n    }\r\n    console.error(\"Failed to load message bundle for file \" + file);\r\n    return function () {\r\n        return 'Failed to load message bundle. See console for details.';\r\n    };\r\n}\r\nexports.loadMessageBundle = loadMessageBundle;\r\nfunction config(opts) {\r\n    if (opts) {\r\n        if (isString(opts.locale)) {\r\n            options.locale = opts.locale.toLowerCase();\r\n            resolvedLanguage = undefined;\r\n            resolvedBundles = Object.create(null);\r\n        }\r\n        if (opts.messageFormat !== undefined) {\r\n            options.messageFormat = opts.messageFormat;\r\n        }\r\n    }\r\n    isPseudo = options.locale === 'pseudo';\r\n    return loadMessageBundle;\r\n}\r\nexports.config = config;\r\n//# sourceMappingURL=main.js.map","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nfunction __export(m) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst cp = require(\"child_process\");\r\nconst fs = require(\"fs\");\r\nconst SemVer = require(\"semver\");\r\nconst client_1 = require(\"./client\");\r\nconst vscode_1 = require(\"vscode\");\r\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\r\nconst colorProvider_1 = require(\"./colorProvider\");\r\nconst configuration_1 = require(\"./configuration\");\r\nconst implementation_1 = require(\"./implementation\");\r\nconst typeDefinition_1 = require(\"./typeDefinition\");\r\nconst workspaceFolders_1 = require(\"./workspaceFolders\");\r\nconst foldingRange_1 = require(\"./foldingRange\");\r\nconst declaration_1 = require(\"./declaration\");\r\nconst Is = require(\"./utils/is\");\r\nconst processes_1 = require(\"./utils/processes\");\r\n__export(require(\"./client\"));\r\nconst REQUIRED_VSCODE_VERSION = '^1.30'; // do not change format, updated by `updateVSCode` script\r\nvar Executable;\r\n(function (Executable) {\r\n    function is(value) {\r\n        return Is.string(value.command);\r\n    }\r\n    Executable.is = is;\r\n})(Executable || (Executable = {}));\r\nvar TransportKind;\r\n(function (TransportKind) {\r\n    TransportKind[TransportKind[\"stdio\"] = 0] = \"stdio\";\r\n    TransportKind[TransportKind[\"ipc\"] = 1] = \"ipc\";\r\n    TransportKind[TransportKind[\"pipe\"] = 2] = \"pipe\";\r\n    TransportKind[TransportKind[\"socket\"] = 3] = \"socket\";\r\n})(TransportKind = exports.TransportKind || (exports.TransportKind = {}));\r\nvar Transport;\r\n(function (Transport) {\r\n    function isSocket(value) {\r\n        let candidate = value;\r\n        return candidate && candidate.kind === TransportKind.socket && Is.number(candidate.port);\r\n    }\r\n    Transport.isSocket = isSocket;\r\n})(Transport || (Transport = {}));\r\nvar NodeModule;\r\n(function (NodeModule) {\r\n    function is(value) {\r\n        return Is.string(value.module);\r\n    }\r\n    NodeModule.is = is;\r\n})(NodeModule || (NodeModule = {}));\r\nvar StreamInfo;\r\n(function (StreamInfo) {\r\n    function is(value) {\r\n        let candidate = value;\r\n        return candidate && candidate.writer !== void 0 && candidate.reader !== void 0;\r\n    }\r\n    StreamInfo.is = is;\r\n})(StreamInfo || (StreamInfo = {}));\r\nvar ChildProcessInfo;\r\n(function (ChildProcessInfo) {\r\n    function is(value) {\r\n        let candidate = value;\r\n        return candidate && candidate.process !== void 0 && typeof candidate.detached === 'boolean';\r\n    }\r\n    ChildProcessInfo.is = is;\r\n})(ChildProcessInfo || (ChildProcessInfo = {}));\r\nclass LanguageClient extends client_1.BaseLanguageClient {\r\n    constructor(arg1, arg2, arg3, arg4, arg5) {\r\n        let id;\r\n        let name;\r\n        let serverOptions;\r\n        let clientOptions;\r\n        let forceDebug;\r\n        if (Is.string(arg2)) {\r\n            id = arg1;\r\n            name = arg2;\r\n            serverOptions = arg3;\r\n            clientOptions = arg4;\r\n            forceDebug = !!arg5;\r\n        }\r\n        else {\r\n            id = arg1.toLowerCase();\r\n            name = arg1;\r\n            serverOptions = arg2;\r\n            clientOptions = arg3;\r\n            forceDebug = arg4;\r\n        }\r\n        if (forceDebug === void 0) {\r\n            forceDebug = false;\r\n        }\r\n        super(id, name, clientOptions);\r\n        this._serverOptions = serverOptions;\r\n        this._forceDebug = forceDebug;\r\n        try {\r\n            this.checkVersion();\r\n        }\r\n        catch (error) {\r\n            if (Is.string(error.message)) {\r\n                this.outputChannel.appendLine(error.message);\r\n            }\r\n            throw error;\r\n        }\r\n    }\r\n    checkVersion() {\r\n        let codeVersion = SemVer.parse(vscode_1.version);\r\n        if (!codeVersion) {\r\n            throw new Error(`No valid VS Code version detected. Version string is: ${vscode_1.version}`);\r\n        }\r\n        // Remove the insider pre-release since we stay API compatible.\r\n        if (codeVersion.prerelease && codeVersion.prerelease.length > 0) {\r\n            codeVersion.prerelease = [];\r\n        }\r\n        if (!SemVer.satisfies(codeVersion, REQUIRED_VSCODE_VERSION)) {\r\n            throw new Error(`The language client requires VS Code version ${REQUIRED_VSCODE_VERSION} but received version ${vscode_1.version}`);\r\n        }\r\n    }\r\n    stop() {\r\n        return super.stop().then(() => {\r\n            if (this._serverProcess) {\r\n                let toCheck = this._serverProcess;\r\n                this._serverProcess = undefined;\r\n                if (this._isDetached === void 0 || !this._isDetached) {\r\n                    this.checkProcessDied(toCheck);\r\n                }\r\n                this._isDetached = undefined;\r\n            }\r\n        });\r\n    }\r\n    checkProcessDied(childProcess) {\r\n        if (!childProcess) {\r\n            return;\r\n        }\r\n        setTimeout(() => {\r\n            // Test if the process is still alive. Throws an exception if not\r\n            try {\r\n                process.kill(childProcess.pid, 0);\r\n                processes_1.terminate(childProcess);\r\n            }\r\n            catch (error) {\r\n                // All is fine.\r\n            }\r\n        }, 2000);\r\n    }\r\n    handleConnectionClosed() {\r\n        this._serverProcess = undefined;\r\n        super.handleConnectionClosed();\r\n    }\r\n    createMessageTransports(encoding) {\r\n        function getEnvironment(env) {\r\n            if (!env) {\r\n                return process.env;\r\n            }\r\n            let result = Object.create(null);\r\n            Object.keys(process.env).forEach(key => result[key] = process.env[key]);\r\n            Object.keys(env).forEach(key => result[key] = env[key]);\r\n            return result;\r\n        }\r\n        function startedInDebugMode() {\r\n            let args = process.execArgv;\r\n            if (args) {\r\n                return args.some((arg) => /^--debug=?/.test(arg) || /^--debug-brk=?/.test(arg) || /^--inspect=?/.test(arg) || /^--inspect-brk=?/.test(arg));\r\n            }\r\n            ;\r\n            return false;\r\n        }\r\n        let server = this._serverOptions;\r\n        // We got a function.\r\n        if (Is.func(server)) {\r\n            return server().then((result) => {\r\n                if (client_1.MessageTransports.is(result)) {\r\n                    this._isDetached = !!result.detached;\r\n                    return result;\r\n                }\r\n                else if (StreamInfo.is(result)) {\r\n                    this._isDetached = !!result.detached;\r\n                    return { reader: new vscode_languageserver_protocol_1.StreamMessageReader(result.reader), writer: new vscode_languageserver_protocol_1.StreamMessageWriter(result.writer) };\r\n                }\r\n                else {\r\n                    let cp;\r\n                    if (ChildProcessInfo.is(result)) {\r\n                        cp = result.process;\r\n                        this._isDetached = result.detached;\r\n                    }\r\n                    else {\r\n                        cp = result;\r\n                        this._isDetached = false;\r\n                    }\r\n                    cp.stderr.on('data', data => this.outputChannel.append(Is.string(data) ? data : data.toString(encoding)));\r\n                    return { reader: new vscode_languageserver_protocol_1.StreamMessageReader(cp.stdout), writer: new vscode_languageserver_protocol_1.StreamMessageWriter(cp.stdin) };\r\n                }\r\n            });\r\n        }\r\n        let json;\r\n        let runDebug = server;\r\n        if (runDebug.run || runDebug.debug) {\r\n            // We are under debugging. So use debug as well.\r\n            if (typeof v8debug === 'object' || this._forceDebug || startedInDebugMode()) {\r\n                json = runDebug.debug;\r\n            }\r\n            else {\r\n                json = runDebug.run;\r\n            }\r\n        }\r\n        else {\r\n            json = server;\r\n        }\r\n        return this._getServerWorkingDir(json.options).then(serverWorkingDir => {\r\n            if (NodeModule.is(json) && json.module) {\r\n                let node = json;\r\n                let transport = node.transport || TransportKind.stdio;\r\n                if (node.runtime) {\r\n                    let args = [];\r\n                    let options = node.options || Object.create(null);\r\n                    if (options.execArgv) {\r\n                        options.execArgv.forEach(element => args.push(element));\r\n                    }\r\n                    args.push(node.module);\r\n                    if (node.args) {\r\n                        node.args.forEach(element => args.push(element));\r\n                    }\r\n                    let execOptions = Object.create(null);\r\n                    execOptions.cwd = serverWorkingDir;\r\n                    execOptions.env = getEnvironment(options.env);\r\n                    let pipeName = undefined;\r\n                    if (transport === TransportKind.ipc) {\r\n                        // exec options not correctly typed in lib\r\n                        execOptions.stdio = [null, null, null, 'ipc'];\r\n                        args.push('--node-ipc');\r\n                    }\r\n                    else if (transport === TransportKind.stdio) {\r\n                        args.push('--stdio');\r\n                    }\r\n                    else if (transport === TransportKind.pipe) {\r\n                        pipeName = vscode_languageserver_protocol_1.generateRandomPipeName();\r\n                        args.push(`--pipe=${pipeName}`);\r\n                    }\r\n                    else if (Transport.isSocket(transport)) {\r\n                        args.push(`--socket=${transport.port}`);\r\n                    }\r\n                    args.push(`--clientProcessId=${process.pid.toString()}`);\r\n                    if (transport === TransportKind.ipc || transport === TransportKind.stdio) {\r\n                        let serverProcess = cp.spawn(node.runtime, args, execOptions);\r\n                        if (!serverProcess || !serverProcess.pid) {\r\n                            return Promise.reject(`Launching server using runtime ${node.runtime} failed.`);\r\n                        }\r\n                        this._serverProcess = serverProcess;\r\n                        serverProcess.stderr.on('data', data => this.outputChannel.append(Is.string(data) ? data : data.toString(encoding)));\r\n                        if (transport === TransportKind.ipc) {\r\n                            serverProcess.stdout.on('data', data => this.outputChannel.append(Is.string(data) ? data : data.toString(encoding)));\r\n                            return Promise.resolve({ reader: new vscode_languageserver_protocol_1.IPCMessageReader(serverProcess), writer: new vscode_languageserver_protocol_1.IPCMessageWriter(serverProcess) });\r\n                        }\r\n                        else {\r\n                            return Promise.resolve({ reader: new vscode_languageserver_protocol_1.StreamMessageReader(serverProcess.stdout), writer: new vscode_languageserver_protocol_1.StreamMessageWriter(serverProcess.stdin) });\r\n                        }\r\n                    }\r\n                    else if (transport == TransportKind.pipe) {\r\n                        return vscode_languageserver_protocol_1.createClientPipeTransport(pipeName).then((transport) => {\r\n                            let process = cp.spawn(node.runtime, args, execOptions);\r\n                            if (!process || !process.pid) {\r\n                                return Promise.reject(`Launching server using runtime ${node.runtime} failed.`);\r\n                            }\r\n                            this._serverProcess = process;\r\n                            process.stderr.on('data', data => this.outputChannel.append(Is.string(data) ? data : data.toString(encoding)));\r\n                            process.stdout.on('data', data => this.outputChannel.append(Is.string(data) ? data : data.toString(encoding)));\r\n                            return transport.onConnected().then((protocol) => {\r\n                                return { reader: protocol[0], writer: protocol[1] };\r\n                            });\r\n                        });\r\n                    }\r\n                    else if (Transport.isSocket(transport)) {\r\n                        return vscode_languageserver_protocol_1.createClientSocketTransport(transport.port).then((transport) => {\r\n                            let process = cp.spawn(node.runtime, args, execOptions);\r\n                            if (!process || !process.pid) {\r\n                                return Promise.reject(`Launching server using runtime ${node.runtime} failed.`);\r\n                            }\r\n                            this._serverProcess = process;\r\n                            process.stderr.on('data', data => this.outputChannel.append(Is.string(data) ? data : data.toString(encoding)));\r\n                            process.stdout.on('data', data => this.outputChannel.append(Is.string(data) ? data : data.toString(encoding)));\r\n                            return transport.onConnected().then((protocol) => {\r\n                                return { reader: protocol[0], writer: protocol[1] };\r\n                            });\r\n                        });\r\n                    }\r\n                }\r\n                else {\r\n                    let pipeName = undefined;\r\n                    return new Promise((resolve, _reject) => {\r\n                        let args = node.args && node.args.slice() || [];\r\n                        if (transport === TransportKind.ipc) {\r\n                            args.push('--node-ipc');\r\n                        }\r\n                        else if (transport === TransportKind.stdio) {\r\n                            args.push('--stdio');\r\n                        }\r\n                        else if (transport === TransportKind.pipe) {\r\n                            pipeName = vscode_languageserver_protocol_1.generateRandomPipeName();\r\n                            args.push(`--pipe=${pipeName}`);\r\n                        }\r\n                        else if (Transport.isSocket(transport)) {\r\n                            args.push(`--socket=${transport.port}`);\r\n                        }\r\n                        args.push(`--clientProcessId=${process.pid.toString()}`);\r\n                        let options = node.options || Object.create(null);\r\n                        options.execArgv = options.execArgv || [];\r\n                        options.cwd = serverWorkingDir;\r\n                        options.silent = true;\r\n                        if (transport === TransportKind.ipc || transport === TransportKind.stdio) {\r\n                            let sp = cp.fork(node.module, args || [], options);\r\n                            this._serverProcess = sp;\r\n                            sp.stderr.on('data', data => this.outputChannel.append(Is.string(data) ? data : data.toString(encoding)));\r\n                            if (transport === TransportKind.ipc) {\r\n                                sp.stdout.on('data', data => this.outputChannel.append(Is.string(data) ? data : data.toString(encoding)));\r\n                                resolve({ reader: new vscode_languageserver_protocol_1.IPCMessageReader(this._serverProcess), writer: new vscode_languageserver_protocol_1.IPCMessageWriter(this._serverProcess) });\r\n                            }\r\n                            else {\r\n                                resolve({ reader: new vscode_languageserver_protocol_1.StreamMessageReader(sp.stdout), writer: new vscode_languageserver_protocol_1.StreamMessageWriter(sp.stdin) });\r\n                            }\r\n                        }\r\n                        else if (transport === TransportKind.pipe) {\r\n                            vscode_languageserver_protocol_1.createClientPipeTransport(pipeName).then((transport) => {\r\n                                let sp = cp.fork(node.module, args || [], options);\r\n                                this._serverProcess = sp;\r\n                                sp.stderr.on('data', data => this.outputChannel.append(Is.string(data) ? data : data.toString(encoding)));\r\n                                sp.stdout.on('data', data => this.outputChannel.append(Is.string(data) ? data : data.toString(encoding)));\r\n                                transport.onConnected().then((protocol) => {\r\n                                    resolve({ reader: protocol[0], writer: protocol[1] });\r\n                                });\r\n                            });\r\n                        }\r\n                        else if (Transport.isSocket(transport)) {\r\n                            vscode_languageserver_protocol_1.createClientSocketTransport(transport.port).then((transport) => {\r\n                                let sp = cp.fork(node.module, args || [], options);\r\n                                this._serverProcess = sp;\r\n                                sp.stderr.on('data', data => this.outputChannel.append(Is.string(data) ? data : data.toString(encoding)));\r\n                                sp.stdout.on('data', data => this.outputChannel.append(Is.string(data) ? data : data.toString(encoding)));\r\n                                transport.onConnected().then((protocol) => {\r\n                                    resolve({ reader: protocol[0], writer: protocol[1] });\r\n                                });\r\n                            });\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n            else if (Executable.is(json) && json.command) {\r\n                let command = json;\r\n                let args = command.args || [];\r\n                let options = Object.assign({}, command.options);\r\n                options.cwd = options.cwd || serverWorkingDir;\r\n                let serverProcess = cp.spawn(command.command, args, options);\r\n                if (!serverProcess || !serverProcess.pid) {\r\n                    return Promise.reject(`Launching server using command ${command.command} failed.`);\r\n                }\r\n                serverProcess.stderr.on('data', data => this.outputChannel.append(Is.string(data) ? data : data.toString(encoding)));\r\n                this._serverProcess = serverProcess;\r\n                this._isDetached = !!options.detached;\r\n                return Promise.resolve({ reader: new vscode_languageserver_protocol_1.StreamMessageReader(serverProcess.stdout), writer: new vscode_languageserver_protocol_1.StreamMessageWriter(serverProcess.stdin) });\r\n            }\r\n            return Promise.reject(new Error(`Unsupported server configuration ` + JSON.stringify(server, null, 4)));\r\n        });\r\n    }\r\n    registerProposedFeatures() {\r\n        this.registerFeatures(ProposedFeatures.createAll(this));\r\n    }\r\n    registerBuiltinFeatures() {\r\n        super.registerBuiltinFeatures();\r\n        this.registerFeature(new configuration_1.ConfigurationFeature(this));\r\n        this.registerFeature(new typeDefinition_1.TypeDefinitionFeature(this));\r\n        this.registerFeature(new implementation_1.ImplementationFeature(this));\r\n        this.registerFeature(new colorProvider_1.ColorProviderFeature(this));\r\n        this.registerFeature(new workspaceFolders_1.WorkspaceFoldersFeature(this));\r\n        this.registerFeature(new foldingRange_1.FoldingRangeFeature(this));\r\n        this.registerFeature(new declaration_1.DeclarationFeature(this));\r\n    }\r\n    _mainGetRootPath() {\r\n        let folders = vscode_1.workspace.workspaceFolders;\r\n        if (!folders || folders.length === 0) {\r\n            return undefined;\r\n        }\r\n        let folder = folders[0];\r\n        if (folder.uri.scheme === 'file') {\r\n            return folder.uri.fsPath;\r\n        }\r\n        return undefined;\r\n    }\r\n    _getServerWorkingDir(options) {\r\n        let cwd = options && options.cwd;\r\n        if (!cwd) {\r\n            cwd = this.clientOptions.workspaceFolder\r\n                ? this.clientOptions.workspaceFolder.uri.fsPath\r\n                : this._mainGetRootPath();\r\n        }\r\n        if (cwd) {\r\n            // make sure the folder exists otherwise creating the process will fail\r\n            return new Promise(s => {\r\n                fs.lstat(cwd, (err, stats) => {\r\n                    s(!err && stats.isDirectory() ? cwd : undefined);\r\n                });\r\n            });\r\n        }\r\n        return Promise.resolve(undefined);\r\n    }\r\n}\r\nexports.LanguageClient = LanguageClient;\r\nclass SettingMonitor {\r\n    constructor(_client, _setting) {\r\n        this._client = _client;\r\n        this._setting = _setting;\r\n        this._listeners = [];\r\n    }\r\n    start() {\r\n        vscode_1.workspace.onDidChangeConfiguration(this.onDidChangeConfiguration, this, this._listeners);\r\n        this.onDidChangeConfiguration();\r\n        return new vscode_1.Disposable(() => {\r\n            if (this._client.needsStop()) {\r\n                this._client.stop();\r\n            }\r\n        });\r\n    }\r\n    onDidChangeConfiguration() {\r\n        let index = this._setting.indexOf('.');\r\n        let primary = index >= 0 ? this._setting.substr(0, index) : this._setting;\r\n        let rest = index >= 0 ? this._setting.substr(index + 1) : undefined;\r\n        let enabled = rest ? vscode_1.workspace.getConfiguration(primary).get(rest, false) : vscode_1.workspace.getConfiguration(primary);\r\n        if (enabled && this._client.needsStart()) {\r\n            this._client.start();\r\n        }\r\n        else if (!enabled && this._client.needsStop()) {\r\n            this._client.stop();\r\n        }\r\n    }\r\n}\r\nexports.SettingMonitor = SettingMonitor;\r\n// Exporting proposed protocol.\r\nvar ProposedFeatures;\r\n(function (ProposedFeatures) {\r\n    function createAll(_client) {\r\n        let result = [];\r\n        return result;\r\n    }\r\n    ProposedFeatures.createAll = createAll;\r\n})(ProposedFeatures = exports.ProposedFeatures || (exports.ProposedFeatures = {}));\r\n","exports = module.exports = SemVer;\n\n// The debug function is excluded entirely from the minified version.\n/* nomin */ var debug;\n/* nomin */ if (typeof process === 'object' &&\n    /* nomin */ process.env &&\n    /* nomin */ process.env.NODE_DEBUG &&\n    /* nomin */ /\\bsemver\\b/i.test(process.env.NODE_DEBUG))\n  /* nomin */ debug = function() {\n    /* nomin */ var args = Array.prototype.slice.call(arguments, 0);\n    /* nomin */ args.unshift('SEMVER');\n    /* nomin */ console.log.apply(console, args);\n    /* nomin */ };\n/* nomin */ else\n  /* nomin */ debug = function() {};\n\n// Note: this is the semver.org version of the spec that it implements\n// Not necessarily the package version of this code.\nexports.SEMVER_SPEC_VERSION = '2.0.0';\n\nvar MAX_LENGTH = 256;\nvar MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;\n\n// Max safe segment length for coercion.\nvar MAX_SAFE_COMPONENT_LENGTH = 16;\n\n// The actual regexps go on exports.re\nvar re = exports.re = [];\nvar src = exports.src = [];\nvar R = 0;\n\n// The following Regular Expressions can be used for tokenizing,\n// validating, and parsing SemVer version strings.\n\n// ## Numeric Identifier\n// A single `0`, or a non-zero digit followed by zero or more digits.\n\nvar NUMERICIDENTIFIER = R++;\nsrc[NUMERICIDENTIFIER] = '0|[1-9]\\\\d*';\nvar NUMERICIDENTIFIERLOOSE = R++;\nsrc[NUMERICIDENTIFIERLOOSE] = '[0-9]+';\n\n\n// ## Non-numeric Identifier\n// Zero or more digits, followed by a letter or hyphen, and then zero or\n// more letters, digits, or hyphens.\n\nvar NONNUMERICIDENTIFIER = R++;\nsrc[NONNUMERICIDENTIFIER] = '\\\\d*[a-zA-Z-][a-zA-Z0-9-]*';\n\n\n// ## Main Version\n// Three dot-separated numeric identifiers.\n\nvar MAINVERSION = R++;\nsrc[MAINVERSION] = '(' + src[NUMERICIDENTIFIER] + ')\\\\.' +\n                   '(' + src[NUMERICIDENTIFIER] + ')\\\\.' +\n                   '(' + src[NUMERICIDENTIFIER] + ')';\n\nvar MAINVERSIONLOOSE = R++;\nsrc[MAINVERSIONLOOSE] = '(' + src[NUMERICIDENTIFIERLOOSE] + ')\\\\.' +\n                        '(' + src[NUMERICIDENTIFIERLOOSE] + ')\\\\.' +\n                        '(' + src[NUMERICIDENTIFIERLOOSE] + ')';\n\n// ## Pre-release Version Identifier\n// A numeric identifier, or a non-numeric identifier.\n\nvar PRERELEASEIDENTIFIER = R++;\nsrc[PRERELEASEIDENTIFIER] = '(?:' + src[NUMERICIDENTIFIER] +\n                            '|' + src[NONNUMERICIDENTIFIER] + ')';\n\nvar PRERELEASEIDENTIFIERLOOSE = R++;\nsrc[PRERELEASEIDENTIFIERLOOSE] = '(?:' + src[NUMERICIDENTIFIERLOOSE] +\n                                 '|' + src[NONNUMERICIDENTIFIER] + ')';\n\n\n// ## Pre-release Version\n// Hyphen, followed by one or more dot-separated pre-release version\n// identifiers.\n\nvar PRERELEASE = R++;\nsrc[PRERELEASE] = '(?:-(' + src[PRERELEASEIDENTIFIER] +\n                  '(?:\\\\.' + src[PRERELEASEIDENTIFIER] + ')*))';\n\nvar PRERELEASELOOSE = R++;\nsrc[PRERELEASELOOSE] = '(?:-?(' + src[PRERELEASEIDENTIFIERLOOSE] +\n                       '(?:\\\\.' + src[PRERELEASEIDENTIFIERLOOSE] + ')*))';\n\n// ## Build Metadata Identifier\n// Any combination of digits, letters, or hyphens.\n\nvar BUILDIDENTIFIER = R++;\nsrc[BUILDIDENTIFIER] = '[0-9A-Za-z-]+';\n\n// ## Build Metadata\n// Plus sign, followed by one or more period-separated build metadata\n// identifiers.\n\nvar BUILD = R++;\nsrc[BUILD] = '(?:\\\\+(' + src[BUILDIDENTIFIER] +\n             '(?:\\\\.' + src[BUILDIDENTIFIER] + ')*))';\n\n\n// ## Full Version String\n// A main version, followed optionally by a pre-release version and\n// build metadata.\n\n// Note that the only major, minor, patch, and pre-release sections of\n// the version string are capturing groups.  The build metadata is not a\n// capturing group, because it should not ever be used in version\n// comparison.\n\nvar FULL = R++;\nvar FULLPLAIN = 'v?' + src[MAINVERSION] +\n                src[PRERELEASE] + '?' +\n                src[BUILD] + '?';\n\nsrc[FULL] = '^' + FULLPLAIN + '$';\n\n// like full, but allows v1.2.3 and =1.2.3, which people do sometimes.\n// also, 1.0.0alpha1 (prerelease without the hyphen) which is pretty\n// common in the npm registry.\nvar LOOSEPLAIN = '[v=\\\\s]*' + src[MAINVERSIONLOOSE] +\n                 src[PRERELEASELOOSE] + '?' +\n                 src[BUILD] + '?';\n\nvar LOOSE = R++;\nsrc[LOOSE] = '^' + LOOSEPLAIN + '$';\n\nvar GTLT = R++;\nsrc[GTLT] = '((?:<|>)?=?)';\n\n// Something like \"2.*\" or \"1.2.x\".\n// Note that \"x.x\" is a valid xRange identifer, meaning \"any version\"\n// Only the first item is strictly required.\nvar XRANGEIDENTIFIERLOOSE = R++;\nsrc[XRANGEIDENTIFIERLOOSE] = src[NUMERICIDENTIFIERLOOSE] + '|x|X|\\\\*';\nvar XRANGEIDENTIFIER = R++;\nsrc[XRANGEIDENTIFIER] = src[NUMERICIDENTIFIER] + '|x|X|\\\\*';\n\nvar XRANGEPLAIN = R++;\nsrc[XRANGEPLAIN] = '[v=\\\\s]*(' + src[XRANGEIDENTIFIER] + ')' +\n                   '(?:\\\\.(' + src[XRANGEIDENTIFIER] + ')' +\n                   '(?:\\\\.(' + src[XRANGEIDENTIFIER] + ')' +\n                   '(?:' + src[PRERELEASE] + ')?' +\n                   src[BUILD] + '?' +\n                   ')?)?';\n\nvar XRANGEPLAINLOOSE = R++;\nsrc[XRANGEPLAINLOOSE] = '[v=\\\\s]*(' + src[XRANGEIDENTIFIERLOOSE] + ')' +\n                        '(?:\\\\.(' + src[XRANGEIDENTIFIERLOOSE] + ')' +\n                        '(?:\\\\.(' + src[XRANGEIDENTIFIERLOOSE] + ')' +\n                        '(?:' + src[PRERELEASELOOSE] + ')?' +\n                        src[BUILD] + '?' +\n                        ')?)?';\n\nvar XRANGE = R++;\nsrc[XRANGE] = '^' + src[GTLT] + '\\\\s*' + src[XRANGEPLAIN] + '$';\nvar XRANGELOOSE = R++;\nsrc[XRANGELOOSE] = '^' + src[GTLT] + '\\\\s*' + src[XRANGEPLAINLOOSE] + '$';\n\n// Coercion.\n// Extract anything that could conceivably be a part of a valid semver\nvar COERCE = R++;\nsrc[COERCE] = '(?:^|[^\\\\d])' +\n              '(\\\\d{1,' + MAX_SAFE_COMPONENT_LENGTH + '})' +\n              '(?:\\\\.(\\\\d{1,' + MAX_SAFE_COMPONENT_LENGTH + '}))?' +\n              '(?:\\\\.(\\\\d{1,' + MAX_SAFE_COMPONENT_LENGTH + '}))?' +\n              '(?:$|[^\\\\d])';\n\n// Tilde ranges.\n// Meaning is \"reasonably at or greater than\"\nvar LONETILDE = R++;\nsrc[LONETILDE] = '(?:~>?)';\n\nvar TILDETRIM = R++;\nsrc[TILDETRIM] = '(\\\\s*)' + src[LONETILDE] + '\\\\s+';\nre[TILDETRIM] = new RegExp(src[TILDETRIM], 'g');\nvar tildeTrimReplace = '$1~';\n\nvar TILDE = R++;\nsrc[TILDE] = '^' + src[LONETILDE] + src[XRANGEPLAIN] + '$';\nvar TILDELOOSE = R++;\nsrc[TILDELOOSE] = '^' + src[LONETILDE] + src[XRANGEPLAINLOOSE] + '$';\n\n// Caret ranges.\n// Meaning is \"at least and backwards compatible with\"\nvar LONECARET = R++;\nsrc[LONECARET] = '(?:\\\\^)';\n\nvar CARETTRIM = R++;\nsrc[CARETTRIM] = '(\\\\s*)' + src[LONECARET] + '\\\\s+';\nre[CARETTRIM] = new RegExp(src[CARETTRIM], 'g');\nvar caretTrimReplace = '$1^';\n\nvar CARET = R++;\nsrc[CARET] = '^' + src[LONECARET] + src[XRANGEPLAIN] + '$';\nvar CARETLOOSE = R++;\nsrc[CARETLOOSE] = '^' + src[LONECARET] + src[XRANGEPLAINLOOSE] + '$';\n\n// A simple gt/lt/eq thing, or just \"\" to indicate \"any version\"\nvar COMPARATORLOOSE = R++;\nsrc[COMPARATORLOOSE] = '^' + src[GTLT] + '\\\\s*(' + LOOSEPLAIN + ')$|^$';\nvar COMPARATOR = R++;\nsrc[COMPARATOR] = '^' + src[GTLT] + '\\\\s*(' + FULLPLAIN + ')$|^$';\n\n\n// An expression to strip any whitespace between the gtlt and the thing\n// it modifies, so that `> 1.2.3` ==> `>1.2.3`\nvar COMPARATORTRIM = R++;\nsrc[COMPARATORTRIM] = '(\\\\s*)' + src[GTLT] +\n                      '\\\\s*(' + LOOSEPLAIN + '|' + src[XRANGEPLAIN] + ')';\n\n// this one has to use the /g flag\nre[COMPARATORTRIM] = new RegExp(src[COMPARATORTRIM], 'g');\nvar comparatorTrimReplace = '$1$2$3';\n\n\n// Something like `1.2.3 - 1.2.4`\n// Note that these all use the loose form, because they'll be\n// checked against either the strict or loose comparator form\n// later.\nvar HYPHENRANGE = R++;\nsrc[HYPHENRANGE] = '^\\\\s*(' + src[XRANGEPLAIN] + ')' +\n                   '\\\\s+-\\\\s+' +\n                   '(' + src[XRANGEPLAIN] + ')' +\n                   '\\\\s*$';\n\nvar HYPHENRANGELOOSE = R++;\nsrc[HYPHENRANGELOOSE] = '^\\\\s*(' + src[XRANGEPLAINLOOSE] + ')' +\n                        '\\\\s+-\\\\s+' +\n                        '(' + src[XRANGEPLAINLOOSE] + ')' +\n                        '\\\\s*$';\n\n// Star ranges basically just allow anything at all.\nvar STAR = R++;\nsrc[STAR] = '(<|>)?=?\\\\s*\\\\*';\n\n// Compile to actual regexp objects.\n// All are flag-free, unless they were created above with a flag.\nfor (var i = 0; i < R; i++) {\n  debug(i, src[i]);\n  if (!re[i])\n    re[i] = new RegExp(src[i]);\n}\n\nexports.parse = parse;\nfunction parse(version, loose) {\n  if (version instanceof SemVer)\n    return version;\n\n  if (typeof version !== 'string')\n    return null;\n\n  if (version.length > MAX_LENGTH)\n    return null;\n\n  var r = loose ? re[LOOSE] : re[FULL];\n  if (!r.test(version))\n    return null;\n\n  try {\n    return new SemVer(version, loose);\n  } catch (er) {\n    return null;\n  }\n}\n\nexports.valid = valid;\nfunction valid(version, loose) {\n  var v = parse(version, loose);\n  return v ? v.version : null;\n}\n\n\nexports.clean = clean;\nfunction clean(version, loose) {\n  var s = parse(version.trim().replace(/^[=v]+/, ''), loose);\n  return s ? s.version : null;\n}\n\nexports.SemVer = SemVer;\n\nfunction SemVer(version, loose) {\n  if (version instanceof SemVer) {\n    if (version.loose === loose)\n      return version;\n    else\n      version = version.version;\n  } else if (typeof version !== 'string') {\n    throw new TypeError('Invalid Version: ' + version);\n  }\n\n  if (version.length > MAX_LENGTH)\n    throw new TypeError('version is longer than ' + MAX_LENGTH + ' characters')\n\n  if (!(this instanceof SemVer))\n    return new SemVer(version, loose);\n\n  debug('SemVer', version, loose);\n  this.loose = loose;\n  var m = version.trim().match(loose ? re[LOOSE] : re[FULL]);\n\n  if (!m)\n    throw new TypeError('Invalid Version: ' + version);\n\n  this.raw = version;\n\n  // these are actually numbers\n  this.major = +m[1];\n  this.minor = +m[2];\n  this.patch = +m[3];\n\n  if (this.major > MAX_SAFE_INTEGER || this.major < 0)\n    throw new TypeError('Invalid major version')\n\n  if (this.minor > MAX_SAFE_INTEGER || this.minor < 0)\n    throw new TypeError('Invalid minor version')\n\n  if (this.patch > MAX_SAFE_INTEGER || this.patch < 0)\n    throw new TypeError('Invalid patch version')\n\n  // numberify any prerelease numeric ids\n  if (!m[4])\n    this.prerelease = [];\n  else\n    this.prerelease = m[4].split('.').map(function(id) {\n      if (/^[0-9]+$/.test(id)) {\n        var num = +id;\n        if (num >= 0 && num < MAX_SAFE_INTEGER)\n          return num;\n      }\n      return id;\n    });\n\n  this.build = m[5] ? m[5].split('.') : [];\n  this.format();\n}\n\nSemVer.prototype.format = function() {\n  this.version = this.major + '.' + this.minor + '.' + this.patch;\n  if (this.prerelease.length)\n    this.version += '-' + this.prerelease.join('.');\n  return this.version;\n};\n\nSemVer.prototype.toString = function() {\n  return this.version;\n};\n\nSemVer.prototype.compare = function(other) {\n  debug('SemVer.compare', this.version, this.loose, other);\n  if (!(other instanceof SemVer))\n    other = new SemVer(other, this.loose);\n\n  return this.compareMain(other) || this.comparePre(other);\n};\n\nSemVer.prototype.compareMain = function(other) {\n  if (!(other instanceof SemVer))\n    other = new SemVer(other, this.loose);\n\n  return compareIdentifiers(this.major, other.major) ||\n         compareIdentifiers(this.minor, other.minor) ||\n         compareIdentifiers(this.patch, other.patch);\n};\n\nSemVer.prototype.comparePre = function(other) {\n  if (!(other instanceof SemVer))\n    other = new SemVer(other, this.loose);\n\n  // NOT having a prerelease is > having one\n  if (this.prerelease.length && !other.prerelease.length)\n    return -1;\n  else if (!this.prerelease.length && other.prerelease.length)\n    return 1;\n  else if (!this.prerelease.length && !other.prerelease.length)\n    return 0;\n\n  var i = 0;\n  do {\n    var a = this.prerelease[i];\n    var b = other.prerelease[i];\n    debug('prerelease compare', i, a, b);\n    if (a === undefined && b === undefined)\n      return 0;\n    else if (b === undefined)\n      return 1;\n    else if (a === undefined)\n      return -1;\n    else if (a === b)\n      continue;\n    else\n      return compareIdentifiers(a, b);\n  } while (++i);\n};\n\n// preminor will bump the version up to the next minor release, and immediately\n// down to pre-release. premajor and prepatch work the same way.\nSemVer.prototype.inc = function(release, identifier) {\n  switch (release) {\n    case 'premajor':\n      this.prerelease.length = 0;\n      this.patch = 0;\n      this.minor = 0;\n      this.major++;\n      this.inc('pre', identifier);\n      break;\n    case 'preminor':\n      this.prerelease.length = 0;\n      this.patch = 0;\n      this.minor++;\n      this.inc('pre', identifier);\n      break;\n    case 'prepatch':\n      // If this is already a prerelease, it will bump to the next version\n      // drop any prereleases that might already exist, since they are not\n      // relevant at this point.\n      this.prerelease.length = 0;\n      this.inc('patch', identifier);\n      this.inc('pre', identifier);\n      break;\n    // If the input is a non-prerelease version, this acts the same as\n    // prepatch.\n    case 'prerelease':\n      if (this.prerelease.length === 0)\n        this.inc('patch', identifier);\n      this.inc('pre', identifier);\n      break;\n\n    case 'major':\n      // If this is a pre-major version, bump up to the same major version.\n      // Otherwise increment major.\n      // 1.0.0-5 bumps to 1.0.0\n      // 1.1.0 bumps to 2.0.0\n      if (this.minor !== 0 || this.patch !== 0 || this.prerelease.length === 0)\n        this.major++;\n      this.minor = 0;\n      this.patch = 0;\n      this.prerelease = [];\n      break;\n    case 'minor':\n      // If this is a pre-minor version, bump up to the same minor version.\n      // Otherwise increment minor.\n      // 1.2.0-5 bumps to 1.2.0\n      // 1.2.1 bumps to 1.3.0\n      if (this.patch !== 0 || this.prerelease.length === 0)\n        this.minor++;\n      this.patch = 0;\n      this.prerelease = [];\n      break;\n    case 'patch':\n      // If this is not a pre-release version, it will increment the patch.\n      // If it is a pre-release it will bump up to the same patch version.\n      // 1.2.0-5 patches to 1.2.0\n      // 1.2.0 patches to 1.2.1\n      if (this.prerelease.length === 0)\n        this.patch++;\n      this.prerelease = [];\n      break;\n    // This probably shouldn't be used publicly.\n    // 1.0.0 \"pre\" would become 1.0.0-0 which is the wrong direction.\n    case 'pre':\n      if (this.prerelease.length === 0)\n        this.prerelease = [0];\n      else {\n        var i = this.prerelease.length;\n        while (--i >= 0) {\n          if (typeof this.prerelease[i] === 'number') {\n            this.prerelease[i]++;\n            i = -2;\n          }\n        }\n        if (i === -1) // didn't increment anything\n          this.prerelease.push(0);\n      }\n      if (identifier) {\n        // 1.2.0-beta.1 bumps to 1.2.0-beta.2,\n        // 1.2.0-beta.fooblz or 1.2.0-beta bumps to 1.2.0-beta.0\n        if (this.prerelease[0] === identifier) {\n          if (isNaN(this.prerelease[1]))\n            this.prerelease = [identifier, 0];\n        } else\n          this.prerelease = [identifier, 0];\n      }\n      break;\n\n    default:\n      throw new Error('invalid increment argument: ' + release);\n  }\n  this.format();\n  this.raw = this.version;\n  return this;\n};\n\nexports.inc = inc;\nfunction inc(version, release, loose, identifier) {\n  if (typeof(loose) === 'string') {\n    identifier = loose;\n    loose = undefined;\n  }\n\n  try {\n    return new SemVer(version, loose).inc(release, identifier).version;\n  } catch (er) {\n    return null;\n  }\n}\n\nexports.diff = diff;\nfunction diff(version1, version2) {\n  if (eq(version1, version2)) {\n    return null;\n  } else {\n    var v1 = parse(version1);\n    var v2 = parse(version2);\n    if (v1.prerelease.length || v2.prerelease.length) {\n      for (var key in v1) {\n        if (key === 'major' || key === 'minor' || key === 'patch') {\n          if (v1[key] !== v2[key]) {\n            return 'pre'+key;\n          }\n        }\n      }\n      return 'prerelease';\n    }\n    for (var key in v1) {\n      if (key === 'major' || key === 'minor' || key === 'patch') {\n        if (v1[key] !== v2[key]) {\n          return key;\n        }\n      }\n    }\n  }\n}\n\nexports.compareIdentifiers = compareIdentifiers;\n\nvar numeric = /^[0-9]+$/;\nfunction compareIdentifiers(a, b) {\n  var anum = numeric.test(a);\n  var bnum = numeric.test(b);\n\n  if (anum && bnum) {\n    a = +a;\n    b = +b;\n  }\n\n  return (anum && !bnum) ? -1 :\n         (bnum && !anum) ? 1 :\n         a < b ? -1 :\n         a > b ? 1 :\n         0;\n}\n\nexports.rcompareIdentifiers = rcompareIdentifiers;\nfunction rcompareIdentifiers(a, b) {\n  return compareIdentifiers(b, a);\n}\n\nexports.major = major;\nfunction major(a, loose) {\n  return new SemVer(a, loose).major;\n}\n\nexports.minor = minor;\nfunction minor(a, loose) {\n  return new SemVer(a, loose).minor;\n}\n\nexports.patch = patch;\nfunction patch(a, loose) {\n  return new SemVer(a, loose).patch;\n}\n\nexports.compare = compare;\nfunction compare(a, b, loose) {\n  return new SemVer(a, loose).compare(new SemVer(b, loose));\n}\n\nexports.compareLoose = compareLoose;\nfunction compareLoose(a, b) {\n  return compare(a, b, true);\n}\n\nexports.rcompare = rcompare;\nfunction rcompare(a, b, loose) {\n  return compare(b, a, loose);\n}\n\nexports.sort = sort;\nfunction sort(list, loose) {\n  return list.sort(function(a, b) {\n    return exports.compare(a, b, loose);\n  });\n}\n\nexports.rsort = rsort;\nfunction rsort(list, loose) {\n  return list.sort(function(a, b) {\n    return exports.rcompare(a, b, loose);\n  });\n}\n\nexports.gt = gt;\nfunction gt(a, b, loose) {\n  return compare(a, b, loose) > 0;\n}\n\nexports.lt = lt;\nfunction lt(a, b, loose) {\n  return compare(a, b, loose) < 0;\n}\n\nexports.eq = eq;\nfunction eq(a, b, loose) {\n  return compare(a, b, loose) === 0;\n}\n\nexports.neq = neq;\nfunction neq(a, b, loose) {\n  return compare(a, b, loose) !== 0;\n}\n\nexports.gte = gte;\nfunction gte(a, b, loose) {\n  return compare(a, b, loose) >= 0;\n}\n\nexports.lte = lte;\nfunction lte(a, b, loose) {\n  return compare(a, b, loose) <= 0;\n}\n\nexports.cmp = cmp;\nfunction cmp(a, op, b, loose) {\n  var ret;\n  switch (op) {\n    case '===':\n      if (typeof a === 'object') a = a.version;\n      if (typeof b === 'object') b = b.version;\n      ret = a === b;\n      break;\n    case '!==':\n      if (typeof a === 'object') a = a.version;\n      if (typeof b === 'object') b = b.version;\n      ret = a !== b;\n      break;\n    case '': case '=': case '==': ret = eq(a, b, loose); break;\n    case '!=': ret = neq(a, b, loose); break;\n    case '>': ret = gt(a, b, loose); break;\n    case '>=': ret = gte(a, b, loose); break;\n    case '<': ret = lt(a, b, loose); break;\n    case '<=': ret = lte(a, b, loose); break;\n    default: throw new TypeError('Invalid operator: ' + op);\n  }\n  return ret;\n}\n\nexports.Comparator = Comparator;\nfunction Comparator(comp, loose) {\n  if (comp instanceof Comparator) {\n    if (comp.loose === loose)\n      return comp;\n    else\n      comp = comp.value;\n  }\n\n  if (!(this instanceof Comparator))\n    return new Comparator(comp, loose);\n\n  debug('comparator', comp, loose);\n  this.loose = loose;\n  this.parse(comp);\n\n  if (this.semver === ANY)\n    this.value = '';\n  else\n    this.value = this.operator + this.semver.version;\n\n  debug('comp', this);\n}\n\nvar ANY = {};\nComparator.prototype.parse = function(comp) {\n  var r = this.loose ? re[COMPARATORLOOSE] : re[COMPARATOR];\n  var m = comp.match(r);\n\n  if (!m)\n    throw new TypeError('Invalid comparator: ' + comp);\n\n  this.operator = m[1];\n  if (this.operator === '=')\n    this.operator = '';\n\n  // if it literally is just '>' or '' then allow anything.\n  if (!m[2])\n    this.semver = ANY;\n  else\n    this.semver = new SemVer(m[2], this.loose);\n};\n\nComparator.prototype.toString = function() {\n  return this.value;\n};\n\nComparator.prototype.test = function(version) {\n  debug('Comparator.test', version, this.loose);\n\n  if (this.semver === ANY)\n    return true;\n\n  if (typeof version === 'string')\n    version = new SemVer(version, this.loose);\n\n  return cmp(version, this.operator, this.semver, this.loose);\n};\n\nComparator.prototype.intersects = function(comp, loose) {\n  if (!(comp instanceof Comparator)) {\n    throw new TypeError('a Comparator is required');\n  }\n\n  var rangeTmp;\n\n  if (this.operator === '') {\n    rangeTmp = new Range(comp.value, loose);\n    return satisfies(this.value, rangeTmp, loose);\n  } else if (comp.operator === '') {\n    rangeTmp = new Range(this.value, loose);\n    return satisfies(comp.semver, rangeTmp, loose);\n  }\n\n  var sameDirectionIncreasing =\n    (this.operator === '>=' || this.operator === '>') &&\n    (comp.operator === '>=' || comp.operator === '>');\n  var sameDirectionDecreasing =\n    (this.operator === '<=' || this.operator === '<') &&\n    (comp.operator === '<=' || comp.operator === '<');\n  var sameSemVer = this.semver.version === comp.semver.version;\n  var differentDirectionsInclusive =\n    (this.operator === '>=' || this.operator === '<=') &&\n    (comp.operator === '>=' || comp.operator === '<=');\n  var oppositeDirectionsLessThan =\n    cmp(this.semver, '<', comp.semver, loose) &&\n    ((this.operator === '>=' || this.operator === '>') &&\n    (comp.operator === '<=' || comp.operator === '<'));\n  var oppositeDirectionsGreaterThan =\n    cmp(this.semver, '>', comp.semver, loose) &&\n    ((this.operator === '<=' || this.operator === '<') &&\n    (comp.operator === '>=' || comp.operator === '>'));\n\n  return sameDirectionIncreasing || sameDirectionDecreasing ||\n    (sameSemVer && differentDirectionsInclusive) ||\n    oppositeDirectionsLessThan || oppositeDirectionsGreaterThan;\n};\n\n\nexports.Range = Range;\nfunction Range(range, loose) {\n  if (range instanceof Range) {\n    if (range.loose === loose) {\n      return range;\n    } else {\n      return new Range(range.raw, loose);\n    }\n  }\n\n  if (range instanceof Comparator) {\n    return new Range(range.value, loose);\n  }\n\n  if (!(this instanceof Range))\n    return new Range(range, loose);\n\n  this.loose = loose;\n\n  // First, split based on boolean or ||\n  this.raw = range;\n  this.set = range.split(/\\s*\\|\\|\\s*/).map(function(range) {\n    return this.parseRange(range.trim());\n  }, this).filter(function(c) {\n    // throw out any that are not relevant for whatever reason\n    return c.length;\n  });\n\n  if (!this.set.length) {\n    throw new TypeError('Invalid SemVer Range: ' + range);\n  }\n\n  this.format();\n}\n\nRange.prototype.format = function() {\n  this.range = this.set.map(function(comps) {\n    return comps.join(' ').trim();\n  }).join('||').trim();\n  return this.range;\n};\n\nRange.prototype.toString = function() {\n  return this.range;\n};\n\nRange.prototype.parseRange = function(range) {\n  var loose = this.loose;\n  range = range.trim();\n  debug('range', range, loose);\n  // `1.2.3 - 1.2.4` => `>=1.2.3 <=1.2.4`\n  var hr = loose ? re[HYPHENRANGELOOSE] : re[HYPHENRANGE];\n  range = range.replace(hr, hyphenReplace);\n  debug('hyphen replace', range);\n  // `> 1.2.3 < 1.2.5` => `>1.2.3 <1.2.5`\n  range = range.replace(re[COMPARATORTRIM], comparatorTrimReplace);\n  debug('comparator trim', range, re[COMPARATORTRIM]);\n\n  // `~ 1.2.3` => `~1.2.3`\n  range = range.replace(re[TILDETRIM], tildeTrimReplace);\n\n  // `^ 1.2.3` => `^1.2.3`\n  range = range.replace(re[CARETTRIM], caretTrimReplace);\n\n  // normalize spaces\n  range = range.split(/\\s+/).join(' ');\n\n  // At this point, the range is completely trimmed and\n  // ready to be split into comparators.\n\n  var compRe = loose ? re[COMPARATORLOOSE] : re[COMPARATOR];\n  var set = range.split(' ').map(function(comp) {\n    return parseComparator(comp, loose);\n  }).join(' ').split(/\\s+/);\n  if (this.loose) {\n    // in loose mode, throw out any that are not valid comparators\n    set = set.filter(function(comp) {\n      return !!comp.match(compRe);\n    });\n  }\n  set = set.map(function(comp) {\n    return new Comparator(comp, loose);\n  });\n\n  return set;\n};\n\nRange.prototype.intersects = function(range, loose) {\n  if (!(range instanceof Range)) {\n    throw new TypeError('a Range is required');\n  }\n\n  return this.set.some(function(thisComparators) {\n    return thisComparators.every(function(thisComparator) {\n      return range.set.some(function(rangeComparators) {\n        return rangeComparators.every(function(rangeComparator) {\n          return thisComparator.intersects(rangeComparator, loose);\n        });\n      });\n    });\n  });\n};\n\n// Mostly just for testing and legacy API reasons\nexports.toComparators = toComparators;\nfunction toComparators(range, loose) {\n  return new Range(range, loose).set.map(function(comp) {\n    return comp.map(function(c) {\n      return c.value;\n    }).join(' ').trim().split(' ');\n  });\n}\n\n// comprised of xranges, tildes, stars, and gtlt's at this point.\n// already replaced the hyphen ranges\n// turn into a set of JUST comparators.\nfunction parseComparator(comp, loose) {\n  debug('comp', comp);\n  comp = replaceCarets(comp, loose);\n  debug('caret', comp);\n  comp = replaceTildes(comp, loose);\n  debug('tildes', comp);\n  comp = replaceXRanges(comp, loose);\n  debug('xrange', comp);\n  comp = replaceStars(comp, loose);\n  debug('stars', comp);\n  return comp;\n}\n\nfunction isX(id) {\n  return !id || id.toLowerCase() === 'x' || id === '*';\n}\n\n// ~, ~> --> * (any, kinda silly)\n// ~2, ~2.x, ~2.x.x, ~>2, ~>2.x ~>2.x.x --> >=2.0.0 <3.0.0\n// ~2.0, ~2.0.x, ~>2.0, ~>2.0.x --> >=2.0.0 <2.1.0\n// ~1.2, ~1.2.x, ~>1.2, ~>1.2.x --> >=1.2.0 <1.3.0\n// ~1.2.3, ~>1.2.3 --> >=1.2.3 <1.3.0\n// ~1.2.0, ~>1.2.0 --> >=1.2.0 <1.3.0\nfunction replaceTildes(comp, loose) {\n  return comp.trim().split(/\\s+/).map(function(comp) {\n    return replaceTilde(comp, loose);\n  }).join(' ');\n}\n\nfunction replaceTilde(comp, loose) {\n  var r = loose ? re[TILDELOOSE] : re[TILDE];\n  return comp.replace(r, function(_, M, m, p, pr) {\n    debug('tilde', comp, _, M, m, p, pr);\n    var ret;\n\n    if (isX(M))\n      ret = '';\n    else if (isX(m))\n      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0';\n    else if (isX(p))\n      // ~1.2 == >=1.2.0 <1.3.0\n      ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0';\n    else if (pr) {\n      debug('replaceTilde pr', pr);\n      if (pr.charAt(0) !== '-')\n        pr = '-' + pr;\n      ret = '>=' + M + '.' + m + '.' + p + pr +\n            ' <' + M + '.' + (+m + 1) + '.0';\n    } else\n      // ~1.2.3 == >=1.2.3 <1.3.0\n      ret = '>=' + M + '.' + m + '.' + p +\n            ' <' + M + '.' + (+m + 1) + '.0';\n\n    debug('tilde return', ret);\n    return ret;\n  });\n}\n\n// ^ --> * (any, kinda silly)\n// ^2, ^2.x, ^2.x.x --> >=2.0.0 <3.0.0\n// ^2.0, ^2.0.x --> >=2.0.0 <3.0.0\n// ^1.2, ^1.2.x --> >=1.2.0 <2.0.0\n// ^1.2.3 --> >=1.2.3 <2.0.0\n// ^1.2.0 --> >=1.2.0 <2.0.0\nfunction replaceCarets(comp, loose) {\n  return comp.trim().split(/\\s+/).map(function(comp) {\n    return replaceCaret(comp, loose);\n  }).join(' ');\n}\n\nfunction replaceCaret(comp, loose) {\n  debug('caret', comp, loose);\n  var r = loose ? re[CARETLOOSE] : re[CARET];\n  return comp.replace(r, function(_, M, m, p, pr) {\n    debug('caret', comp, _, M, m, p, pr);\n    var ret;\n\n    if (isX(M))\n      ret = '';\n    else if (isX(m))\n      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0';\n    else if (isX(p)) {\n      if (M === '0')\n        ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0';\n      else\n        ret = '>=' + M + '.' + m + '.0 <' + (+M + 1) + '.0.0';\n    } else if (pr) {\n      debug('replaceCaret pr', pr);\n      if (pr.charAt(0) !== '-')\n        pr = '-' + pr;\n      if (M === '0') {\n        if (m === '0')\n          ret = '>=' + M + '.' + m + '.' + p + pr +\n                ' <' + M + '.' + m + '.' + (+p + 1);\n        else\n          ret = '>=' + M + '.' + m + '.' + p + pr +\n                ' <' + M + '.' + (+m + 1) + '.0';\n      } else\n        ret = '>=' + M + '.' + m + '.' + p + pr +\n              ' <' + (+M + 1) + '.0.0';\n    } else {\n      debug('no pr');\n      if (M === '0') {\n        if (m === '0')\n          ret = '>=' + M + '.' + m + '.' + p +\n                ' <' + M + '.' + m + '.' + (+p + 1);\n        else\n          ret = '>=' + M + '.' + m + '.' + p +\n                ' <' + M + '.' + (+m + 1) + '.0';\n      } else\n        ret = '>=' + M + '.' + m + '.' + p +\n              ' <' + (+M + 1) + '.0.0';\n    }\n\n    debug('caret return', ret);\n    return ret;\n  });\n}\n\nfunction replaceXRanges(comp, loose) {\n  debug('replaceXRanges', comp, loose);\n  return comp.split(/\\s+/).map(function(comp) {\n    return replaceXRange(comp, loose);\n  }).join(' ');\n}\n\nfunction replaceXRange(comp, loose) {\n  comp = comp.trim();\n  var r = loose ? re[XRANGELOOSE] : re[XRANGE];\n  return comp.replace(r, function(ret, gtlt, M, m, p, pr) {\n    debug('xRange', comp, ret, gtlt, M, m, p, pr);\n    var xM = isX(M);\n    var xm = xM || isX(m);\n    var xp = xm || isX(p);\n    var anyX = xp;\n\n    if (gtlt === '=' && anyX)\n      gtlt = '';\n\n    if (xM) {\n      if (gtlt === '>' || gtlt === '<') {\n        // nothing is allowed\n        ret = '<0.0.0';\n      } else {\n        // nothing is forbidden\n        ret = '*';\n      }\n    } else if (gtlt && anyX) {\n      // replace X with 0\n      if (xm)\n        m = 0;\n      if (xp)\n        p = 0;\n\n      if (gtlt === '>') {\n        // >1 => >=2.0.0\n        // >1.2 => >=1.3.0\n        // >1.2.3 => >= 1.2.4\n        gtlt = '>=';\n        if (xm) {\n          M = +M + 1;\n          m = 0;\n          p = 0;\n        } else if (xp) {\n          m = +m + 1;\n          p = 0;\n        }\n      } else if (gtlt === '<=') {\n        // <=0.7.x is actually <0.8.0, since any 0.7.x should\n        // pass.  Similarly, <=7.x is actually <8.0.0, etc.\n        gtlt = '<';\n        if (xm)\n          M = +M + 1;\n        else\n          m = +m + 1;\n      }\n\n      ret = gtlt + M + '.' + m + '.' + p;\n    } else if (xm) {\n      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0';\n    } else if (xp) {\n      ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0';\n    }\n\n    debug('xRange return', ret);\n\n    return ret;\n  });\n}\n\n// Because * is AND-ed with everything else in the comparator,\n// and '' means \"any version\", just remove the *s entirely.\nfunction replaceStars(comp, loose) {\n  debug('replaceStars', comp, loose);\n  // Looseness is ignored here.  star is always as loose as it gets!\n  return comp.trim().replace(re[STAR], '');\n}\n\n// This function is passed to string.replace(re[HYPHENRANGE])\n// M, m, patch, prerelease, build\n// 1.2 - 3.4.5 => >=1.2.0 <=3.4.5\n// 1.2.3 - 3.4 => >=1.2.0 <3.5.0 Any 3.4.x will do\n// 1.2 - 3.4 => >=1.2.0 <3.5.0\nfunction hyphenReplace($0,\n                       from, fM, fm, fp, fpr, fb,\n                       to, tM, tm, tp, tpr, tb) {\n\n  if (isX(fM))\n    from = '';\n  else if (isX(fm))\n    from = '>=' + fM + '.0.0';\n  else if (isX(fp))\n    from = '>=' + fM + '.' + fm + '.0';\n  else\n    from = '>=' + from;\n\n  if (isX(tM))\n    to = '';\n  else if (isX(tm))\n    to = '<' + (+tM + 1) + '.0.0';\n  else if (isX(tp))\n    to = '<' + tM + '.' + (+tm + 1) + '.0';\n  else if (tpr)\n    to = '<=' + tM + '.' + tm + '.' + tp + '-' + tpr;\n  else\n    to = '<=' + to;\n\n  return (from + ' ' + to).trim();\n}\n\n\n// if ANY of the sets match ALL of its comparators, then pass\nRange.prototype.test = function(version) {\n  if (!version)\n    return false;\n\n  if (typeof version === 'string')\n    version = new SemVer(version, this.loose);\n\n  for (var i = 0; i < this.set.length; i++) {\n    if (testSet(this.set[i], version))\n      return true;\n  }\n  return false;\n};\n\nfunction testSet(set, version) {\n  for (var i = 0; i < set.length; i++) {\n    if (!set[i].test(version))\n      return false;\n  }\n\n  if (version.prerelease.length) {\n    // Find the set of versions that are allowed to have prereleases\n    // For example, ^1.2.3-pr.1 desugars to >=1.2.3-pr.1 <2.0.0\n    // That should allow `1.2.3-pr.2` to pass.\n    // However, `1.2.4-alpha.notready` should NOT be allowed,\n    // even though it's within the range set by the comparators.\n    for (var i = 0; i < set.length; i++) {\n      debug(set[i].semver);\n      if (set[i].semver === ANY)\n        continue;\n\n      if (set[i].semver.prerelease.length > 0) {\n        var allowed = set[i].semver;\n        if (allowed.major === version.major &&\n            allowed.minor === version.minor &&\n            allowed.patch === version.patch)\n          return true;\n      }\n    }\n\n    // Version has a -pre, but it's not one of the ones we like.\n    return false;\n  }\n\n  return true;\n}\n\nexports.satisfies = satisfies;\nfunction satisfies(version, range, loose) {\n  try {\n    range = new Range(range, loose);\n  } catch (er) {\n    return false;\n  }\n  return range.test(version);\n}\n\nexports.maxSatisfying = maxSatisfying;\nfunction maxSatisfying(versions, range, loose) {\n  var max = null;\n  var maxSV = null;\n  try {\n    var rangeObj = new Range(range, loose);\n  } catch (er) {\n    return null;\n  }\n  versions.forEach(function (v) {\n    if (rangeObj.test(v)) { // satisfies(v, range, loose)\n      if (!max || maxSV.compare(v) === -1) { // compare(max, v, true)\n        max = v;\n        maxSV = new SemVer(max, loose);\n      }\n    }\n  })\n  return max;\n}\n\nexports.minSatisfying = minSatisfying;\nfunction minSatisfying(versions, range, loose) {\n  var min = null;\n  var minSV = null;\n  try {\n    var rangeObj = new Range(range, loose);\n  } catch (er) {\n    return null;\n  }\n  versions.forEach(function (v) {\n    if (rangeObj.test(v)) { // satisfies(v, range, loose)\n      if (!min || minSV.compare(v) === 1) { // compare(min, v, true)\n        min = v;\n        minSV = new SemVer(min, loose);\n      }\n    }\n  })\n  return min;\n}\n\nexports.validRange = validRange;\nfunction validRange(range, loose) {\n  try {\n    // Return '*' instead of '' so that truthiness works.\n    // This will throw if it's invalid anyway\n    return new Range(range, loose).range || '*';\n  } catch (er) {\n    return null;\n  }\n}\n\n// Determine if version is less than all the versions possible in the range\nexports.ltr = ltr;\nfunction ltr(version, range, loose) {\n  return outside(version, range, '<', loose);\n}\n\n// Determine if version is greater than all the versions possible in the range.\nexports.gtr = gtr;\nfunction gtr(version, range, loose) {\n  return outside(version, range, '>', loose);\n}\n\nexports.outside = outside;\nfunction outside(version, range, hilo, loose) {\n  version = new SemVer(version, loose);\n  range = new Range(range, loose);\n\n  var gtfn, ltefn, ltfn, comp, ecomp;\n  switch (hilo) {\n    case '>':\n      gtfn = gt;\n      ltefn = lte;\n      ltfn = lt;\n      comp = '>';\n      ecomp = '>=';\n      break;\n    case '<':\n      gtfn = lt;\n      ltefn = gte;\n      ltfn = gt;\n      comp = '<';\n      ecomp = '<=';\n      break;\n    default:\n      throw new TypeError('Must provide a hilo val of \"<\" or \">\"');\n  }\n\n  // If it satisifes the range it is not outside\n  if (satisfies(version, range, loose)) {\n    return false;\n  }\n\n  // From now on, variable terms are as if we're in \"gtr\" mode.\n  // but note that everything is flipped for the \"ltr\" function.\n\n  for (var i = 0; i < range.set.length; ++i) {\n    var comparators = range.set[i];\n\n    var high = null;\n    var low = null;\n\n    comparators.forEach(function(comparator) {\n      if (comparator.semver === ANY) {\n        comparator = new Comparator('>=0.0.0')\n      }\n      high = high || comparator;\n      low = low || comparator;\n      if (gtfn(comparator.semver, high.semver, loose)) {\n        high = comparator;\n      } else if (ltfn(comparator.semver, low.semver, loose)) {\n        low = comparator;\n      }\n    });\n\n    // If the edge version comparator has a operator then our version\n    // isn't outside it\n    if (high.operator === comp || high.operator === ecomp) {\n      return false;\n    }\n\n    // If the lowest version comparator has an operator and our version\n    // is less than it then it isn't higher than the range\n    if ((!low.operator || low.operator === comp) &&\n        ltefn(version, low.semver)) {\n      return false;\n    } else if (low.operator === ecomp && ltfn(version, low.semver)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexports.prerelease = prerelease;\nfunction prerelease(version, loose) {\n  var parsed = parse(version, loose);\n  return (parsed && parsed.prerelease.length) ? parsed.prerelease : null;\n}\n\nexports.intersects = intersects;\nfunction intersects(r1, r2, loose) {\n  r1 = new Range(r1, loose)\n  r2 = new Range(r2, loose)\n  return r1.intersects(r2)\n}\n\nexports.coerce = coerce;\nfunction coerce(version) {\n  if (version instanceof SemVer)\n    return version;\n\n  if (typeof version !== 'string')\n    return null;\n\n  var match = version.match(re[COERCE]);\n\n  if (match == null)\n    return null;\n\n  return parse((match[1] || '0') + '.' + (match[2] || '0') + '.' + (match[3] || '0')); \n}\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst is = require(\"./is\");\r\n/**\r\n * Predefined error codes.\r\n */\r\nvar ErrorCodes;\r\n(function (ErrorCodes) {\r\n    // Defined by JSON RPC\r\n    ErrorCodes.ParseError = -32700;\r\n    ErrorCodes.InvalidRequest = -32600;\r\n    ErrorCodes.MethodNotFound = -32601;\r\n    ErrorCodes.InvalidParams = -32602;\r\n    ErrorCodes.InternalError = -32603;\r\n    ErrorCodes.serverErrorStart = -32099;\r\n    ErrorCodes.serverErrorEnd = -32000;\r\n    ErrorCodes.ServerNotInitialized = -32002;\r\n    ErrorCodes.UnknownErrorCode = -32001;\r\n    // Defined by the protocol.\r\n    ErrorCodes.RequestCancelled = -32800;\r\n    // Defined by VSCode library.\r\n    ErrorCodes.MessageWriteError = 1;\r\n    ErrorCodes.MessageReadError = 2;\r\n})(ErrorCodes = exports.ErrorCodes || (exports.ErrorCodes = {}));\r\n/**\r\n * An error object return in a response in case a request\r\n * has failed.\r\n */\r\nclass ResponseError extends Error {\r\n    constructor(code, message, data) {\r\n        super(message);\r\n        this.code = is.number(code) ? code : ErrorCodes.UnknownErrorCode;\r\n        this.data = data;\r\n        Object.setPrototypeOf(this, ResponseError.prototype);\r\n    }\r\n    toJson() {\r\n        return {\r\n            code: this.code,\r\n            message: this.message,\r\n            data: this.data,\r\n        };\r\n    }\r\n}\r\nexports.ResponseError = ResponseError;\r\n/**\r\n * An abstract implementation of a MessageType.\r\n */\r\nclass AbstractMessageType {\r\n    constructor(_method, _numberOfParams) {\r\n        this._method = _method;\r\n        this._numberOfParams = _numberOfParams;\r\n    }\r\n    get method() {\r\n        return this._method;\r\n    }\r\n    get numberOfParams() {\r\n        return this._numberOfParams;\r\n    }\r\n}\r\nexports.AbstractMessageType = AbstractMessageType;\r\n/**\r\n * Classes to type request response pairs\r\n */\r\nclass RequestType0 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 0);\r\n        this._ = undefined;\r\n    }\r\n}\r\nexports.RequestType0 = RequestType0;\r\nclass RequestType extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 1);\r\n        this._ = undefined;\r\n    }\r\n}\r\nexports.RequestType = RequestType;\r\nclass RequestType1 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 1);\r\n        this._ = undefined;\r\n    }\r\n}\r\nexports.RequestType1 = RequestType1;\r\nclass RequestType2 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 2);\r\n        this._ = undefined;\r\n    }\r\n}\r\nexports.RequestType2 = RequestType2;\r\nclass RequestType3 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 3);\r\n        this._ = undefined;\r\n    }\r\n}\r\nexports.RequestType3 = RequestType3;\r\nclass RequestType4 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 4);\r\n        this._ = undefined;\r\n    }\r\n}\r\nexports.RequestType4 = RequestType4;\r\nclass RequestType5 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 5);\r\n        this._ = undefined;\r\n    }\r\n}\r\nexports.RequestType5 = RequestType5;\r\nclass RequestType6 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 6);\r\n        this._ = undefined;\r\n    }\r\n}\r\nexports.RequestType6 = RequestType6;\r\nclass RequestType7 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 7);\r\n        this._ = undefined;\r\n    }\r\n}\r\nexports.RequestType7 = RequestType7;\r\nclass RequestType8 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 8);\r\n        this._ = undefined;\r\n    }\r\n}\r\nexports.RequestType8 = RequestType8;\r\nclass RequestType9 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 9);\r\n        this._ = undefined;\r\n    }\r\n}\r\nexports.RequestType9 = RequestType9;\r\nclass NotificationType extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 1);\r\n        this._ = undefined;\r\n    }\r\n}\r\nexports.NotificationType = NotificationType;\r\nclass NotificationType0 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 0);\r\n        this._ = undefined;\r\n    }\r\n}\r\nexports.NotificationType0 = NotificationType0;\r\nclass NotificationType1 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 1);\r\n        this._ = undefined;\r\n    }\r\n}\r\nexports.NotificationType1 = NotificationType1;\r\nclass NotificationType2 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 2);\r\n        this._ = undefined;\r\n    }\r\n}\r\nexports.NotificationType2 = NotificationType2;\r\nclass NotificationType3 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 3);\r\n        this._ = undefined;\r\n    }\r\n}\r\nexports.NotificationType3 = NotificationType3;\r\nclass NotificationType4 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 4);\r\n        this._ = undefined;\r\n    }\r\n}\r\nexports.NotificationType4 = NotificationType4;\r\nclass NotificationType5 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 5);\r\n        this._ = undefined;\r\n    }\r\n}\r\nexports.NotificationType5 = NotificationType5;\r\nclass NotificationType6 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 6);\r\n        this._ = undefined;\r\n    }\r\n}\r\nexports.NotificationType6 = NotificationType6;\r\nclass NotificationType7 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 7);\r\n        this._ = undefined;\r\n    }\r\n}\r\nexports.NotificationType7 = NotificationType7;\r\nclass NotificationType8 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 8);\r\n        this._ = undefined;\r\n    }\r\n}\r\nexports.NotificationType8 = NotificationType8;\r\nclass NotificationType9 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 9);\r\n        this._ = undefined;\r\n    }\r\n}\r\nexports.NotificationType9 = NotificationType9;\r\n/**\r\n * Tests if the given message is a request message\r\n */\r\nfunction isRequestMessage(message) {\r\n    let candidate = message;\r\n    return candidate && is.string(candidate.method) && (is.string(candidate.id) || is.number(candidate.id));\r\n}\r\nexports.isRequestMessage = isRequestMessage;\r\n/**\r\n * Tests if the given message is a notification message\r\n */\r\nfunction isNotificationMessage(message) {\r\n    let candidate = message;\r\n    return candidate && is.string(candidate.method) && message.id === void 0;\r\n}\r\nexports.isNotificationMessage = isNotificationMessage;\r\n/**\r\n * Tests if the given message is a response message\r\n */\r\nfunction isResponseMessage(message) {\r\n    let candidate = message;\r\n    return candidate && (candidate.result !== void 0 || !!candidate.error) && (is.string(candidate.id) || is.number(candidate.id) || candidate.id === null);\r\n}\r\nexports.isResponseMessage = isResponseMessage;\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst events_1 = require(\"./events\");\r\nconst Is = require(\"./is\");\r\nvar CancellationToken;\r\n(function (CancellationToken) {\r\n    CancellationToken.None = Object.freeze({\r\n        isCancellationRequested: false,\r\n        onCancellationRequested: events_1.Event.None\r\n    });\r\n    CancellationToken.Cancelled = Object.freeze({\r\n        isCancellationRequested: true,\r\n        onCancellationRequested: events_1.Event.None\r\n    });\r\n    function is(value) {\r\n        let candidate = value;\r\n        return candidate && (candidate === CancellationToken.None\r\n            || candidate === CancellationToken.Cancelled\r\n            || (Is.boolean(candidate.isCancellationRequested) && !!candidate.onCancellationRequested));\r\n    }\r\n    CancellationToken.is = is;\r\n})(CancellationToken = exports.CancellationToken || (exports.CancellationToken = {}));\r\nconst shortcutEvent = Object.freeze(function (callback, context) {\r\n    let handle = setTimeout(callback.bind(context), 0);\r\n    return { dispose() { clearTimeout(handle); } };\r\n});\r\nclass MutableToken {\r\n    constructor() {\r\n        this._isCancelled = false;\r\n    }\r\n    cancel() {\r\n        if (!this._isCancelled) {\r\n            this._isCancelled = true;\r\n            if (this._emitter) {\r\n                this._emitter.fire(undefined);\r\n                this._emitter = undefined;\r\n            }\r\n        }\r\n    }\r\n    get isCancellationRequested() {\r\n        return this._isCancelled;\r\n    }\r\n    get onCancellationRequested() {\r\n        if (this._isCancelled) {\r\n            return shortcutEvent;\r\n        }\r\n        if (!this._emitter) {\r\n            this._emitter = new events_1.Emitter();\r\n        }\r\n        return this._emitter.event;\r\n    }\r\n}\r\nclass CancellationTokenSource {\r\n    get token() {\r\n        if (!this._token) {\r\n            // be lazy and create the token only when\r\n            // actually needed\r\n            this._token = new MutableToken();\r\n        }\r\n        return this._token;\r\n    }\r\n    cancel() {\r\n        if (!this._token) {\r\n            // save an object by returning the default\r\n            // cancelled token when cancellation happens\r\n            // before someone asks for the token\r\n            this._token = CancellationToken.Cancelled;\r\n        }\r\n        else {\r\n            this._token.cancel();\r\n        }\r\n    }\r\n    dispose() {\r\n        this.cancel();\r\n    }\r\n}\r\nexports.CancellationTokenSource = CancellationTokenSource;\r\n","\"use strict\";\r\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Touch;\r\n(function (Touch) {\r\n    Touch.None = 0;\r\n    Touch.First = 1;\r\n    Touch.Last = 2;\r\n})(Touch = exports.Touch || (exports.Touch = {}));\r\nclass LinkedMap {\r\n    constructor() {\r\n        this._map = new Map();\r\n        this._head = undefined;\r\n        this._tail = undefined;\r\n        this._size = 0;\r\n    }\r\n    clear() {\r\n        this._map.clear();\r\n        this._head = undefined;\r\n        this._tail = undefined;\r\n        this._size = 0;\r\n    }\r\n    isEmpty() {\r\n        return !this._head && !this._tail;\r\n    }\r\n    get size() {\r\n        return this._size;\r\n    }\r\n    has(key) {\r\n        return this._map.has(key);\r\n    }\r\n    get(key) {\r\n        const item = this._map.get(key);\r\n        if (!item) {\r\n            return undefined;\r\n        }\r\n        return item.value;\r\n    }\r\n    set(key, value, touch = Touch.None) {\r\n        let item = this._map.get(key);\r\n        if (item) {\r\n            item.value = value;\r\n            if (touch !== Touch.None) {\r\n                this.touch(item, touch);\r\n            }\r\n        }\r\n        else {\r\n            item = { key, value, next: undefined, previous: undefined };\r\n            switch (touch) {\r\n                case Touch.None:\r\n                    this.addItemLast(item);\r\n                    break;\r\n                case Touch.First:\r\n                    this.addItemFirst(item);\r\n                    break;\r\n                case Touch.Last:\r\n                    this.addItemLast(item);\r\n                    break;\r\n                default:\r\n                    this.addItemLast(item);\r\n                    break;\r\n            }\r\n            this._map.set(key, item);\r\n            this._size++;\r\n        }\r\n    }\r\n    delete(key) {\r\n        const item = this._map.get(key);\r\n        if (!item) {\r\n            return false;\r\n        }\r\n        this._map.delete(key);\r\n        this.removeItem(item);\r\n        this._size--;\r\n        return true;\r\n    }\r\n    shift() {\r\n        if (!this._head && !this._tail) {\r\n            return undefined;\r\n        }\r\n        if (!this._head || !this._tail) {\r\n            throw new Error('Invalid list');\r\n        }\r\n        const item = this._head;\r\n        this._map.delete(item.key);\r\n        this.removeItem(item);\r\n        this._size--;\r\n        return item.value;\r\n    }\r\n    forEach(callbackfn, thisArg) {\r\n        let current = this._head;\r\n        while (current) {\r\n            if (thisArg) {\r\n                callbackfn.bind(thisArg)(current.value, current.key, this);\r\n            }\r\n            else {\r\n                callbackfn(current.value, current.key, this);\r\n            }\r\n            current = current.next;\r\n        }\r\n    }\r\n    forEachReverse(callbackfn, thisArg) {\r\n        let current = this._tail;\r\n        while (current) {\r\n            if (thisArg) {\r\n                callbackfn.bind(thisArg)(current.value, current.key, this);\r\n            }\r\n            else {\r\n                callbackfn(current.value, current.key, this);\r\n            }\r\n            current = current.previous;\r\n        }\r\n    }\r\n    values() {\r\n        let result = [];\r\n        let current = this._head;\r\n        while (current) {\r\n            result.push(current.value);\r\n            current = current.next;\r\n        }\r\n        return result;\r\n    }\r\n    keys() {\r\n        let result = [];\r\n        let current = this._head;\r\n        while (current) {\r\n            result.push(current.key);\r\n            current = current.next;\r\n        }\r\n        return result;\r\n    }\r\n    /* JSON RPC run on es5 which has no Symbol.iterator\r\n    public keys(): IterableIterator<K> {\r\n        let current = this._head;\r\n        let iterator: IterableIterator<K> = {\r\n            [Symbol.iterator]() {\r\n                return iterator;\r\n            },\r\n            next():IteratorResult<K> {\r\n                if (current) {\r\n                    let result = { value: current.key, done: false };\r\n                    current = current.next;\r\n                    return result;\r\n                } else {\r\n                    return { value: undefined, done: true };\r\n                }\r\n            }\r\n        };\r\n        return iterator;\r\n    }\r\n\r\n    public values(): IterableIterator<V> {\r\n        let current = this._head;\r\n        let iterator: IterableIterator<V> = {\r\n            [Symbol.iterator]() {\r\n                return iterator;\r\n            },\r\n            next():IteratorResult<V> {\r\n                if (current) {\r\n                    let result = { value: current.value, done: false };\r\n                    current = current.next;\r\n                    return result;\r\n                } else {\r\n                    return { value: undefined, done: true };\r\n                }\r\n            }\r\n        };\r\n        return iterator;\r\n    }\r\n    */\r\n    addItemFirst(item) {\r\n        // First time Insert\r\n        if (!this._head && !this._tail) {\r\n            this._tail = item;\r\n        }\r\n        else if (!this._head) {\r\n            throw new Error('Invalid list');\r\n        }\r\n        else {\r\n            item.next = this._head;\r\n            this._head.previous = item;\r\n        }\r\n        this._head = item;\r\n    }\r\n    addItemLast(item) {\r\n        // First time Insert\r\n        if (!this._head && !this._tail) {\r\n            this._head = item;\r\n        }\r\n        else if (!this._tail) {\r\n            throw new Error('Invalid list');\r\n        }\r\n        else {\r\n            item.previous = this._tail;\r\n            this._tail.next = item;\r\n        }\r\n        this._tail = item;\r\n    }\r\n    removeItem(item) {\r\n        if (item === this._head && item === this._tail) {\r\n            this._head = undefined;\r\n            this._tail = undefined;\r\n        }\r\n        else if (item === this._head) {\r\n            this._head = item.next;\r\n        }\r\n        else if (item === this._tail) {\r\n            this._tail = item.previous;\r\n        }\r\n        else {\r\n            const next = item.next;\r\n            const previous = item.previous;\r\n            if (!next || !previous) {\r\n                throw new Error('Invalid list');\r\n            }\r\n            next.previous = previous;\r\n            previous.next = next;\r\n        }\r\n    }\r\n    touch(item, touch) {\r\n        if (!this._head || !this._tail) {\r\n            throw new Error('Invalid list');\r\n        }\r\n        if ((touch !== Touch.First && touch !== Touch.Last)) {\r\n            return;\r\n        }\r\n        if (touch === Touch.First) {\r\n            if (item === this._head) {\r\n                return;\r\n            }\r\n            const next = item.next;\r\n            const previous = item.previous;\r\n            // Unlink the item\r\n            if (item === this._tail) {\r\n                // previous must be defined since item was not head but is tail\r\n                // So there are more than on item in the map\r\n                previous.next = undefined;\r\n                this._tail = previous;\r\n            }\r\n            else {\r\n                // Both next and previous are not undefined since item was neither head nor tail.\r\n                next.previous = previous;\r\n                previous.next = next;\r\n            }\r\n            // Insert the node at head\r\n            item.previous = undefined;\r\n            item.next = this._head;\r\n            this._head.previous = item;\r\n            this._head = item;\r\n        }\r\n        else if (touch === Touch.Last) {\r\n            if (item === this._tail) {\r\n                return;\r\n            }\r\n            const next = item.next;\r\n            const previous = item.previous;\r\n            // Unlink the item.\r\n            if (item === this._head) {\r\n                // next must be defined since item was not tail but is head\r\n                // So there are more than on item in the map\r\n                next.previous = undefined;\r\n                this._head = next;\r\n            }\r\n            else {\r\n                // Both next and previous are not undefined since item was neither head nor tail.\r\n                next.previous = previous;\r\n                previous.next = next;\r\n            }\r\n            item.next = undefined;\r\n            item.previous = this._tail;\r\n            this._tail.next = item;\r\n            this._tail = item;\r\n        }\r\n    }\r\n}\r\nexports.LinkedMap = LinkedMap;\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst path_1 = require(\"path\");\r\nconst os_1 = require(\"os\");\r\nconst crypto_1 = require(\"crypto\");\r\nconst net_1 = require(\"net\");\r\nconst messageReader_1 = require(\"./messageReader\");\r\nconst messageWriter_1 = require(\"./messageWriter\");\r\nfunction generateRandomPipeName() {\r\n    const randomSuffix = crypto_1.randomBytes(21).toString('hex');\r\n    if (process.platform === 'win32') {\r\n        return `\\\\\\\\.\\\\pipe\\\\vscode-jsonrpc-${randomSuffix}-sock`;\r\n    }\r\n    else {\r\n        // Mac/Unix: use socket file\r\n        return path_1.join(os_1.tmpdir(), `vscode-${randomSuffix}.sock`);\r\n    }\r\n}\r\nexports.generateRandomPipeName = generateRandomPipeName;\r\nfunction createClientPipeTransport(pipeName, encoding = 'utf-8') {\r\n    let connectResolve;\r\n    let connected = new Promise((resolve, _reject) => {\r\n        connectResolve = resolve;\r\n    });\r\n    return new Promise((resolve, reject) => {\r\n        let server = net_1.createServer((socket) => {\r\n            server.close();\r\n            connectResolve([\r\n                new messageReader_1.SocketMessageReader(socket, encoding),\r\n                new messageWriter_1.SocketMessageWriter(socket, encoding)\r\n            ]);\r\n        });\r\n        server.on('error', reject);\r\n        server.listen(pipeName, () => {\r\n            server.removeListener('error', reject);\r\n            resolve({\r\n                onConnected: () => { return connected; }\r\n            });\r\n        });\r\n    });\r\n}\r\nexports.createClientPipeTransport = createClientPipeTransport;\r\nfunction createServerPipeTransport(pipeName, encoding = 'utf-8') {\r\n    const socket = net_1.createConnection(pipeName);\r\n    return [\r\n        new messageReader_1.SocketMessageReader(socket, encoding),\r\n        new messageWriter_1.SocketMessageWriter(socket, encoding)\r\n    ];\r\n}\r\nexports.createServerPipeTransport = createServerPipeTransport;\r\n","module.exports = require(\"os\");","module.exports = require(\"crypto\");","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst net_1 = require(\"net\");\r\nconst messageReader_1 = require(\"./messageReader\");\r\nconst messageWriter_1 = require(\"./messageWriter\");\r\nfunction createClientSocketTransport(port, encoding = 'utf-8') {\r\n    let connectResolve;\r\n    let connected = new Promise((resolve, _reject) => {\r\n        connectResolve = resolve;\r\n    });\r\n    return new Promise((resolve, reject) => {\r\n        let server = net_1.createServer((socket) => {\r\n            server.close();\r\n            connectResolve([\r\n                new messageReader_1.SocketMessageReader(socket, encoding),\r\n                new messageWriter_1.SocketMessageWriter(socket, encoding)\r\n            ]);\r\n        });\r\n        server.on('error', reject);\r\n        server.listen(port, '127.0.0.1', () => {\r\n            server.removeListener('error', reject);\r\n            resolve({\r\n                onConnected: () => { return connected; }\r\n            });\r\n        });\r\n    });\r\n}\r\nexports.createClientSocketTransport = createClientSocketTransport;\r\nfunction createServerSocketTransport(port, encoding = 'utf-8') {\r\n    const socket = net_1.createConnection(port, '127.0.0.1');\r\n    return [\r\n        new messageReader_1.SocketMessageReader(socket, encoding),\r\n        new messageWriter_1.SocketMessageWriter(socket, encoding)\r\n    ];\r\n}\r\nexports.createServerSocketTransport = createServerSocketTransport;\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\n/**\r\n * The Position namespace provides helper functions to work with\r\n * [Position](#Position) literals.\r\n */\r\nexport var Position;\r\n(function (Position) {\r\n    /**\r\n     * Creates a new Position literal from the given line and character.\r\n     * @param line The position's line.\r\n     * @param character The position's character.\r\n     */\r\n    function create(line, character) {\r\n        return { line: line, character: character };\r\n    }\r\n    Position.create = create;\r\n    /**\r\n     * Checks whether the given liternal conforms to the [Position](#Position) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.objectLiteral(candidate) && Is.number(candidate.line) && Is.number(candidate.character);\r\n    }\r\n    Position.is = is;\r\n})(Position || (Position = {}));\r\n/**\r\n * The Range namespace provides helper functions to work with\r\n * [Range](#Range) literals.\r\n */\r\nexport var Range;\r\n(function (Range) {\r\n    function create(one, two, three, four) {\r\n        if (Is.number(one) && Is.number(two) && Is.number(three) && Is.number(four)) {\r\n            return { start: Position.create(one, two), end: Position.create(three, four) };\r\n        }\r\n        else if (Position.is(one) && Position.is(two)) {\r\n            return { start: one, end: two };\r\n        }\r\n        else {\r\n            throw new Error(\"Range#create called with invalid arguments[\" + one + \", \" + two + \", \" + three + \", \" + four + \"]\");\r\n        }\r\n    }\r\n    Range.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Range](#Range) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.objectLiteral(candidate) && Position.is(candidate.start) && Position.is(candidate.end);\r\n    }\r\n    Range.is = is;\r\n})(Range || (Range = {}));\r\n/**\r\n * The Location namespace provides helper functions to work with\r\n * [Location](#Location) literals.\r\n */\r\nexport var Location;\r\n(function (Location) {\r\n    /**\r\n     * Creates a Location literal.\r\n     * @param uri The location's uri.\r\n     * @param range The location's range.\r\n     */\r\n    function create(uri, range) {\r\n        return { uri: uri, range: range };\r\n    }\r\n    Location.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Location](#Location) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.string(candidate.uri) || Is.undefined(candidate.uri));\r\n    }\r\n    Location.is = is;\r\n})(Location || (Location = {}));\r\n/**\r\n * The LocationLink namespace provides helper functions to work with\r\n * [LocationLink](#LocationLink) literals.\r\n */\r\nexport var LocationLink;\r\n(function (LocationLink) {\r\n    /**\r\n     * Creates a LocationLink literal.\r\n     * @param targetUri The definition's uri.\r\n     * @param targetRange The full range of the definition.\r\n     * @param targetSelectionRange The span of the symbol definition at the target.\r\n     * @param originSelectionRange The span of the symbol being defined in the originating source file.\r\n     */\r\n    function create(targetUri, targetRange, targetSelectionRange, originSelectionRange) {\r\n        return { targetUri: targetUri, targetRange: targetRange, targetSelectionRange: targetSelectionRange, originSelectionRange: originSelectionRange };\r\n    }\r\n    LocationLink.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [LocationLink](#LocationLink) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Range.is(candidate.targetRange) && Is.string(candidate.targetUri)\r\n            && (Range.is(candidate.targetSelectionRange) || Is.undefined(candidate.targetSelectionRange))\r\n            && (Range.is(candidate.originSelectionRange) || Is.undefined(candidate.originSelectionRange));\r\n    }\r\n    LocationLink.is = is;\r\n})(LocationLink || (LocationLink = {}));\r\n/**\r\n * The Color namespace provides helper functions to work with\r\n * [Color](#Color) literals.\r\n */\r\nexport var Color;\r\n(function (Color) {\r\n    /**\r\n     * Creates a new Color literal.\r\n     */\r\n    function create(red, green, blue, alpha) {\r\n        return {\r\n            red: red,\r\n            green: green,\r\n            blue: blue,\r\n            alpha: alpha,\r\n        };\r\n    }\r\n    Color.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Color](#Color) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.number(candidate.red)\r\n            && Is.number(candidate.green)\r\n            && Is.number(candidate.blue)\r\n            && Is.number(candidate.alpha);\r\n    }\r\n    Color.is = is;\r\n})(Color || (Color = {}));\r\n/**\r\n * The ColorInformation namespace provides helper functions to work with\r\n * [ColorInformation](#ColorInformation) literals.\r\n */\r\nexport var ColorInformation;\r\n(function (ColorInformation) {\r\n    /**\r\n     * Creates a new ColorInformation literal.\r\n     */\r\n    function create(range, color) {\r\n        return {\r\n            range: range,\r\n            color: color,\r\n        };\r\n    }\r\n    ColorInformation.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [ColorInformation](#ColorInformation) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Range.is(candidate.range) && Color.is(candidate.color);\r\n    }\r\n    ColorInformation.is = is;\r\n})(ColorInformation || (ColorInformation = {}));\r\n/**\r\n * The Color namespace provides helper functions to work with\r\n * [ColorPresentation](#ColorPresentation) literals.\r\n */\r\nexport var ColorPresentation;\r\n(function (ColorPresentation) {\r\n    /**\r\n     * Creates a new ColorInformation literal.\r\n     */\r\n    function create(label, textEdit, additionalTextEdits) {\r\n        return {\r\n            label: label,\r\n            textEdit: textEdit,\r\n            additionalTextEdits: additionalTextEdits,\r\n        };\r\n    }\r\n    ColorPresentation.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [ColorInformation](#ColorInformation) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.string(candidate.label)\r\n            && (Is.undefined(candidate.textEdit) || TextEdit.is(candidate))\r\n            && (Is.undefined(candidate.additionalTextEdits) || Is.typedArray(candidate.additionalTextEdits, TextEdit.is));\r\n    }\r\n    ColorPresentation.is = is;\r\n})(ColorPresentation || (ColorPresentation = {}));\r\n/**\r\n * Enum of known range kinds\r\n */\r\nexport var FoldingRangeKind;\r\n(function (FoldingRangeKind) {\r\n    /**\r\n     * Folding range for a comment\r\n     */\r\n    FoldingRangeKind[\"Comment\"] = \"comment\";\r\n    /**\r\n     * Folding range for a imports or includes\r\n     */\r\n    FoldingRangeKind[\"Imports\"] = \"imports\";\r\n    /**\r\n     * Folding range for a region (e.g. `#region`)\r\n     */\r\n    FoldingRangeKind[\"Region\"] = \"region\";\r\n})(FoldingRangeKind || (FoldingRangeKind = {}));\r\n/**\r\n * The folding range namespace provides helper functions to work with\r\n * [FoldingRange](#FoldingRange) literals.\r\n */\r\nexport var FoldingRange;\r\n(function (FoldingRange) {\r\n    /**\r\n     * Creates a new FoldingRange literal.\r\n     */\r\n    function create(startLine, endLine, startCharacter, endCharacter, kind) {\r\n        var result = {\r\n            startLine: startLine,\r\n            endLine: endLine\r\n        };\r\n        if (Is.defined(startCharacter)) {\r\n            result.startCharacter = startCharacter;\r\n        }\r\n        if (Is.defined(endCharacter)) {\r\n            result.endCharacter = endCharacter;\r\n        }\r\n        if (Is.defined(kind)) {\r\n            result.kind = kind;\r\n        }\r\n        return result;\r\n    }\r\n    FoldingRange.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [FoldingRange](#FoldingRange) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.number(candidate.startLine) && Is.number(candidate.startLine)\r\n            && (Is.undefined(candidate.startCharacter) || Is.number(candidate.startCharacter))\r\n            && (Is.undefined(candidate.endCharacter) || Is.number(candidate.endCharacter))\r\n            && (Is.undefined(candidate.kind) || Is.string(candidate.kind));\r\n    }\r\n    FoldingRange.is = is;\r\n})(FoldingRange || (FoldingRange = {}));\r\n/**\r\n * The DiagnosticRelatedInformation namespace provides helper functions to work with\r\n * [DiagnosticRelatedInformation](#DiagnosticRelatedInformation) literals.\r\n */\r\nexport var DiagnosticRelatedInformation;\r\n(function (DiagnosticRelatedInformation) {\r\n    /**\r\n     * Creates a new DiagnosticRelatedInformation literal.\r\n     */\r\n    function create(location, message) {\r\n        return {\r\n            location: location,\r\n            message: message\r\n        };\r\n    }\r\n    DiagnosticRelatedInformation.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [DiagnosticRelatedInformation](#DiagnosticRelatedInformation) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Location.is(candidate.location) && Is.string(candidate.message);\r\n    }\r\n    DiagnosticRelatedInformation.is = is;\r\n})(DiagnosticRelatedInformation || (DiagnosticRelatedInformation = {}));\r\n/**\r\n * The diagnostic's severity.\r\n */\r\nexport var DiagnosticSeverity;\r\n(function (DiagnosticSeverity) {\r\n    /**\r\n     * Reports an error.\r\n     */\r\n    DiagnosticSeverity.Error = 1;\r\n    /**\r\n     * Reports a warning.\r\n     */\r\n    DiagnosticSeverity.Warning = 2;\r\n    /**\r\n     * Reports an information.\r\n     */\r\n    DiagnosticSeverity.Information = 3;\r\n    /**\r\n     * Reports a hint.\r\n     */\r\n    DiagnosticSeverity.Hint = 4;\r\n})(DiagnosticSeverity || (DiagnosticSeverity = {}));\r\n/**\r\n * The Diagnostic namespace provides helper functions to work with\r\n * [Diagnostic](#Diagnostic) literals.\r\n */\r\nexport var Diagnostic;\r\n(function (Diagnostic) {\r\n    /**\r\n     * Creates a new Diagnostic literal.\r\n     */\r\n    function create(range, message, severity, code, source, relatedInformation) {\r\n        var result = { range: range, message: message };\r\n        if (Is.defined(severity)) {\r\n            result.severity = severity;\r\n        }\r\n        if (Is.defined(code)) {\r\n            result.code = code;\r\n        }\r\n        if (Is.defined(source)) {\r\n            result.source = source;\r\n        }\r\n        if (Is.defined(relatedInformation)) {\r\n            result.relatedInformation = relatedInformation;\r\n        }\r\n        return result;\r\n    }\r\n    Diagnostic.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Diagnostic](#Diagnostic) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate)\r\n            && Range.is(candidate.range)\r\n            && Is.string(candidate.message)\r\n            && (Is.number(candidate.severity) || Is.undefined(candidate.severity))\r\n            && (Is.number(candidate.code) || Is.string(candidate.code) || Is.undefined(candidate.code))\r\n            && (Is.string(candidate.source) || Is.undefined(candidate.source))\r\n            && (Is.undefined(candidate.relatedInformation) || Is.typedArray(candidate.relatedInformation, DiagnosticRelatedInformation.is));\r\n    }\r\n    Diagnostic.is = is;\r\n})(Diagnostic || (Diagnostic = {}));\r\n/**\r\n * The Command namespace provides helper functions to work with\r\n * [Command](#Command) literals.\r\n */\r\nexport var Command;\r\n(function (Command) {\r\n    /**\r\n     * Creates a new Command literal.\r\n     */\r\n    function create(title, command) {\r\n        var args = [];\r\n        for (var _i = 2; _i < arguments.length; _i++) {\r\n            args[_i - 2] = arguments[_i];\r\n        }\r\n        var result = { title: title, command: command };\r\n        if (Is.defined(args) && args.length > 0) {\r\n            result.arguments = args;\r\n        }\r\n        return result;\r\n    }\r\n    Command.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Command](#Command) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.title) && Is.string(candidate.command);\r\n    }\r\n    Command.is = is;\r\n})(Command || (Command = {}));\r\n/**\r\n * The TextEdit namespace provides helper function to create replace,\r\n * insert and delete edits more easily.\r\n */\r\nexport var TextEdit;\r\n(function (TextEdit) {\r\n    /**\r\n     * Creates a replace text edit.\r\n     * @param range The range of text to be replaced.\r\n     * @param newText The new text.\r\n     */\r\n    function replace(range, newText) {\r\n        return { range: range, newText: newText };\r\n    }\r\n    TextEdit.replace = replace;\r\n    /**\r\n     * Creates a insert text edit.\r\n     * @param position The position to insert the text at.\r\n     * @param newText The text to be inserted.\r\n     */\r\n    function insert(position, newText) {\r\n        return { range: { start: position, end: position }, newText: newText };\r\n    }\r\n    TextEdit.insert = insert;\r\n    /**\r\n     * Creates a delete text edit.\r\n     * @param range The range of text to be deleted.\r\n     */\r\n    function del(range) {\r\n        return { range: range, newText: '' };\r\n    }\r\n    TextEdit.del = del;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.objectLiteral(candidate)\r\n            && Is.string(candidate.newText)\r\n            && Range.is(candidate.range);\r\n    }\r\n    TextEdit.is = is;\r\n})(TextEdit || (TextEdit = {}));\r\n/**\r\n * The TextDocumentEdit namespace provides helper function to create\r\n * an edit that manipulates a text document.\r\n */\r\nexport var TextDocumentEdit;\r\n(function (TextDocumentEdit) {\r\n    /**\r\n     * Creates a new `TextDocumentEdit`\r\n     */\r\n    function create(textDocument, edits) {\r\n        return { textDocument: textDocument, edits: edits };\r\n    }\r\n    TextDocumentEdit.create = create;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate)\r\n            && VersionedTextDocumentIdentifier.is(candidate.textDocument)\r\n            && Array.isArray(candidate.edits);\r\n    }\r\n    TextDocumentEdit.is = is;\r\n})(TextDocumentEdit || (TextDocumentEdit = {}));\r\nexport var CreateFile;\r\n(function (CreateFile) {\r\n    function create(uri, options) {\r\n        var result = {\r\n            kind: 'create',\r\n            uri: uri\r\n        };\r\n        if (options !== void 0 && (options.overwrite !== void 0 || options.ignoreIfExists !== void 0)) {\r\n            result.options = options;\r\n        }\r\n        return result;\r\n    }\r\n    CreateFile.create = create;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate && candidate.kind === 'create' && Is.string(candidate.uri) &&\r\n            (candidate.options === void 0 ||\r\n                ((candidate.options.overwrite === void 0 || Is.boolean(candidate.options.overwrite)) && (candidate.options.ignoreIfExists === void 0 || Is.boolean(candidate.options.ignoreIfExists))));\r\n    }\r\n    CreateFile.is = is;\r\n})(CreateFile || (CreateFile = {}));\r\nexport var RenameFile;\r\n(function (RenameFile) {\r\n    function create(oldUri, newUri, options) {\r\n        var result = {\r\n            kind: 'rename',\r\n            oldUri: oldUri,\r\n            newUri: newUri\r\n        };\r\n        if (options !== void 0 && (options.overwrite !== void 0 || options.ignoreIfExists !== void 0)) {\r\n            result.options = options;\r\n        }\r\n        return result;\r\n    }\r\n    RenameFile.create = create;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate && candidate.kind === 'rename' && Is.string(candidate.oldUri) && Is.string(candidate.newUri) &&\r\n            (candidate.options === void 0 ||\r\n                ((candidate.options.overwrite === void 0 || Is.boolean(candidate.options.overwrite)) && (candidate.options.ignoreIfExists === void 0 || Is.boolean(candidate.options.ignoreIfExists))));\r\n    }\r\n    RenameFile.is = is;\r\n})(RenameFile || (RenameFile = {}));\r\nexport var DeleteFile;\r\n(function (DeleteFile) {\r\n    function create(uri, options) {\r\n        var result = {\r\n            kind: 'delete',\r\n            uri: uri\r\n        };\r\n        if (options !== void 0 && (options.recursive !== void 0 || options.ignoreIfNotExists !== void 0)) {\r\n            result.options = options;\r\n        }\r\n        return result;\r\n    }\r\n    DeleteFile.create = create;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate && candidate.kind === 'delete' && Is.string(candidate.uri) &&\r\n            (candidate.options === void 0 ||\r\n                ((candidate.options.recursive === void 0 || Is.boolean(candidate.options.recursive)) && (candidate.options.ignoreIfNotExists === void 0 || Is.boolean(candidate.options.ignoreIfNotExists))));\r\n    }\r\n    DeleteFile.is = is;\r\n})(DeleteFile || (DeleteFile = {}));\r\nexport var WorkspaceEdit;\r\n(function (WorkspaceEdit) {\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate &&\r\n            (candidate.changes !== void 0 || candidate.documentChanges !== void 0) &&\r\n            (candidate.documentChanges === void 0 || candidate.documentChanges.every(function (change) {\r\n                if (Is.string(change.kind)) {\r\n                    return CreateFile.is(change) || RenameFile.is(change) || DeleteFile.is(change);\r\n                }\r\n                else {\r\n                    return TextDocumentEdit.is(change);\r\n                }\r\n            }));\r\n    }\r\n    WorkspaceEdit.is = is;\r\n})(WorkspaceEdit || (WorkspaceEdit = {}));\r\nvar TextEditChangeImpl = /** @class */ (function () {\r\n    function TextEditChangeImpl(edits) {\r\n        this.edits = edits;\r\n    }\r\n    TextEditChangeImpl.prototype.insert = function (position, newText) {\r\n        this.edits.push(TextEdit.insert(position, newText));\r\n    };\r\n    TextEditChangeImpl.prototype.replace = function (range, newText) {\r\n        this.edits.push(TextEdit.replace(range, newText));\r\n    };\r\n    TextEditChangeImpl.prototype.delete = function (range) {\r\n        this.edits.push(TextEdit.del(range));\r\n    };\r\n    TextEditChangeImpl.prototype.add = function (edit) {\r\n        this.edits.push(edit);\r\n    };\r\n    TextEditChangeImpl.prototype.all = function () {\r\n        return this.edits;\r\n    };\r\n    TextEditChangeImpl.prototype.clear = function () {\r\n        this.edits.splice(0, this.edits.length);\r\n    };\r\n    return TextEditChangeImpl;\r\n}());\r\n/**\r\n * A workspace change helps constructing changes to a workspace.\r\n */\r\nvar WorkspaceChange = /** @class */ (function () {\r\n    function WorkspaceChange(workspaceEdit) {\r\n        var _this = this;\r\n        this._textEditChanges = Object.create(null);\r\n        if (workspaceEdit) {\r\n            this._workspaceEdit = workspaceEdit;\r\n            if (workspaceEdit.documentChanges) {\r\n                workspaceEdit.documentChanges.forEach(function (change) {\r\n                    if (TextDocumentEdit.is(change)) {\r\n                        var textEditChange = new TextEditChangeImpl(change.edits);\r\n                        _this._textEditChanges[change.textDocument.uri] = textEditChange;\r\n                    }\r\n                });\r\n            }\r\n            else if (workspaceEdit.changes) {\r\n                Object.keys(workspaceEdit.changes).forEach(function (key) {\r\n                    var textEditChange = new TextEditChangeImpl(workspaceEdit.changes[key]);\r\n                    _this._textEditChanges[key] = textEditChange;\r\n                });\r\n            }\r\n        }\r\n    }\r\n    Object.defineProperty(WorkspaceChange.prototype, \"edit\", {\r\n        /**\r\n         * Returns the underlying [WorkspaceEdit](#WorkspaceEdit) literal\r\n         * use to be returned from a workspace edit operation like rename.\r\n         */\r\n        get: function () {\r\n            return this._workspaceEdit;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    WorkspaceChange.prototype.getTextEditChange = function (key) {\r\n        if (VersionedTextDocumentIdentifier.is(key)) {\r\n            if (!this._workspaceEdit) {\r\n                this._workspaceEdit = {\r\n                    documentChanges: []\r\n                };\r\n            }\r\n            if (!this._workspaceEdit.documentChanges) {\r\n                throw new Error('Workspace edit is not configured for document changes.');\r\n            }\r\n            var textDocument = key;\r\n            var result = this._textEditChanges[textDocument.uri];\r\n            if (!result) {\r\n                var edits = [];\r\n                var textDocumentEdit = {\r\n                    textDocument: textDocument,\r\n                    edits: edits\r\n                };\r\n                this._workspaceEdit.documentChanges.push(textDocumentEdit);\r\n                result = new TextEditChangeImpl(edits);\r\n                this._textEditChanges[textDocument.uri] = result;\r\n            }\r\n            return result;\r\n        }\r\n        else {\r\n            if (!this._workspaceEdit) {\r\n                this._workspaceEdit = {\r\n                    changes: Object.create(null)\r\n                };\r\n            }\r\n            if (!this._workspaceEdit.changes) {\r\n                throw new Error('Workspace edit is not configured for normal text edit changes.');\r\n            }\r\n            var result = this._textEditChanges[key];\r\n            if (!result) {\r\n                var edits = [];\r\n                this._workspaceEdit.changes[key] = edits;\r\n                result = new TextEditChangeImpl(edits);\r\n                this._textEditChanges[key] = result;\r\n            }\r\n            return result;\r\n        }\r\n    };\r\n    WorkspaceChange.prototype.createFile = function (uri, options) {\r\n        this.checkDocumentChanges();\r\n        this._workspaceEdit.documentChanges.push(CreateFile.create(uri, options));\r\n    };\r\n    WorkspaceChange.prototype.renameFile = function (oldUri, newUri, options) {\r\n        this.checkDocumentChanges();\r\n        this._workspaceEdit.documentChanges.push(RenameFile.create(oldUri, newUri, options));\r\n    };\r\n    WorkspaceChange.prototype.deleteFile = function (uri, options) {\r\n        this.checkDocumentChanges();\r\n        this._workspaceEdit.documentChanges.push(DeleteFile.create(uri, options));\r\n    };\r\n    WorkspaceChange.prototype.checkDocumentChanges = function () {\r\n        if (!this._workspaceEdit || !this._workspaceEdit.documentChanges) {\r\n            throw new Error('Workspace edit is not configured for document changes.');\r\n        }\r\n    };\r\n    return WorkspaceChange;\r\n}());\r\nexport { WorkspaceChange };\r\n/**\r\n * The TextDocumentIdentifier namespace provides helper functions to work with\r\n * [TextDocumentIdentifier](#TextDocumentIdentifier) literals.\r\n */\r\nexport var TextDocumentIdentifier;\r\n(function (TextDocumentIdentifier) {\r\n    /**\r\n     * Creates a new TextDocumentIdentifier literal.\r\n     * @param uri The document's uri.\r\n     */\r\n    function create(uri) {\r\n        return { uri: uri };\r\n    }\r\n    TextDocumentIdentifier.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [TextDocumentIdentifier](#TextDocumentIdentifier) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.uri);\r\n    }\r\n    TextDocumentIdentifier.is = is;\r\n})(TextDocumentIdentifier || (TextDocumentIdentifier = {}));\r\n/**\r\n * The VersionedTextDocumentIdentifier namespace provides helper functions to work with\r\n * [VersionedTextDocumentIdentifier](#VersionedTextDocumentIdentifier) literals.\r\n */\r\nexport var VersionedTextDocumentIdentifier;\r\n(function (VersionedTextDocumentIdentifier) {\r\n    /**\r\n     * Creates a new VersionedTextDocumentIdentifier literal.\r\n     * @param uri The document's uri.\r\n     * @param uri The document's text.\r\n     */\r\n    function create(uri, version) {\r\n        return { uri: uri, version: version };\r\n    }\r\n    VersionedTextDocumentIdentifier.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [VersionedTextDocumentIdentifier](#VersionedTextDocumentIdentifier) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.uri) && (candidate.version === null || Is.number(candidate.version));\r\n    }\r\n    VersionedTextDocumentIdentifier.is = is;\r\n})(VersionedTextDocumentIdentifier || (VersionedTextDocumentIdentifier = {}));\r\n/**\r\n * The TextDocumentItem namespace provides helper functions to work with\r\n * [TextDocumentItem](#TextDocumentItem) literals.\r\n */\r\nexport var TextDocumentItem;\r\n(function (TextDocumentItem) {\r\n    /**\r\n     * Creates a new TextDocumentItem literal.\r\n     * @param uri The document's uri.\r\n     * @param languageId The document's language identifier.\r\n     * @param version The document's version number.\r\n     * @param text The document's text.\r\n     */\r\n    function create(uri, languageId, version, text) {\r\n        return { uri: uri, languageId: languageId, version: version, text: text };\r\n    }\r\n    TextDocumentItem.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [TextDocumentItem](#TextDocumentItem) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.uri) && Is.string(candidate.languageId) && Is.number(candidate.version) && Is.string(candidate.text);\r\n    }\r\n    TextDocumentItem.is = is;\r\n})(TextDocumentItem || (TextDocumentItem = {}));\r\n/**\r\n * Describes the content type that a client supports in various\r\n * result literals like `Hover`, `ParameterInfo` or `CompletionItem`.\r\n *\r\n * Please note that `MarkupKinds` must not start with a `$`. This kinds\r\n * are reserved for internal usage.\r\n */\r\nexport var MarkupKind;\r\n(function (MarkupKind) {\r\n    /**\r\n     * Plain text is supported as a content format\r\n     */\r\n    MarkupKind.PlainText = 'plaintext';\r\n    /**\r\n     * Markdown is supported as a content format\r\n     */\r\n    MarkupKind.Markdown = 'markdown';\r\n})(MarkupKind || (MarkupKind = {}));\r\n(function (MarkupKind) {\r\n    /**\r\n     * Checks whether the given value is a value of the [MarkupKind](#MarkupKind) type.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate === MarkupKind.PlainText || candidate === MarkupKind.Markdown;\r\n    }\r\n    MarkupKind.is = is;\r\n})(MarkupKind || (MarkupKind = {}));\r\nexport var MarkupContent;\r\n(function (MarkupContent) {\r\n    /**\r\n     * Checks whether the given value conforms to the [MarkupContent](#MarkupContent) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.objectLiteral(value) && MarkupKind.is(candidate.kind) && Is.string(candidate.value);\r\n    }\r\n    MarkupContent.is = is;\r\n})(MarkupContent || (MarkupContent = {}));\r\n/**\r\n * The kind of a completion entry.\r\n */\r\nexport var CompletionItemKind;\r\n(function (CompletionItemKind) {\r\n    CompletionItemKind.Text = 1;\r\n    CompletionItemKind.Method = 2;\r\n    CompletionItemKind.Function = 3;\r\n    CompletionItemKind.Constructor = 4;\r\n    CompletionItemKind.Field = 5;\r\n    CompletionItemKind.Variable = 6;\r\n    CompletionItemKind.Class = 7;\r\n    CompletionItemKind.Interface = 8;\r\n    CompletionItemKind.Module = 9;\r\n    CompletionItemKind.Property = 10;\r\n    CompletionItemKind.Unit = 11;\r\n    CompletionItemKind.Value = 12;\r\n    CompletionItemKind.Enum = 13;\r\n    CompletionItemKind.Keyword = 14;\r\n    CompletionItemKind.Snippet = 15;\r\n    CompletionItemKind.Color = 16;\r\n    CompletionItemKind.File = 17;\r\n    CompletionItemKind.Reference = 18;\r\n    CompletionItemKind.Folder = 19;\r\n    CompletionItemKind.EnumMember = 20;\r\n    CompletionItemKind.Constant = 21;\r\n    CompletionItemKind.Struct = 22;\r\n    CompletionItemKind.Event = 23;\r\n    CompletionItemKind.Operator = 24;\r\n    CompletionItemKind.TypeParameter = 25;\r\n})(CompletionItemKind || (CompletionItemKind = {}));\r\n/**\r\n * Defines whether the insert text in a completion item should be interpreted as\r\n * plain text or a snippet.\r\n */\r\nexport var InsertTextFormat;\r\n(function (InsertTextFormat) {\r\n    /**\r\n     * The primary text to be inserted is treated as a plain string.\r\n     */\r\n    InsertTextFormat.PlainText = 1;\r\n    /**\r\n     * The primary text to be inserted is treated as a snippet.\r\n     *\r\n     * A snippet can define tab stops and placeholders with `$1`, `$2`\r\n     * and `${3:foo}`. `$0` defines the final tab stop, it defaults to\r\n     * the end of the snippet. Placeholders with equal identifiers are linked,\r\n     * that is typing in one will update others too.\r\n     *\r\n     * See also: https://github.com/Microsoft/vscode/blob/master/src/vs/editor/contrib/snippet/common/snippet.md\r\n     */\r\n    InsertTextFormat.Snippet = 2;\r\n})(InsertTextFormat || (InsertTextFormat = {}));\r\n/**\r\n * The CompletionItem namespace provides functions to deal with\r\n * completion items.\r\n */\r\nexport var CompletionItem;\r\n(function (CompletionItem) {\r\n    /**\r\n     * Create a completion item and seed it with a label.\r\n     * @param label The completion item's label\r\n     */\r\n    function create(label) {\r\n        return { label: label };\r\n    }\r\n    CompletionItem.create = create;\r\n})(CompletionItem || (CompletionItem = {}));\r\n/**\r\n * The CompletionList namespace provides functions to deal with\r\n * completion lists.\r\n */\r\nexport var CompletionList;\r\n(function (CompletionList) {\r\n    /**\r\n     * Creates a new completion list.\r\n     *\r\n     * @param items The completion items.\r\n     * @param isIncomplete The list is not complete.\r\n     */\r\n    function create(items, isIncomplete) {\r\n        return { items: items ? items : [], isIncomplete: !!isIncomplete };\r\n    }\r\n    CompletionList.create = create;\r\n})(CompletionList || (CompletionList = {}));\r\nexport var MarkedString;\r\n(function (MarkedString) {\r\n    /**\r\n     * Creates a marked string from plain text.\r\n     *\r\n     * @param plainText The plain text.\r\n     */\r\n    function fromPlainText(plainText) {\r\n        return plainText.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g, \"\\\\$&\"); // escape markdown syntax tokens: http://daringfireball.net/projects/markdown/syntax#backslash\r\n    }\r\n    MarkedString.fromPlainText = fromPlainText;\r\n    /**\r\n     * Checks whether the given value conforms to the [MarkedString](#MarkedString) type.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.string(candidate) || (Is.objectLiteral(candidate) && Is.string(candidate.language) && Is.string(candidate.value));\r\n    }\r\n    MarkedString.is = is;\r\n})(MarkedString || (MarkedString = {}));\r\nexport var Hover;\r\n(function (Hover) {\r\n    /**\r\n     * Checks whether the given value conforms to the [Hover](#Hover) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return !!candidate && Is.objectLiteral(candidate) && (MarkupContent.is(candidate.contents) ||\r\n            MarkedString.is(candidate.contents) ||\r\n            Is.typedArray(candidate.contents, MarkedString.is)) && (value.range === void 0 || Range.is(value.range));\r\n    }\r\n    Hover.is = is;\r\n})(Hover || (Hover = {}));\r\n/**\r\n * The ParameterInformation namespace provides helper functions to work with\r\n * [ParameterInformation](#ParameterInformation) literals.\r\n */\r\nexport var ParameterInformation;\r\n(function (ParameterInformation) {\r\n    /**\r\n     * Creates a new parameter information literal.\r\n     *\r\n     * @param label A label string.\r\n     * @param documentation A doc string.\r\n     */\r\n    function create(label, documentation) {\r\n        return documentation ? { label: label, documentation: documentation } : { label: label };\r\n    }\r\n    ParameterInformation.create = create;\r\n    ;\r\n})(ParameterInformation || (ParameterInformation = {}));\r\n/**\r\n * The SignatureInformation namespace provides helper functions to work with\r\n * [SignatureInformation](#SignatureInformation) literals.\r\n */\r\nexport var SignatureInformation;\r\n(function (SignatureInformation) {\r\n    function create(label, documentation) {\r\n        var parameters = [];\r\n        for (var _i = 2; _i < arguments.length; _i++) {\r\n            parameters[_i - 2] = arguments[_i];\r\n        }\r\n        var result = { label: label };\r\n        if (Is.defined(documentation)) {\r\n            result.documentation = documentation;\r\n        }\r\n        if (Is.defined(parameters)) {\r\n            result.parameters = parameters;\r\n        }\r\n        else {\r\n            result.parameters = [];\r\n        }\r\n        return result;\r\n    }\r\n    SignatureInformation.create = create;\r\n})(SignatureInformation || (SignatureInformation = {}));\r\n/**\r\n * A document highlight kind.\r\n */\r\nexport var DocumentHighlightKind;\r\n(function (DocumentHighlightKind) {\r\n    /**\r\n     * A textual occurrence.\r\n     */\r\n    DocumentHighlightKind.Text = 1;\r\n    /**\r\n     * Read-access of a symbol, like reading a variable.\r\n     */\r\n    DocumentHighlightKind.Read = 2;\r\n    /**\r\n     * Write-access of a symbol, like writing to a variable.\r\n     */\r\n    DocumentHighlightKind.Write = 3;\r\n})(DocumentHighlightKind || (DocumentHighlightKind = {}));\r\n/**\r\n * DocumentHighlight namespace to provide helper functions to work with\r\n * [DocumentHighlight](#DocumentHighlight) literals.\r\n */\r\nexport var DocumentHighlight;\r\n(function (DocumentHighlight) {\r\n    /**\r\n     * Create a DocumentHighlight object.\r\n     * @param range The range the highlight applies to.\r\n     */\r\n    function create(range, kind) {\r\n        var result = { range: range };\r\n        if (Is.number(kind)) {\r\n            result.kind = kind;\r\n        }\r\n        return result;\r\n    }\r\n    DocumentHighlight.create = create;\r\n})(DocumentHighlight || (DocumentHighlight = {}));\r\n/**\r\n * A symbol kind.\r\n */\r\nexport var SymbolKind;\r\n(function (SymbolKind) {\r\n    SymbolKind.File = 1;\r\n    SymbolKind.Module = 2;\r\n    SymbolKind.Namespace = 3;\r\n    SymbolKind.Package = 4;\r\n    SymbolKind.Class = 5;\r\n    SymbolKind.Method = 6;\r\n    SymbolKind.Property = 7;\r\n    SymbolKind.Field = 8;\r\n    SymbolKind.Constructor = 9;\r\n    SymbolKind.Enum = 10;\r\n    SymbolKind.Interface = 11;\r\n    SymbolKind.Function = 12;\r\n    SymbolKind.Variable = 13;\r\n    SymbolKind.Constant = 14;\r\n    SymbolKind.String = 15;\r\n    SymbolKind.Number = 16;\r\n    SymbolKind.Boolean = 17;\r\n    SymbolKind.Array = 18;\r\n    SymbolKind.Object = 19;\r\n    SymbolKind.Key = 20;\r\n    SymbolKind.Null = 21;\r\n    SymbolKind.EnumMember = 22;\r\n    SymbolKind.Struct = 23;\r\n    SymbolKind.Event = 24;\r\n    SymbolKind.Operator = 25;\r\n    SymbolKind.TypeParameter = 26;\r\n})(SymbolKind || (SymbolKind = {}));\r\nexport var SymbolInformation;\r\n(function (SymbolInformation) {\r\n    /**\r\n     * Creates a new symbol information literal.\r\n     *\r\n     * @param name The name of the symbol.\r\n     * @param kind The kind of the symbol.\r\n     * @param range The range of the location of the symbol.\r\n     * @param uri The resource of the location of symbol, defaults to the current document.\r\n     * @param containerName The name of the symbol containing the symbol.\r\n     */\r\n    function create(name, kind, range, uri, containerName) {\r\n        var result = {\r\n            name: name,\r\n            kind: kind,\r\n            location: { uri: uri, range: range }\r\n        };\r\n        if (containerName) {\r\n            result.containerName = containerName;\r\n        }\r\n        return result;\r\n    }\r\n    SymbolInformation.create = create;\r\n})(SymbolInformation || (SymbolInformation = {}));\r\n/**\r\n * Represents programming constructs like variables, classes, interfaces etc.\r\n * that appear in a document. Document symbols can be hierarchical and they\r\n * have two ranges: one that encloses its definition and one that points to\r\n * its most interesting range, e.g. the range of an identifier.\r\n */\r\nvar DocumentSymbol = /** @class */ (function () {\r\n    function DocumentSymbol() {\r\n    }\r\n    return DocumentSymbol;\r\n}());\r\nexport { DocumentSymbol };\r\n(function (DocumentSymbol) {\r\n    /**\r\n     * Creates a new symbol information literal.\r\n     *\r\n     * @param name The name of the symbol.\r\n     * @param detail The detail of the symbol.\r\n     * @param kind The kind of the symbol.\r\n     * @param range The range of the symbol.\r\n     * @param selectionRange The selectionRange of the symbol.\r\n     * @param children Children of the symbol.\r\n     */\r\n    function create(name, detail, kind, range, selectionRange, children) {\r\n        var result = {\r\n            name: name,\r\n            detail: detail,\r\n            kind: kind,\r\n            range: range,\r\n            selectionRange: selectionRange\r\n        };\r\n        if (children !== void 0) {\r\n            result.children = children;\r\n        }\r\n        return result;\r\n    }\r\n    DocumentSymbol.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [DocumentSymbol](#DocumentSymbol) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate &&\r\n            Is.string(candidate.name) && Is.number(candidate.kind) &&\r\n            Range.is(candidate.range) && Range.is(candidate.selectionRange) &&\r\n            (candidate.detail === void 0 || Is.string(candidate.detail)) &&\r\n            (candidate.deprecated === void 0 || Is.boolean(candidate.deprecated)) &&\r\n            (candidate.children === void 0 || Array.isArray(candidate.children));\r\n    }\r\n    DocumentSymbol.is = is;\r\n})(DocumentSymbol || (DocumentSymbol = {}));\r\n/**\r\n * A set of predefined code action kinds\r\n */\r\nexport var CodeActionKind;\r\n(function (CodeActionKind) {\r\n    /**\r\n     * Base kind for quickfix actions: 'quickfix'\r\n     */\r\n    CodeActionKind.QuickFix = 'quickfix';\r\n    /**\r\n     * Base kind for refactoring actions: 'refactor'\r\n     */\r\n    CodeActionKind.Refactor = 'refactor';\r\n    /**\r\n     * Base kind for refactoring extraction actions: 'refactor.extract'\r\n     *\r\n     * Example extract actions:\r\n     *\r\n     * - Extract method\r\n     * - Extract function\r\n     * - Extract variable\r\n     * - Extract interface from class\r\n     * - ...\r\n     */\r\n    CodeActionKind.RefactorExtract = 'refactor.extract';\r\n    /**\r\n     * Base kind for refactoring inline actions: 'refactor.inline'\r\n     *\r\n     * Example inline actions:\r\n     *\r\n     * - Inline function\r\n     * - Inline variable\r\n     * - Inline constant\r\n     * - ...\r\n     */\r\n    CodeActionKind.RefactorInline = 'refactor.inline';\r\n    /**\r\n     * Base kind for refactoring rewrite actions: 'refactor.rewrite'\r\n     *\r\n     * Example rewrite actions:\r\n     *\r\n     * - Convert JavaScript function to class\r\n     * - Add or remove parameter\r\n     * - Encapsulate field\r\n     * - Make method static\r\n     * - Move method to base class\r\n     * - ...\r\n     */\r\n    CodeActionKind.RefactorRewrite = 'refactor.rewrite';\r\n    /**\r\n     * Base kind for source actions: `source`\r\n     *\r\n     * Source code actions apply to the entire file.\r\n     */\r\n    CodeActionKind.Source = 'source';\r\n    /**\r\n     * Base kind for an organize imports source action: `source.organizeImports`\r\n     */\r\n    CodeActionKind.SourceOrganizeImports = 'source.organizeImports';\r\n})(CodeActionKind || (CodeActionKind = {}));\r\n/**\r\n * The CodeActionContext namespace provides helper functions to work with\r\n * [CodeActionContext](#CodeActionContext) literals.\r\n */\r\nexport var CodeActionContext;\r\n(function (CodeActionContext) {\r\n    /**\r\n     * Creates a new CodeActionContext literal.\r\n     */\r\n    function create(diagnostics, only) {\r\n        var result = { diagnostics: diagnostics };\r\n        if (only !== void 0 && only !== null) {\r\n            result.only = only;\r\n        }\r\n        return result;\r\n    }\r\n    CodeActionContext.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [CodeActionContext](#CodeActionContext) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.typedArray(candidate.diagnostics, Diagnostic.is) && (candidate.only === void 0 || Is.typedArray(candidate.only, Is.string));\r\n    }\r\n    CodeActionContext.is = is;\r\n})(CodeActionContext || (CodeActionContext = {}));\r\nexport var CodeAction;\r\n(function (CodeAction) {\r\n    function create(title, commandOrEdit, kind) {\r\n        var result = { title: title };\r\n        if (Command.is(commandOrEdit)) {\r\n            result.command = commandOrEdit;\r\n        }\r\n        else {\r\n            result.edit = commandOrEdit;\r\n        }\r\n        if (kind !== void null) {\r\n            result.kind = kind;\r\n        }\r\n        return result;\r\n    }\r\n    CodeAction.create = create;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate && Is.string(candidate.title) &&\r\n            (candidate.diagnostics === void 0 || Is.typedArray(candidate.diagnostics, Diagnostic.is)) &&\r\n            (candidate.kind === void 0 || Is.string(candidate.kind)) &&\r\n            (candidate.edit !== void 0 || candidate.command !== void 0) &&\r\n            (candidate.command === void 0 || Command.is(candidate.command)) &&\r\n            (candidate.edit === void 0 || WorkspaceEdit.is(candidate.edit));\r\n    }\r\n    CodeAction.is = is;\r\n})(CodeAction || (CodeAction = {}));\r\n/**\r\n * The CodeLens namespace provides helper functions to work with\r\n * [CodeLens](#CodeLens) literals.\r\n */\r\nexport var CodeLens;\r\n(function (CodeLens) {\r\n    /**\r\n     * Creates a new CodeLens literal.\r\n     */\r\n    function create(range, data) {\r\n        var result = { range: range };\r\n        if (Is.defined(data))\r\n            result.data = data;\r\n        return result;\r\n    }\r\n    CodeLens.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [CodeLens](#CodeLens) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.command) || Command.is(candidate.command));\r\n    }\r\n    CodeLens.is = is;\r\n})(CodeLens || (CodeLens = {}));\r\n/**\r\n * The FormattingOptions namespace provides helper functions to work with\r\n * [FormattingOptions](#FormattingOptions) literals.\r\n */\r\nexport var FormattingOptions;\r\n(function (FormattingOptions) {\r\n    /**\r\n     * Creates a new FormattingOptions literal.\r\n     */\r\n    function create(tabSize, insertSpaces) {\r\n        return { tabSize: tabSize, insertSpaces: insertSpaces };\r\n    }\r\n    FormattingOptions.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [FormattingOptions](#FormattingOptions) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.number(candidate.tabSize) && Is.boolean(candidate.insertSpaces);\r\n    }\r\n    FormattingOptions.is = is;\r\n})(FormattingOptions || (FormattingOptions = {}));\r\n/**\r\n * A document link is a range in a text document that links to an internal or external resource, like another\r\n * text document or a web site.\r\n */\r\nvar DocumentLink = /** @class */ (function () {\r\n    function DocumentLink() {\r\n    }\r\n    return DocumentLink;\r\n}());\r\nexport { DocumentLink };\r\n/**\r\n * The DocumentLink namespace provides helper functions to work with\r\n * [DocumentLink](#DocumentLink) literals.\r\n */\r\n(function (DocumentLink) {\r\n    /**\r\n     * Creates a new DocumentLink literal.\r\n     */\r\n    function create(range, target, data) {\r\n        return { range: range, target: target, data: data };\r\n    }\r\n    DocumentLink.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [DocumentLink](#DocumentLink) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.target) || Is.string(candidate.target));\r\n    }\r\n    DocumentLink.is = is;\r\n})(DocumentLink || (DocumentLink = {}));\r\nexport var EOL = ['\\n', '\\r\\n', '\\r'];\r\nexport var TextDocument;\r\n(function (TextDocument) {\r\n    /**\r\n     * Creates a new ITextDocument literal from the given uri and content.\r\n     * @param uri The document's uri.\r\n     * @param languageId  The document's language Id.\r\n     * @param content The document's content.\r\n     */\r\n    function create(uri, languageId, version, content) {\r\n        return new FullTextDocument(uri, languageId, version, content);\r\n    }\r\n    TextDocument.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [ITextDocument](#ITextDocument) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.uri) && (Is.undefined(candidate.languageId) || Is.string(candidate.languageId)) && Is.number(candidate.lineCount)\r\n            && Is.func(candidate.getText) && Is.func(candidate.positionAt) && Is.func(candidate.offsetAt) ? true : false;\r\n    }\r\n    TextDocument.is = is;\r\n    function applyEdits(document, edits) {\r\n        var text = document.getText();\r\n        var sortedEdits = mergeSort(edits, function (a, b) {\r\n            var diff = a.range.start.line - b.range.start.line;\r\n            if (diff === 0) {\r\n                return a.range.start.character - b.range.start.character;\r\n            }\r\n            return diff;\r\n        });\r\n        var lastModifiedOffset = text.length;\r\n        for (var i = sortedEdits.length - 1; i >= 0; i--) {\r\n            var e = sortedEdits[i];\r\n            var startOffset = document.offsetAt(e.range.start);\r\n            var endOffset = document.offsetAt(e.range.end);\r\n            if (endOffset <= lastModifiedOffset) {\r\n                text = text.substring(0, startOffset) + e.newText + text.substring(endOffset, text.length);\r\n            }\r\n            else {\r\n                throw new Error('Overlapping edit');\r\n            }\r\n            lastModifiedOffset = startOffset;\r\n        }\r\n        return text;\r\n    }\r\n    TextDocument.applyEdits = applyEdits;\r\n    function mergeSort(data, compare) {\r\n        if (data.length <= 1) {\r\n            // sorted\r\n            return data;\r\n        }\r\n        var p = (data.length / 2) | 0;\r\n        var left = data.slice(0, p);\r\n        var right = data.slice(p);\r\n        mergeSort(left, compare);\r\n        mergeSort(right, compare);\r\n        var leftIdx = 0;\r\n        var rightIdx = 0;\r\n        var i = 0;\r\n        while (leftIdx < left.length && rightIdx < right.length) {\r\n            var ret = compare(left[leftIdx], right[rightIdx]);\r\n            if (ret <= 0) {\r\n                // smaller_equal -> take left to preserve order\r\n                data[i++] = left[leftIdx++];\r\n            }\r\n            else {\r\n                // greater -> take right\r\n                data[i++] = right[rightIdx++];\r\n            }\r\n        }\r\n        while (leftIdx < left.length) {\r\n            data[i++] = left[leftIdx++];\r\n        }\r\n        while (rightIdx < right.length) {\r\n            data[i++] = right[rightIdx++];\r\n        }\r\n        return data;\r\n    }\r\n})(TextDocument || (TextDocument = {}));\r\n/**\r\n * Represents reasons why a text document is saved.\r\n */\r\nexport var TextDocumentSaveReason;\r\n(function (TextDocumentSaveReason) {\r\n    /**\r\n     * Manually triggered, e.g. by the user pressing save, by starting debugging,\r\n     * or by an API call.\r\n     */\r\n    TextDocumentSaveReason.Manual = 1;\r\n    /**\r\n     * Automatic after a delay.\r\n     */\r\n    TextDocumentSaveReason.AfterDelay = 2;\r\n    /**\r\n     * When the editor lost focus.\r\n     */\r\n    TextDocumentSaveReason.FocusOut = 3;\r\n})(TextDocumentSaveReason || (TextDocumentSaveReason = {}));\r\nvar FullTextDocument = /** @class */ (function () {\r\n    function FullTextDocument(uri, languageId, version, content) {\r\n        this._uri = uri;\r\n        this._languageId = languageId;\r\n        this._version = version;\r\n        this._content = content;\r\n        this._lineOffsets = null;\r\n    }\r\n    Object.defineProperty(FullTextDocument.prototype, \"uri\", {\r\n        get: function () {\r\n            return this._uri;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FullTextDocument.prototype, \"languageId\", {\r\n        get: function () {\r\n            return this._languageId;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FullTextDocument.prototype, \"version\", {\r\n        get: function () {\r\n            return this._version;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    FullTextDocument.prototype.getText = function (range) {\r\n        if (range) {\r\n            var start = this.offsetAt(range.start);\r\n            var end = this.offsetAt(range.end);\r\n            return this._content.substring(start, end);\r\n        }\r\n        return this._content;\r\n    };\r\n    FullTextDocument.prototype.update = function (event, version) {\r\n        this._content = event.text;\r\n        this._version = version;\r\n        this._lineOffsets = null;\r\n    };\r\n    FullTextDocument.prototype.getLineOffsets = function () {\r\n        if (this._lineOffsets === null) {\r\n            var lineOffsets = [];\r\n            var text = this._content;\r\n            var isLineStart = true;\r\n            for (var i = 0; i < text.length; i++) {\r\n                if (isLineStart) {\r\n                    lineOffsets.push(i);\r\n                    isLineStart = false;\r\n                }\r\n                var ch = text.charAt(i);\r\n                isLineStart = (ch === '\\r' || ch === '\\n');\r\n                if (ch === '\\r' && i + 1 < text.length && text.charAt(i + 1) === '\\n') {\r\n                    i++;\r\n                }\r\n            }\r\n            if (isLineStart && text.length > 0) {\r\n                lineOffsets.push(text.length);\r\n            }\r\n            this._lineOffsets = lineOffsets;\r\n        }\r\n        return this._lineOffsets;\r\n    };\r\n    FullTextDocument.prototype.positionAt = function (offset) {\r\n        offset = Math.max(Math.min(offset, this._content.length), 0);\r\n        var lineOffsets = this.getLineOffsets();\r\n        var low = 0, high = lineOffsets.length;\r\n        if (high === 0) {\r\n            return Position.create(0, offset);\r\n        }\r\n        while (low < high) {\r\n            var mid = Math.floor((low + high) / 2);\r\n            if (lineOffsets[mid] > offset) {\r\n                high = mid;\r\n            }\r\n            else {\r\n                low = mid + 1;\r\n            }\r\n        }\r\n        // low is the least x for which the line offset is larger than the current offset\r\n        // or array.length if no line offset is larger than the current offset\r\n        var line = low - 1;\r\n        return Position.create(line, offset - lineOffsets[line]);\r\n    };\r\n    FullTextDocument.prototype.offsetAt = function (position) {\r\n        var lineOffsets = this.getLineOffsets();\r\n        if (position.line >= lineOffsets.length) {\r\n            return this._content.length;\r\n        }\r\n        else if (position.line < 0) {\r\n            return 0;\r\n        }\r\n        var lineOffset = lineOffsets[position.line];\r\n        var nextLineOffset = (position.line + 1 < lineOffsets.length) ? lineOffsets[position.line + 1] : this._content.length;\r\n        return Math.max(Math.min(lineOffset + position.character, nextLineOffset), lineOffset);\r\n    };\r\n    Object.defineProperty(FullTextDocument.prototype, \"lineCount\", {\r\n        get: function () {\r\n            return this.getLineOffsets().length;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return FullTextDocument;\r\n}());\r\nvar Is;\r\n(function (Is) {\r\n    var toString = Object.prototype.toString;\r\n    function defined(value) {\r\n        return typeof value !== 'undefined';\r\n    }\r\n    Is.defined = defined;\r\n    function undefined(value) {\r\n        return typeof value === 'undefined';\r\n    }\r\n    Is.undefined = undefined;\r\n    function boolean(value) {\r\n        return value === true || value === false;\r\n    }\r\n    Is.boolean = boolean;\r\n    function string(value) {\r\n        return toString.call(value) === '[object String]';\r\n    }\r\n    Is.string = string;\r\n    function number(value) {\r\n        return toString.call(value) === '[object Number]';\r\n    }\r\n    Is.number = number;\r\n    function func(value) {\r\n        return toString.call(value) === '[object Function]';\r\n    }\r\n    Is.func = func;\r\n    function objectLiteral(value) {\r\n        // Strictly speaking class instances pass this check as well. Since the LSP\r\n        // doesn't use classes we ignore this for now. If we do we need to add something\r\n        // like this: `Object.getPrototypeOf(Object.getPrototypeOf(x)) === null`\r\n        return value !== null && typeof value === 'object';\r\n    }\r\n    Is.objectLiteral = objectLiteral;\r\n    function typedArray(value, check) {\r\n        return Array.isArray(value) && value.every(check);\r\n    }\r\n    Is.typedArray = typedArray;\r\n})(Is || (Is = {}));\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst Is = require(\"./utils/is\");\r\nconst vscode_jsonrpc_1 = require(\"vscode-jsonrpc\");\r\nconst protocol_implementation_1 = require(\"./protocol.implementation\");\r\nexports.ImplementationRequest = protocol_implementation_1.ImplementationRequest;\r\nconst protocol_typeDefinition_1 = require(\"./protocol.typeDefinition\");\r\nexports.TypeDefinitionRequest = protocol_typeDefinition_1.TypeDefinitionRequest;\r\nconst protocol_workspaceFolders_1 = require(\"./protocol.workspaceFolders\");\r\nexports.WorkspaceFoldersRequest = protocol_workspaceFolders_1.WorkspaceFoldersRequest;\r\nexports.DidChangeWorkspaceFoldersNotification = protocol_workspaceFolders_1.DidChangeWorkspaceFoldersNotification;\r\nconst protocol_configuration_1 = require(\"./protocol.configuration\");\r\nexports.ConfigurationRequest = protocol_configuration_1.ConfigurationRequest;\r\nconst protocol_colorProvider_1 = require(\"./protocol.colorProvider\");\r\nexports.DocumentColorRequest = protocol_colorProvider_1.DocumentColorRequest;\r\nexports.ColorPresentationRequest = protocol_colorProvider_1.ColorPresentationRequest;\r\nconst protocol_foldingRange_1 = require(\"./protocol.foldingRange\");\r\nexports.FoldingRangeRequest = protocol_foldingRange_1.FoldingRangeRequest;\r\nconst protocol_declaration_1 = require(\"./protocol.declaration\");\r\nexports.DeclarationRequest = protocol_declaration_1.DeclarationRequest;\r\n// @ts-ignore: to avoid inlining LocatioLink as dynamic import\r\nlet __noDynamicImport;\r\nvar DocumentFilter;\r\n(function (DocumentFilter) {\r\n    function is(value) {\r\n        let candidate = value;\r\n        return Is.string(candidate.language) || Is.string(candidate.scheme) || Is.string(candidate.pattern);\r\n    }\r\n    DocumentFilter.is = is;\r\n})(DocumentFilter = exports.DocumentFilter || (exports.DocumentFilter = {}));\r\n/**\r\n * The `client/registerCapability` request is sent from the server to the client to register a new capability\r\n * handler on the client side.\r\n */\r\nvar RegistrationRequest;\r\n(function (RegistrationRequest) {\r\n    RegistrationRequest.type = new vscode_jsonrpc_1.RequestType('client/registerCapability');\r\n})(RegistrationRequest = exports.RegistrationRequest || (exports.RegistrationRequest = {}));\r\n/**\r\n * The `client/unregisterCapability` request is sent from the server to the client to unregister a previously registered capability\r\n * handler on the client side.\r\n */\r\nvar UnregistrationRequest;\r\n(function (UnregistrationRequest) {\r\n    UnregistrationRequest.type = new vscode_jsonrpc_1.RequestType('client/unregisterCapability');\r\n})(UnregistrationRequest = exports.UnregistrationRequest || (exports.UnregistrationRequest = {}));\r\nvar ResourceOperationKind;\r\n(function (ResourceOperationKind) {\r\n    /**\r\n     * Supports creating new files and folders.\r\n     */\r\n    ResourceOperationKind.Create = 'create';\r\n    /**\r\n     * Supports renaming existing files and folders.\r\n     */\r\n    ResourceOperationKind.Rename = 'rename';\r\n    /**\r\n     * Supports deleting existing files and folders.\r\n     */\r\n    ResourceOperationKind.Delete = 'delete';\r\n})(ResourceOperationKind = exports.ResourceOperationKind || (exports.ResourceOperationKind = {}));\r\nvar FailureHandlingKind;\r\n(function (FailureHandlingKind) {\r\n    /**\r\n     * Applying the workspace change is simply aborted if one of the changes provided\r\n     * fails. All operations executed before the failing operation stay executed.\r\n     */\r\n    FailureHandlingKind.Abort = 'abort';\r\n    /**\r\n     * All operations are executed transactional. That means they either all\r\n     * succeed or no changes at all are applied to the workspace.\r\n     */\r\n    FailureHandlingKind.Transactional = 'transactional';\r\n    /**\r\n     * If the workspace edit contains only textual file changes they are executed transactional.\r\n     * If resource changes (create, rename or delete file) are part of the change the failure\r\n     * handling startegy is abort.\r\n     */\r\n    FailureHandlingKind.TextOnlyTransactional = 'textOnlyTransactional';\r\n    /**\r\n     * The client tries to undo the operations already executed. But there is no\r\n     * guaruntee that this is succeeding.\r\n     */\r\n    FailureHandlingKind.Undo = 'undo';\r\n})(FailureHandlingKind = exports.FailureHandlingKind || (exports.FailureHandlingKind = {}));\r\n/**\r\n * Defines how the host (editor) should sync\r\n * document changes to the language server.\r\n */\r\nvar TextDocumentSyncKind;\r\n(function (TextDocumentSyncKind) {\r\n    /**\r\n     * Documents should not be synced at all.\r\n     */\r\n    TextDocumentSyncKind.None = 0;\r\n    /**\r\n     * Documents are synced by always sending the full content\r\n     * of the document.\r\n     */\r\n    TextDocumentSyncKind.Full = 1;\r\n    /**\r\n     * Documents are synced by sending the full content on open.\r\n     * After that only incremental updates to the document are\r\n     * send.\r\n     */\r\n    TextDocumentSyncKind.Incremental = 2;\r\n})(TextDocumentSyncKind = exports.TextDocumentSyncKind || (exports.TextDocumentSyncKind = {}));\r\n/**\r\n * The initialize request is sent from the client to the server.\r\n * It is sent once as the request after starting up the server.\r\n * The requests parameter is of type [InitializeParams](#InitializeParams)\r\n * the response if of type [InitializeResult](#InitializeResult) of a Thenable that\r\n * resolves to such.\r\n */\r\nvar InitializeRequest;\r\n(function (InitializeRequest) {\r\n    InitializeRequest.type = new vscode_jsonrpc_1.RequestType('initialize');\r\n})(InitializeRequest = exports.InitializeRequest || (exports.InitializeRequest = {}));\r\n/**\r\n * Known error codes for an `InitializeError`;\r\n */\r\nvar InitializeError;\r\n(function (InitializeError) {\r\n    /**\r\n     * If the protocol version provided by the client can't be handled by the server.\r\n     * @deprecated This initialize error got replaced by client capabilities. There is\r\n     * no version handshake in version 3.0x\r\n     */\r\n    InitializeError.unknownProtocolVersion = 1;\r\n})(InitializeError = exports.InitializeError || (exports.InitializeError = {}));\r\n/**\r\n * The intialized notification is sent from the client to the\r\n * server after the client is fully initialized and the server\r\n * is allowed to send requests from the server to the client.\r\n */\r\nvar InitializedNotification;\r\n(function (InitializedNotification) {\r\n    InitializedNotification.type = new vscode_jsonrpc_1.NotificationType('initialized');\r\n})(InitializedNotification = exports.InitializedNotification || (exports.InitializedNotification = {}));\r\n//---- Shutdown Method ----\r\n/**\r\n * A shutdown request is sent from the client to the server.\r\n * It is sent once when the client decides to shutdown the\r\n * server. The only notification that is sent after a shutdown request\r\n * is the exit event.\r\n */\r\nvar ShutdownRequest;\r\n(function (ShutdownRequest) {\r\n    ShutdownRequest.type = new vscode_jsonrpc_1.RequestType0('shutdown');\r\n})(ShutdownRequest = exports.ShutdownRequest || (exports.ShutdownRequest = {}));\r\n//---- Exit Notification ----\r\n/**\r\n * The exit event is sent from the client to the server to\r\n * ask the server to exit its process.\r\n */\r\nvar ExitNotification;\r\n(function (ExitNotification) {\r\n    ExitNotification.type = new vscode_jsonrpc_1.NotificationType0('exit');\r\n})(ExitNotification = exports.ExitNotification || (exports.ExitNotification = {}));\r\n//---- Configuration notification ----\r\n/**\r\n * The configuration change notification is sent from the client to the server\r\n * when the client's configuration has changed. The notification contains\r\n * the changed configuration as defined by the language client.\r\n */\r\nvar DidChangeConfigurationNotification;\r\n(function (DidChangeConfigurationNotification) {\r\n    DidChangeConfigurationNotification.type = new vscode_jsonrpc_1.NotificationType('workspace/didChangeConfiguration');\r\n})(DidChangeConfigurationNotification = exports.DidChangeConfigurationNotification || (exports.DidChangeConfigurationNotification = {}));\r\n//---- Message show and log notifications ----\r\n/**\r\n * The message type\r\n */\r\nvar MessageType;\r\n(function (MessageType) {\r\n    /**\r\n     * An error message.\r\n     */\r\n    MessageType.Error = 1;\r\n    /**\r\n     * A warning message.\r\n     */\r\n    MessageType.Warning = 2;\r\n    /**\r\n     * An information message.\r\n     */\r\n    MessageType.Info = 3;\r\n    /**\r\n     * A log message.\r\n     */\r\n    MessageType.Log = 4;\r\n})(MessageType = exports.MessageType || (exports.MessageType = {}));\r\n/**\r\n * The show message notification is sent from a server to a client to ask\r\n * the client to display a particular message in the user interface.\r\n */\r\nvar ShowMessageNotification;\r\n(function (ShowMessageNotification) {\r\n    ShowMessageNotification.type = new vscode_jsonrpc_1.NotificationType('window/showMessage');\r\n})(ShowMessageNotification = exports.ShowMessageNotification || (exports.ShowMessageNotification = {}));\r\n/**\r\n * The show message request is sent from the server to the client to show a message\r\n * and a set of options actions to the user.\r\n */\r\nvar ShowMessageRequest;\r\n(function (ShowMessageRequest) {\r\n    ShowMessageRequest.type = new vscode_jsonrpc_1.RequestType('window/showMessageRequest');\r\n})(ShowMessageRequest = exports.ShowMessageRequest || (exports.ShowMessageRequest = {}));\r\n/**\r\n * The log message notification is sent from the server to the client to ask\r\n * the client to log a particular message.\r\n */\r\nvar LogMessageNotification;\r\n(function (LogMessageNotification) {\r\n    LogMessageNotification.type = new vscode_jsonrpc_1.NotificationType('window/logMessage');\r\n})(LogMessageNotification = exports.LogMessageNotification || (exports.LogMessageNotification = {}));\r\n//---- Telemetry notification\r\n/**\r\n * The telemetry event notification is sent from the server to the client to ask\r\n * the client to log telemetry data.\r\n */\r\nvar TelemetryEventNotification;\r\n(function (TelemetryEventNotification) {\r\n    TelemetryEventNotification.type = new vscode_jsonrpc_1.NotificationType('telemetry/event');\r\n})(TelemetryEventNotification = exports.TelemetryEventNotification || (exports.TelemetryEventNotification = {}));\r\n/**\r\n * The document open notification is sent from the client to the server to signal\r\n * newly opened text documents. The document's truth is now managed by the client\r\n * and the server must not try to read the document's truth using the document's\r\n * uri. Open in this sense means it is managed by the client. It doesn't necessarily\r\n * mean that its content is presented in an editor. An open notification must not\r\n * be sent more than once without a corresponding close notification send before.\r\n * This means open and close notification must be balanced and the max open count\r\n * is one.\r\n */\r\nvar DidOpenTextDocumentNotification;\r\n(function (DidOpenTextDocumentNotification) {\r\n    DidOpenTextDocumentNotification.type = new vscode_jsonrpc_1.NotificationType('textDocument/didOpen');\r\n})(DidOpenTextDocumentNotification = exports.DidOpenTextDocumentNotification || (exports.DidOpenTextDocumentNotification = {}));\r\n/**\r\n * The document change notification is sent from the client to the server to signal\r\n * changes to a text document.\r\n */\r\nvar DidChangeTextDocumentNotification;\r\n(function (DidChangeTextDocumentNotification) {\r\n    DidChangeTextDocumentNotification.type = new vscode_jsonrpc_1.NotificationType('textDocument/didChange');\r\n})(DidChangeTextDocumentNotification = exports.DidChangeTextDocumentNotification || (exports.DidChangeTextDocumentNotification = {}));\r\n/**\r\n * The document close notification is sent from the client to the server when\r\n * the document got closed in the client. The document's truth now exists where\r\n * the document's uri points to (e.g. if the document's uri is a file uri the\r\n * truth now exists on disk). As with the open notification the close notification\r\n * is about managing the document's content. Receiving a close notification\r\n * doesn't mean that the document was open in an editor before. A close\r\n * notification requires a previous open notification to be sent.\r\n */\r\nvar DidCloseTextDocumentNotification;\r\n(function (DidCloseTextDocumentNotification) {\r\n    DidCloseTextDocumentNotification.type = new vscode_jsonrpc_1.NotificationType('textDocument/didClose');\r\n})(DidCloseTextDocumentNotification = exports.DidCloseTextDocumentNotification || (exports.DidCloseTextDocumentNotification = {}));\r\n/**\r\n * The document save notification is sent from the client to the server when\r\n * the document got saved in the client.\r\n */\r\nvar DidSaveTextDocumentNotification;\r\n(function (DidSaveTextDocumentNotification) {\r\n    DidSaveTextDocumentNotification.type = new vscode_jsonrpc_1.NotificationType('textDocument/didSave');\r\n})(DidSaveTextDocumentNotification = exports.DidSaveTextDocumentNotification || (exports.DidSaveTextDocumentNotification = {}));\r\n/**\r\n * A document will save notification is sent from the client to the server before\r\n * the document is actually saved.\r\n */\r\nvar WillSaveTextDocumentNotification;\r\n(function (WillSaveTextDocumentNotification) {\r\n    WillSaveTextDocumentNotification.type = new vscode_jsonrpc_1.NotificationType('textDocument/willSave');\r\n})(WillSaveTextDocumentNotification = exports.WillSaveTextDocumentNotification || (exports.WillSaveTextDocumentNotification = {}));\r\n/**\r\n * A document will save request is sent from the client to the server before\r\n * the document is actually saved. The request can return an array of TextEdits\r\n * which will be applied to the text document before it is saved. Please note that\r\n * clients might drop results if computing the text edits took too long or if a\r\n * server constantly fails on this request. This is done to keep the save fast and\r\n * reliable.\r\n */\r\nvar WillSaveTextDocumentWaitUntilRequest;\r\n(function (WillSaveTextDocumentWaitUntilRequest) {\r\n    WillSaveTextDocumentWaitUntilRequest.type = new vscode_jsonrpc_1.RequestType('textDocument/willSaveWaitUntil');\r\n})(WillSaveTextDocumentWaitUntilRequest = exports.WillSaveTextDocumentWaitUntilRequest || (exports.WillSaveTextDocumentWaitUntilRequest = {}));\r\n//---- File eventing ----\r\n/**\r\n * The watched files notification is sent from the client to the server when\r\n * the client detects changes to file watched by the language client.\r\n */\r\nvar DidChangeWatchedFilesNotification;\r\n(function (DidChangeWatchedFilesNotification) {\r\n    DidChangeWatchedFilesNotification.type = new vscode_jsonrpc_1.NotificationType('workspace/didChangeWatchedFiles');\r\n})(DidChangeWatchedFilesNotification = exports.DidChangeWatchedFilesNotification || (exports.DidChangeWatchedFilesNotification = {}));\r\n/**\r\n * The file event type\r\n */\r\nvar FileChangeType;\r\n(function (FileChangeType) {\r\n    /**\r\n     * The file got created.\r\n     */\r\n    FileChangeType.Created = 1;\r\n    /**\r\n     * The file got changed.\r\n     */\r\n    FileChangeType.Changed = 2;\r\n    /**\r\n     * The file got deleted.\r\n     */\r\n    FileChangeType.Deleted = 3;\r\n})(FileChangeType = exports.FileChangeType || (exports.FileChangeType = {}));\r\nvar WatchKind;\r\n(function (WatchKind) {\r\n    /**\r\n     * Interested in create events.\r\n     */\r\n    WatchKind.Create = 1;\r\n    /**\r\n     * Interested in change events\r\n     */\r\n    WatchKind.Change = 2;\r\n    /**\r\n     * Interested in delete events\r\n     */\r\n    WatchKind.Delete = 4;\r\n})(WatchKind = exports.WatchKind || (exports.WatchKind = {}));\r\n//---- Diagnostic notification ----\r\n/**\r\n * Diagnostics notification are sent from the server to the client to signal\r\n * results of validation runs.\r\n */\r\nvar PublishDiagnosticsNotification;\r\n(function (PublishDiagnosticsNotification) {\r\n    PublishDiagnosticsNotification.type = new vscode_jsonrpc_1.NotificationType('textDocument/publishDiagnostics');\r\n})(PublishDiagnosticsNotification = exports.PublishDiagnosticsNotification || (exports.PublishDiagnosticsNotification = {}));\r\n/**\r\n * How a completion was triggered\r\n */\r\nvar CompletionTriggerKind;\r\n(function (CompletionTriggerKind) {\r\n    /**\r\n     * Completion was triggered by typing an identifier (24x7 code\r\n     * complete), manual invocation (e.g Ctrl+Space) or via API.\r\n     */\r\n    CompletionTriggerKind.Invoked = 1;\r\n    /**\r\n     * Completion was triggered by a trigger character specified by\r\n     * the `triggerCharacters` properties of the `CompletionRegistrationOptions`.\r\n     */\r\n    CompletionTriggerKind.TriggerCharacter = 2;\r\n    /**\r\n     * Completion was re-triggered as current completion list is incomplete\r\n     */\r\n    CompletionTriggerKind.TriggerForIncompleteCompletions = 3;\r\n})(CompletionTriggerKind = exports.CompletionTriggerKind || (exports.CompletionTriggerKind = {}));\r\n/**\r\n * Request to request completion at a given text document position. The request's\r\n * parameter is of type [TextDocumentPosition](#TextDocumentPosition) the response\r\n * is of type [CompletionItem[]](#CompletionItem) or [CompletionList](#CompletionList)\r\n * or a Thenable that resolves to such.\r\n *\r\n * The request can delay the computation of the [`detail`](#CompletionItem.detail)\r\n * and [`documentation`](#CompletionItem.documentation) properties to the `completionItem/resolve`\r\n * request. However, properties that are needed for the initial sorting and filtering, like `sortText`,\r\n * `filterText`, `insertText`, and `textEdit`, must not be changed during resolve.\r\n */\r\nvar CompletionRequest;\r\n(function (CompletionRequest) {\r\n    CompletionRequest.type = new vscode_jsonrpc_1.RequestType('textDocument/completion');\r\n})(CompletionRequest = exports.CompletionRequest || (exports.CompletionRequest = {}));\r\n/**\r\n * Request to resolve additional information for a given completion item.The request's\r\n * parameter is of type [CompletionItem](#CompletionItem) the response\r\n * is of type [CompletionItem](#CompletionItem) or a Thenable that resolves to such.\r\n */\r\nvar CompletionResolveRequest;\r\n(function (CompletionResolveRequest) {\r\n    CompletionResolveRequest.type = new vscode_jsonrpc_1.RequestType('completionItem/resolve');\r\n})(CompletionResolveRequest = exports.CompletionResolveRequest || (exports.CompletionResolveRequest = {}));\r\n//---- Hover Support -------------------------------\r\n/**\r\n * Request to request hover information at a given text document position. The request's\r\n * parameter is of type [TextDocumentPosition](#TextDocumentPosition) the response is of\r\n * type [Hover](#Hover) or a Thenable that resolves to such.\r\n */\r\nvar HoverRequest;\r\n(function (HoverRequest) {\r\n    HoverRequest.type = new vscode_jsonrpc_1.RequestType('textDocument/hover');\r\n})(HoverRequest = exports.HoverRequest || (exports.HoverRequest = {}));\r\nvar SignatureHelpRequest;\r\n(function (SignatureHelpRequest) {\r\n    SignatureHelpRequest.type = new vscode_jsonrpc_1.RequestType('textDocument/signatureHelp');\r\n})(SignatureHelpRequest = exports.SignatureHelpRequest || (exports.SignatureHelpRequest = {}));\r\n//---- Goto Definition -------------------------------------\r\n/**\r\n * A request to resolve the definition location of a symbol at a given text\r\n * document position. The request's parameter is of type [TextDocumentPosition]\r\n * (#TextDocumentPosition) the response is of either type [Definition](#Definition)\r\n * or a typed array of [DefinitionLink](#DefinitionLink) or a Thenable that resolves\r\n * to such.\r\n */\r\nvar DefinitionRequest;\r\n(function (DefinitionRequest) {\r\n    DefinitionRequest.type = new vscode_jsonrpc_1.RequestType('textDocument/definition');\r\n})(DefinitionRequest = exports.DefinitionRequest || (exports.DefinitionRequest = {}));\r\n/**\r\n * A request to resolve project-wide references for the symbol denoted\r\n * by the given text document position. The request's parameter is of\r\n * type [ReferenceParams](#ReferenceParams) the response is of type\r\n * [Location[]](#Location) or a Thenable that resolves to such.\r\n */\r\nvar ReferencesRequest;\r\n(function (ReferencesRequest) {\r\n    ReferencesRequest.type = new vscode_jsonrpc_1.RequestType('textDocument/references');\r\n})(ReferencesRequest = exports.ReferencesRequest || (exports.ReferencesRequest = {}));\r\n//---- Document Highlight ----------------------------------\r\n/**\r\n * Request to resolve a [DocumentHighlight](#DocumentHighlight) for a given\r\n * text document position. The request's parameter is of type [TextDocumentPosition]\r\n * (#TextDocumentPosition) the request response is of type [DocumentHighlight[]]\r\n * (#DocumentHighlight) or a Thenable that resolves to such.\r\n */\r\nvar DocumentHighlightRequest;\r\n(function (DocumentHighlightRequest) {\r\n    DocumentHighlightRequest.type = new vscode_jsonrpc_1.RequestType('textDocument/documentHighlight');\r\n})(DocumentHighlightRequest = exports.DocumentHighlightRequest || (exports.DocumentHighlightRequest = {}));\r\n//---- Document Symbol Provider ---------------------------\r\n/**\r\n * A request to list all symbols found in a given text document. The request's\r\n * parameter is of type [TextDocumentIdentifier](#TextDocumentIdentifier) the\r\n * response is of type [SymbolInformation[]](#SymbolInformation) or a Thenable\r\n * that resolves to such.\r\n */\r\nvar DocumentSymbolRequest;\r\n(function (DocumentSymbolRequest) {\r\n    DocumentSymbolRequest.type = new vscode_jsonrpc_1.RequestType('textDocument/documentSymbol');\r\n})(DocumentSymbolRequest = exports.DocumentSymbolRequest || (exports.DocumentSymbolRequest = {}));\r\n//---- Workspace Symbol Provider ---------------------------\r\n/**\r\n * A request to list project-wide symbols matching the query string given\r\n * by the [WorkspaceSymbolParams](#WorkspaceSymbolParams). The response is\r\n * of type [SymbolInformation[]](#SymbolInformation) or a Thenable that\r\n * resolves to such.\r\n */\r\nvar WorkspaceSymbolRequest;\r\n(function (WorkspaceSymbolRequest) {\r\n    WorkspaceSymbolRequest.type = new vscode_jsonrpc_1.RequestType('workspace/symbol');\r\n})(WorkspaceSymbolRequest = exports.WorkspaceSymbolRequest || (exports.WorkspaceSymbolRequest = {}));\r\n/**\r\n * A request to provide commands for the given text document and range.\r\n */\r\nvar CodeActionRequest;\r\n(function (CodeActionRequest) {\r\n    CodeActionRequest.type = new vscode_jsonrpc_1.RequestType('textDocument/codeAction');\r\n})(CodeActionRequest = exports.CodeActionRequest || (exports.CodeActionRequest = {}));\r\n/**\r\n * A request to provide code lens for the given text document.\r\n */\r\nvar CodeLensRequest;\r\n(function (CodeLensRequest) {\r\n    CodeLensRequest.type = new vscode_jsonrpc_1.RequestType('textDocument/codeLens');\r\n})(CodeLensRequest = exports.CodeLensRequest || (exports.CodeLensRequest = {}));\r\n/**\r\n * A request to resolve a command for a given code lens.\r\n */\r\nvar CodeLensResolveRequest;\r\n(function (CodeLensResolveRequest) {\r\n    CodeLensResolveRequest.type = new vscode_jsonrpc_1.RequestType('codeLens/resolve');\r\n})(CodeLensResolveRequest = exports.CodeLensResolveRequest || (exports.CodeLensResolveRequest = {}));\r\n/**\r\n * A request to to format a whole document.\r\n */\r\nvar DocumentFormattingRequest;\r\n(function (DocumentFormattingRequest) {\r\n    DocumentFormattingRequest.type = new vscode_jsonrpc_1.RequestType('textDocument/formatting');\r\n})(DocumentFormattingRequest = exports.DocumentFormattingRequest || (exports.DocumentFormattingRequest = {}));\r\n/**\r\n * A request to to format a range in a document.\r\n */\r\nvar DocumentRangeFormattingRequest;\r\n(function (DocumentRangeFormattingRequest) {\r\n    DocumentRangeFormattingRequest.type = new vscode_jsonrpc_1.RequestType('textDocument/rangeFormatting');\r\n})(DocumentRangeFormattingRequest = exports.DocumentRangeFormattingRequest || (exports.DocumentRangeFormattingRequest = {}));\r\n/**\r\n * A request to format a document on type.\r\n */\r\nvar DocumentOnTypeFormattingRequest;\r\n(function (DocumentOnTypeFormattingRequest) {\r\n    DocumentOnTypeFormattingRequest.type = new vscode_jsonrpc_1.RequestType('textDocument/onTypeFormatting');\r\n})(DocumentOnTypeFormattingRequest = exports.DocumentOnTypeFormattingRequest || (exports.DocumentOnTypeFormattingRequest = {}));\r\n/**\r\n * A request to rename a symbol.\r\n */\r\nvar RenameRequest;\r\n(function (RenameRequest) {\r\n    RenameRequest.type = new vscode_jsonrpc_1.RequestType('textDocument/rename');\r\n})(RenameRequest = exports.RenameRequest || (exports.RenameRequest = {}));\r\n/**\r\n * A request to test and perform the setup necessary for a rename.\r\n */\r\nvar PrepareRenameRequest;\r\n(function (PrepareRenameRequest) {\r\n    PrepareRenameRequest.type = new vscode_jsonrpc_1.RequestType('textDocument/prepareRename');\r\n})(PrepareRenameRequest = exports.PrepareRenameRequest || (exports.PrepareRenameRequest = {}));\r\n/**\r\n * A request to provide document links\r\n */\r\nvar DocumentLinkRequest;\r\n(function (DocumentLinkRequest) {\r\n    DocumentLinkRequest.type = new vscode_jsonrpc_1.RequestType('textDocument/documentLink');\r\n})(DocumentLinkRequest = exports.DocumentLinkRequest || (exports.DocumentLinkRequest = {}));\r\n/**\r\n * Request to resolve additional information for a given document link. The request's\r\n * parameter is of type [DocumentLink](#DocumentLink) the response\r\n * is of type [DocumentLink](#DocumentLink) or a Thenable that resolves to such.\r\n */\r\nvar DocumentLinkResolveRequest;\r\n(function (DocumentLinkResolveRequest) {\r\n    DocumentLinkResolveRequest.type = new vscode_jsonrpc_1.RequestType('documentLink/resolve');\r\n})(DocumentLinkResolveRequest = exports.DocumentLinkResolveRequest || (exports.DocumentLinkResolveRequest = {}));\r\n/**\r\n * A request send from the client to the server to execute a command. The request might return\r\n * a workspace edit which the client will apply to the workspace.\r\n */\r\nvar ExecuteCommandRequest;\r\n(function (ExecuteCommandRequest) {\r\n    ExecuteCommandRequest.type = new vscode_jsonrpc_1.RequestType('workspace/executeCommand');\r\n})(ExecuteCommandRequest = exports.ExecuteCommandRequest || (exports.ExecuteCommandRequest = {}));\r\n/**\r\n * A request sent from the server to the client to modified certain resources.\r\n */\r\nvar ApplyWorkspaceEditRequest;\r\n(function (ApplyWorkspaceEditRequest) {\r\n    ApplyWorkspaceEditRequest.type = new vscode_jsonrpc_1.RequestType('workspace/applyEdit');\r\n})(ApplyWorkspaceEditRequest = exports.ApplyWorkspaceEditRequest || (exports.ApplyWorkspaceEditRequest = {}));\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nfunction boolean(value) {\r\n    return value === true || value === false;\r\n}\r\nexports.boolean = boolean;\r\nfunction string(value) {\r\n    return typeof value === 'string' || value instanceof String;\r\n}\r\nexports.string = string;\r\nfunction number(value) {\r\n    return typeof value === 'number' || value instanceof Number;\r\n}\r\nexports.number = number;\r\nfunction error(value) {\r\n    return value instanceof Error;\r\n}\r\nexports.error = error;\r\nfunction func(value) {\r\n    return typeof value === 'function';\r\n}\r\nexports.func = func;\r\nfunction array(value) {\r\n    return Array.isArray(value);\r\n}\r\nexports.array = array;\r\nfunction stringArray(value) {\r\n    return array(value) && value.every(elem => string(elem));\r\n}\r\nexports.stringArray = stringArray;\r\nfunction typedArray(value, check) {\r\n    return Array.isArray(value) && value.every(check);\r\n}\r\nexports.typedArray = typedArray;\r\nfunction thenable(value) {\r\n    return value && func(value.then);\r\n}\r\nexports.thenable = thenable;\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vscode_jsonrpc_1 = require(\"vscode-jsonrpc\");\r\n// @ts-ignore: to avoid inlining LocatioLink as dynamic import\r\nlet __noDynamicImport;\r\n/**\r\n * A request to resolve the implementation locations of a symbol at a given text\r\n * document position. The request's parameter is of type [TextDocumentPositioParams]\r\n * (#TextDocumentPositionParams) the response is of type [Definition](#Definition) or a\r\n * Thenable that resolves to such.\r\n */\r\nvar ImplementationRequest;\r\n(function (ImplementationRequest) {\r\n    ImplementationRequest.type = new vscode_jsonrpc_1.RequestType('textDocument/implementation');\r\n})(ImplementationRequest = exports.ImplementationRequest || (exports.ImplementationRequest = {}));\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vscode_jsonrpc_1 = require(\"vscode-jsonrpc\");\r\n// @ts-ignore: to avoid inlining LocatioLink as dynamic import\r\nlet __noDynamicImport;\r\n/**\r\n * A request to resolve the type definition locations of a symbol at a given text\r\n * document position. The request's parameter is of type [TextDocumentPositioParams]\r\n * (#TextDocumentPositionParams) the response is of type [Definition](#Definition) or a\r\n * Thenable that resolves to such.\r\n */\r\nvar TypeDefinitionRequest;\r\n(function (TypeDefinitionRequest) {\r\n    TypeDefinitionRequest.type = new vscode_jsonrpc_1.RequestType('textDocument/typeDefinition');\r\n})(TypeDefinitionRequest = exports.TypeDefinitionRequest || (exports.TypeDefinitionRequest = {}));\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vscode_jsonrpc_1 = require(\"vscode-jsonrpc\");\r\n/**\r\n * The `workspace/workspaceFolders` is sent from the server to the client to fetch the open workspace folders.\r\n */\r\nvar WorkspaceFoldersRequest;\r\n(function (WorkspaceFoldersRequest) {\r\n    WorkspaceFoldersRequest.type = new vscode_jsonrpc_1.RequestType0('workspace/workspaceFolders');\r\n})(WorkspaceFoldersRequest = exports.WorkspaceFoldersRequest || (exports.WorkspaceFoldersRequest = {}));\r\n/**\r\n * The `workspace/didChangeWorkspaceFolders` notification is sent from the client to the server when the workspace\r\n * folder configuration changes.\r\n */\r\nvar DidChangeWorkspaceFoldersNotification;\r\n(function (DidChangeWorkspaceFoldersNotification) {\r\n    DidChangeWorkspaceFoldersNotification.type = new vscode_jsonrpc_1.NotificationType('workspace/didChangeWorkspaceFolders');\r\n})(DidChangeWorkspaceFoldersNotification = exports.DidChangeWorkspaceFoldersNotification || (exports.DidChangeWorkspaceFoldersNotification = {}));\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vscode_jsonrpc_1 = require(\"vscode-jsonrpc\");\r\n/**\r\n * The 'workspace/configuration' request is sent from the server to the client to fetch a certain\r\n * configuration setting.\r\n *\r\n * This pull model replaces the old push model were the client signaled configuration change via an\r\n * event. If the server still needs to react to configuration changes (since the server caches the\r\n * result of `workspace/configuration` requests) the server should register for an empty configuration\r\n * change event and empty the cache if such an event is received.\r\n */\r\nvar ConfigurationRequest;\r\n(function (ConfigurationRequest) {\r\n    ConfigurationRequest.type = new vscode_jsonrpc_1.RequestType('workspace/configuration');\r\n})(ConfigurationRequest = exports.ConfigurationRequest || (exports.ConfigurationRequest = {}));\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vscode_jsonrpc_1 = require(\"vscode-jsonrpc\");\r\n/**\r\n * A request to list all color symbols found in a given text document. The request's\r\n * parameter is of type [DocumentColorParams](#DocumentColorParams) the\r\n * response is of type [ColorInformation[]](#ColorInformation) or a Thenable\r\n * that resolves to such.\r\n */\r\nvar DocumentColorRequest;\r\n(function (DocumentColorRequest) {\r\n    DocumentColorRequest.type = new vscode_jsonrpc_1.RequestType('textDocument/documentColor');\r\n})(DocumentColorRequest = exports.DocumentColorRequest || (exports.DocumentColorRequest = {}));\r\n/**\r\n * A request to list all presentation for a color. The request's\r\n * parameter is of type [ColorPresentationParams](#ColorPresentationParams) the\r\n * response is of type [ColorInformation[]](#ColorInformation) or a Thenable\r\n * that resolves to such.\r\n */\r\nvar ColorPresentationRequest;\r\n(function (ColorPresentationRequest) {\r\n    ColorPresentationRequest.type = new vscode_jsonrpc_1.RequestType('textDocument/colorPresentation');\r\n})(ColorPresentationRequest = exports.ColorPresentationRequest || (exports.ColorPresentationRequest = {}));\r\n","\"use strict\";\r\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vscode_jsonrpc_1 = require(\"vscode-jsonrpc\");\r\n/**\r\n * Enum of known range kinds\r\n */\r\nvar FoldingRangeKind;\r\n(function (FoldingRangeKind) {\r\n    /**\r\n     * Folding range for a comment\r\n     */\r\n    FoldingRangeKind[\"Comment\"] = \"comment\";\r\n    /**\r\n     * Folding range for a imports or includes\r\n     */\r\n    FoldingRangeKind[\"Imports\"] = \"imports\";\r\n    /**\r\n     * Folding range for a region (e.g. `#region`)\r\n     */\r\n    FoldingRangeKind[\"Region\"] = \"region\";\r\n})(FoldingRangeKind = exports.FoldingRangeKind || (exports.FoldingRangeKind = {}));\r\n/**\r\n * A request to provide folding ranges in a document. The request's\r\n * parameter is of type [FoldingRangeParams](#FoldingRangeParams), the\r\n * response is of type [FoldingRangeList](#FoldingRangeList) or a Thenable\r\n * that resolves to such.\r\n */\r\nvar FoldingRangeRequest;\r\n(function (FoldingRangeRequest) {\r\n    FoldingRangeRequest.type = new vscode_jsonrpc_1.RequestType('textDocument/foldingRange');\r\n})(FoldingRangeRequest = exports.FoldingRangeRequest || (exports.FoldingRangeRequest = {}));\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vscode_jsonrpc_1 = require(\"vscode-jsonrpc\");\r\n// @ts-ignore: to avoid inlining LocatioLink as dynamic import\r\nlet __noDynamicImport;\r\n/**\r\n * A request to resolve the type definition locations of a symbol at a given text\r\n * document position. The request's parameter is of type [TextDocumentPositioParams]\r\n * (#TextDocumentPositionParams) the response is of type [Declaration](#Declaration)\r\n * or a typed array of [DeclarationLink](#DeclarationLink) or a Thenable that resolves\r\n * to such.\r\n */\r\nvar DeclarationRequest;\r\n(function (DeclarationRequest) {\r\n    DeclarationRequest.type = new vscode_jsonrpc_1.RequestType('textDocument/declaration');\r\n})(DeclarationRequest = exports.DeclarationRequest || (exports.DeclarationRequest = {}));\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst code = require(\"vscode\");\r\nconst proto = require(\"vscode-languageserver-protocol\");\r\nconst Is = require(\"./utils/is\");\r\nconst protocolCompletionItem_1 = require(\"./protocolCompletionItem\");\r\nconst protocolCodeLens_1 = require(\"./protocolCodeLens\");\r\nconst protocolDocumentLink_1 = require(\"./protocolDocumentLink\");\r\nfunction createConverter(uriConverter) {\r\n    const nullConverter = (value) => value.toString();\r\n    const _uriConverter = uriConverter || nullConverter;\r\n    function asUri(value) {\r\n        return _uriConverter(value);\r\n    }\r\n    function asTextDocumentIdentifier(textDocument) {\r\n        return {\r\n            uri: _uriConverter(textDocument.uri)\r\n        };\r\n    }\r\n    function asVersionedTextDocumentIdentifier(textDocument) {\r\n        return {\r\n            uri: _uriConverter(textDocument.uri),\r\n            version: textDocument.version\r\n        };\r\n    }\r\n    function asOpenTextDocumentParams(textDocument) {\r\n        return {\r\n            textDocument: {\r\n                uri: _uriConverter(textDocument.uri),\r\n                languageId: textDocument.languageId,\r\n                version: textDocument.version,\r\n                text: textDocument.getText()\r\n            }\r\n        };\r\n    }\r\n    function isTextDocumentChangeEvent(value) {\r\n        let candidate = value;\r\n        return !!candidate.document && !!candidate.contentChanges;\r\n    }\r\n    function isTextDocument(value) {\r\n        let candidate = value;\r\n        return !!candidate.uri && !!candidate.version;\r\n    }\r\n    function asChangeTextDocumentParams(arg) {\r\n        if (isTextDocument(arg)) {\r\n            let result = {\r\n                textDocument: {\r\n                    uri: _uriConverter(arg.uri),\r\n                    version: arg.version\r\n                },\r\n                contentChanges: [{ text: arg.getText() }]\r\n            };\r\n            return result;\r\n        }\r\n        else if (isTextDocumentChangeEvent(arg)) {\r\n            let document = arg.document;\r\n            let result = {\r\n                textDocument: {\r\n                    uri: _uriConverter(document.uri),\r\n                    version: document.version\r\n                },\r\n                contentChanges: arg.contentChanges.map((change) => {\r\n                    let range = change.range;\r\n                    return {\r\n                        range: {\r\n                            start: { line: range.start.line, character: range.start.character },\r\n                            end: { line: range.end.line, character: range.end.character }\r\n                        },\r\n                        rangeLength: change.rangeLength,\r\n                        text: change.text\r\n                    };\r\n                })\r\n            };\r\n            return result;\r\n        }\r\n        else {\r\n            throw Error('Unsupported text document change parameter');\r\n        }\r\n    }\r\n    function asCloseTextDocumentParams(textDocument) {\r\n        return {\r\n            textDocument: asTextDocumentIdentifier(textDocument)\r\n        };\r\n    }\r\n    function asSaveTextDocumentParams(textDocument, includeContent = false) {\r\n        let result = {\r\n            textDocument: asVersionedTextDocumentIdentifier(textDocument)\r\n        };\r\n        if (includeContent) {\r\n            result.text = textDocument.getText();\r\n        }\r\n        return result;\r\n    }\r\n    function asTextDocumentSaveReason(reason) {\r\n        switch (reason) {\r\n            case code.TextDocumentSaveReason.Manual:\r\n                return proto.TextDocumentSaveReason.Manual;\r\n            case code.TextDocumentSaveReason.AfterDelay:\r\n                return proto.TextDocumentSaveReason.AfterDelay;\r\n            case code.TextDocumentSaveReason.FocusOut:\r\n                return proto.TextDocumentSaveReason.FocusOut;\r\n        }\r\n        return proto.TextDocumentSaveReason.Manual;\r\n    }\r\n    function asWillSaveTextDocumentParams(event) {\r\n        return {\r\n            textDocument: asTextDocumentIdentifier(event.document),\r\n            reason: asTextDocumentSaveReason(event.reason)\r\n        };\r\n    }\r\n    function asTextDocumentPositionParams(textDocument, position) {\r\n        return {\r\n            textDocument: asTextDocumentIdentifier(textDocument),\r\n            position: asWorkerPosition(position)\r\n        };\r\n    }\r\n    function asTriggerKind(triggerKind) {\r\n        switch (triggerKind) {\r\n            case code.CompletionTriggerKind.TriggerCharacter:\r\n                return proto.CompletionTriggerKind.TriggerCharacter;\r\n            case code.CompletionTriggerKind.TriggerForIncompleteCompletions:\r\n                return proto.CompletionTriggerKind.TriggerForIncompleteCompletions;\r\n            default:\r\n                return proto.CompletionTriggerKind.Invoked;\r\n        }\r\n    }\r\n    function asCompletionParams(textDocument, position, context) {\r\n        return {\r\n            textDocument: asTextDocumentIdentifier(textDocument),\r\n            position: asWorkerPosition(position),\r\n            context: {\r\n                triggerKind: asTriggerKind(context.triggerKind),\r\n                triggerCharacter: context.triggerCharacter\r\n            }\r\n        };\r\n    }\r\n    function asWorkerPosition(position) {\r\n        return { line: position.line, character: position.character };\r\n    }\r\n    function asPosition(value) {\r\n        if (value === void 0) {\r\n            return undefined;\r\n        }\r\n        else if (value === null) {\r\n            return null;\r\n        }\r\n        return { line: value.line, character: value.character };\r\n    }\r\n    function asRange(value) {\r\n        if (value === void 0 || value === null) {\r\n            return value;\r\n        }\r\n        return { start: asPosition(value.start), end: asPosition(value.end) };\r\n    }\r\n    function asDiagnosticSeverity(value) {\r\n        switch (value) {\r\n            case code.DiagnosticSeverity.Error:\r\n                return proto.DiagnosticSeverity.Error;\r\n            case code.DiagnosticSeverity.Warning:\r\n                return proto.DiagnosticSeverity.Warning;\r\n            case code.DiagnosticSeverity.Information:\r\n                return proto.DiagnosticSeverity.Information;\r\n            case code.DiagnosticSeverity.Hint:\r\n                return proto.DiagnosticSeverity.Hint;\r\n        }\r\n    }\r\n    function asDiagnostic(item) {\r\n        let result = proto.Diagnostic.create(asRange(item.range), item.message);\r\n        if (Is.number(item.severity)) {\r\n            result.severity = asDiagnosticSeverity(item.severity);\r\n        }\r\n        if (Is.number(item.code) || Is.string(item.code)) {\r\n            result.code = item.code;\r\n        }\r\n        if (item.source) {\r\n            result.source = item.source;\r\n        }\r\n        return result;\r\n    }\r\n    function asDiagnostics(items) {\r\n        if (items === void 0 || items === null) {\r\n            return items;\r\n        }\r\n        return items.map(asDiagnostic);\r\n    }\r\n    function asDocumentation(format, documentation) {\r\n        switch (format) {\r\n            case '$string':\r\n                return documentation;\r\n            case proto.MarkupKind.PlainText:\r\n                return { kind: format, value: documentation };\r\n            case proto.MarkupKind.Markdown:\r\n                return { kind: format, value: documentation.value };\r\n            default:\r\n                return `Unsupported Markup content received. Kind is: ${format}`;\r\n        }\r\n    }\r\n    function asCompletionItemKind(value, original) {\r\n        if (original !== void 0) {\r\n            return original;\r\n        }\r\n        return value + 1;\r\n    }\r\n    function asCompletionItem(item) {\r\n        let result = { label: item.label };\r\n        let protocolItem = item instanceof protocolCompletionItem_1.default ? item : undefined;\r\n        if (item.detail) {\r\n            result.detail = item.detail;\r\n        }\r\n        // We only send items back we created. So this can't be something else than\r\n        // a string right now.\r\n        if (item.documentation) {\r\n            if (!protocolItem || protocolItem.documentationFormat === '$string') {\r\n                result.documentation = item.documentation;\r\n            }\r\n            else {\r\n                result.documentation = asDocumentation(protocolItem.documentationFormat, item.documentation);\r\n            }\r\n        }\r\n        if (item.filterText) {\r\n            result.filterText = item.filterText;\r\n        }\r\n        fillPrimaryInsertText(result, item);\r\n        if (Is.number(item.kind)) {\r\n            result.kind = asCompletionItemKind(item.kind, protocolItem && protocolItem.originalItemKind);\r\n        }\r\n        if (item.sortText) {\r\n            result.sortText = item.sortText;\r\n        }\r\n        if (item.additionalTextEdits) {\r\n            result.additionalTextEdits = asTextEdits(item.additionalTextEdits);\r\n        }\r\n        if (item.commitCharacters) {\r\n            result.commitCharacters = item.commitCharacters.slice();\r\n        }\r\n        if (item.command) {\r\n            result.command = asCommand(item.command);\r\n        }\r\n        if (item.preselect === true || item.preselect === false) {\r\n            result.preselect = item.preselect;\r\n        }\r\n        if (protocolItem) {\r\n            if (protocolItem.data !== void 0) {\r\n                result.data = protocolItem.data;\r\n            }\r\n            if (protocolItem.deprecated === true || protocolItem.deprecated === false) {\r\n                result.deprecated = protocolItem.deprecated;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    function fillPrimaryInsertText(target, source) {\r\n        let format = proto.InsertTextFormat.PlainText;\r\n        let text;\r\n        let range = undefined;\r\n        if (source.textEdit) {\r\n            text = source.textEdit.newText;\r\n            range = asRange(source.textEdit.range);\r\n        }\r\n        else if (source.insertText instanceof code.SnippetString) {\r\n            format = proto.InsertTextFormat.Snippet;\r\n            text = source.insertText.value;\r\n        }\r\n        else {\r\n            text = source.insertText;\r\n        }\r\n        if (source.range) {\r\n            range = asRange(source.range);\r\n        }\r\n        target.insertTextFormat = format;\r\n        if (source.fromEdit && text && range) {\r\n            target.textEdit = { newText: text, range: range };\r\n        }\r\n        else {\r\n            target.insertText = text;\r\n        }\r\n    }\r\n    function asTextEdit(edit) {\r\n        return { range: asRange(edit.range), newText: edit.newText };\r\n    }\r\n    function asTextEdits(edits) {\r\n        if (edits === void 0 || edits === null) {\r\n            return edits;\r\n        }\r\n        return edits.map(asTextEdit);\r\n    }\r\n    function asReferenceParams(textDocument, position, options) {\r\n        return {\r\n            textDocument: asTextDocumentIdentifier(textDocument),\r\n            position: asWorkerPosition(position),\r\n            context: { includeDeclaration: options.includeDeclaration }\r\n        };\r\n    }\r\n    function asCodeActionContext(context) {\r\n        if (context === void 0 || context === null) {\r\n            return context;\r\n        }\r\n        return proto.CodeActionContext.create(asDiagnostics(context.diagnostics), Is.string(context.only) ? [context.only] : undefined);\r\n    }\r\n    function asCommand(item) {\r\n        let result = proto.Command.create(item.title, item.command);\r\n        if (item.arguments) {\r\n            result.arguments = item.arguments;\r\n        }\r\n        return result;\r\n    }\r\n    function asCodeLens(item) {\r\n        let result = proto.CodeLens.create(asRange(item.range));\r\n        if (item.command) {\r\n            result.command = asCommand(item.command);\r\n        }\r\n        if (item instanceof protocolCodeLens_1.default) {\r\n            if (item.data) {\r\n                result.data = item.data;\r\n            }\r\n            ;\r\n        }\r\n        return result;\r\n    }\r\n    function asFormattingOptions(item) {\r\n        return { tabSize: item.tabSize, insertSpaces: item.insertSpaces };\r\n    }\r\n    function asDocumentSymbolParams(textDocument) {\r\n        return {\r\n            textDocument: asTextDocumentIdentifier(textDocument)\r\n        };\r\n    }\r\n    function asCodeLensParams(textDocument) {\r\n        return {\r\n            textDocument: asTextDocumentIdentifier(textDocument)\r\n        };\r\n    }\r\n    function asDocumentLink(item) {\r\n        let result = proto.DocumentLink.create(asRange(item.range));\r\n        if (item.target) {\r\n            result.target = asUri(item.target);\r\n        }\r\n        let protocolItem = item instanceof protocolDocumentLink_1.default ? item : undefined;\r\n        if (protocolItem && protocolItem.data) {\r\n            result.data = protocolItem.data;\r\n        }\r\n        return result;\r\n    }\r\n    function asDocumentLinkParams(textDocument) {\r\n        return {\r\n            textDocument: asTextDocumentIdentifier(textDocument)\r\n        };\r\n    }\r\n    return {\r\n        asUri,\r\n        asTextDocumentIdentifier,\r\n        asVersionedTextDocumentIdentifier,\r\n        asOpenTextDocumentParams,\r\n        asChangeTextDocumentParams,\r\n        asCloseTextDocumentParams,\r\n        asSaveTextDocumentParams,\r\n        asWillSaveTextDocumentParams,\r\n        asTextDocumentPositionParams,\r\n        asCompletionParams,\r\n        asWorkerPosition,\r\n        asRange,\r\n        asPosition,\r\n        asDiagnosticSeverity,\r\n        asDiagnostic,\r\n        asDiagnostics,\r\n        asCompletionItem,\r\n        asTextEdit,\r\n        asReferenceParams,\r\n        asCodeActionContext,\r\n        asCommand,\r\n        asCodeLens,\r\n        asFormattingOptions,\r\n        asDocumentSymbolParams,\r\n        asCodeLensParams,\r\n        asDocumentLink,\r\n        asDocumentLinkParams\r\n    };\r\n}\r\nexports.createConverter = createConverter;\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst code = require(\"vscode\");\r\nconst ls = require(\"vscode-languageserver-protocol\");\r\nconst Is = require(\"./utils/is\");\r\nconst protocolCompletionItem_1 = require(\"./protocolCompletionItem\");\r\nconst protocolCodeLens_1 = require(\"./protocolCodeLens\");\r\nconst protocolDocumentLink_1 = require(\"./protocolDocumentLink\");\r\nvar CodeBlock;\r\n(function (CodeBlock) {\r\n    function is(value) {\r\n        let candidate = value;\r\n        return candidate && Is.string(candidate.language) && Is.string(candidate.value);\r\n    }\r\n    CodeBlock.is = is;\r\n})(CodeBlock || (CodeBlock = {}));\r\nfunction createConverter(uriConverter) {\r\n    const nullConverter = (value) => code.Uri.parse(value);\r\n    const _uriConverter = uriConverter || nullConverter;\r\n    function asUri(value) {\r\n        return _uriConverter(value);\r\n    }\r\n    function asDiagnostics(diagnostics) {\r\n        return diagnostics.map(asDiagnostic);\r\n    }\r\n    function asDiagnostic(diagnostic) {\r\n        let result = new code.Diagnostic(asRange(diagnostic.range), diagnostic.message, asDiagnosticSeverity(diagnostic.severity));\r\n        if (Is.number(diagnostic.code) || Is.string(diagnostic.code)) {\r\n            result.code = diagnostic.code;\r\n        }\r\n        if (diagnostic.source) {\r\n            result.source = diagnostic.source;\r\n        }\r\n        if (diagnostic.relatedInformation) {\r\n            result.relatedInformation = asRelatedInformation(diagnostic.relatedInformation);\r\n        }\r\n        return result;\r\n    }\r\n    function asRelatedInformation(relatedInformation) {\r\n        return relatedInformation.map(asDiagnosticRelatedInformation);\r\n    }\r\n    function asDiagnosticRelatedInformation(information) {\r\n        return new code.DiagnosticRelatedInformation(asLocation(information.location), information.message);\r\n    }\r\n    function asPosition(value) {\r\n        if (!value) {\r\n            return undefined;\r\n        }\r\n        return new code.Position(value.line, value.character);\r\n    }\r\n    function asRange(value) {\r\n        if (!value) {\r\n            return undefined;\r\n        }\r\n        return new code.Range(asPosition(value.start), asPosition(value.end));\r\n    }\r\n    function asDiagnosticSeverity(value) {\r\n        if (value === void 0 || value === null) {\r\n            return code.DiagnosticSeverity.Error;\r\n        }\r\n        switch (value) {\r\n            case ls.DiagnosticSeverity.Error:\r\n                return code.DiagnosticSeverity.Error;\r\n            case ls.DiagnosticSeverity.Warning:\r\n                return code.DiagnosticSeverity.Warning;\r\n            case ls.DiagnosticSeverity.Information:\r\n                return code.DiagnosticSeverity.Information;\r\n            case ls.DiagnosticSeverity.Hint:\r\n                return code.DiagnosticSeverity.Hint;\r\n        }\r\n        return code.DiagnosticSeverity.Error;\r\n    }\r\n    function asHoverContent(value) {\r\n        if (Is.string(value)) {\r\n            return new code.MarkdownString(value);\r\n        }\r\n        else if (CodeBlock.is(value)) {\r\n            let result = new code.MarkdownString();\r\n            return result.appendCodeblock(value.value, value.language);\r\n        }\r\n        else if (Array.isArray(value)) {\r\n            let result = [];\r\n            for (let element of value) {\r\n                let item = new code.MarkdownString();\r\n                if (CodeBlock.is(element)) {\r\n                    item.appendCodeblock(element.value, element.language);\r\n                }\r\n                else {\r\n                    item.appendMarkdown(element);\r\n                }\r\n                result.push(item);\r\n            }\r\n            return result;\r\n        }\r\n        else {\r\n            let result;\r\n            switch (value.kind) {\r\n                case ls.MarkupKind.Markdown:\r\n                    return new code.MarkdownString(value.value);\r\n                case ls.MarkupKind.PlainText:\r\n                    result = new code.MarkdownString();\r\n                    result.appendText(value.value);\r\n                    return result;\r\n                default:\r\n                    result = new code.MarkdownString();\r\n                    result.appendText(`Unsupported Markup content received. Kind is: ${value.kind}`);\r\n                    return result;\r\n            }\r\n        }\r\n    }\r\n    function asDocumentation(value) {\r\n        if (Is.string(value)) {\r\n            return value;\r\n        }\r\n        else {\r\n            switch (value.kind) {\r\n                case ls.MarkupKind.Markdown:\r\n                    return new code.MarkdownString(value.value);\r\n                case ls.MarkupKind.PlainText:\r\n                    return value.value;\r\n                default:\r\n                    return `Unsupported Markup content received. Kind is: ${value.kind}`;\r\n            }\r\n        }\r\n    }\r\n    function asHover(hover) {\r\n        if (!hover) {\r\n            return undefined;\r\n        }\r\n        return new code.Hover(asHoverContent(hover.contents), asRange(hover.range));\r\n    }\r\n    function asCompletionResult(result) {\r\n        if (!result) {\r\n            return undefined;\r\n        }\r\n        if (Array.isArray(result)) {\r\n            let items = result;\r\n            return items.map(asCompletionItem);\r\n        }\r\n        let list = result;\r\n        return new code.CompletionList(list.items.map(asCompletionItem), list.isIncomplete);\r\n    }\r\n    function asCompletionItemKind(value) {\r\n        // Protocol item kind is 1 based, codes item kind is zero based.\r\n        if (ls.CompletionItemKind.Text <= value && value <= ls.CompletionItemKind.TypeParameter) {\r\n            return [value - 1, undefined];\r\n        }\r\n        ;\r\n        return [code.CompletionItemKind.Text, value];\r\n    }\r\n    function asCompletionItem(item) {\r\n        let result = new protocolCompletionItem_1.default(item.label);\r\n        if (item.detail) {\r\n            result.detail = item.detail;\r\n        }\r\n        if (item.documentation) {\r\n            result.documentation = asDocumentation(item.documentation);\r\n            result.documentationFormat = Is.string(item.documentation) ? '$string' : item.documentation.kind;\r\n        }\r\n        ;\r\n        if (item.filterText) {\r\n            result.filterText = item.filterText;\r\n        }\r\n        let insertText = asCompletionInsertText(item);\r\n        if (insertText) {\r\n            result.insertText = insertText.text;\r\n            result.range = insertText.range;\r\n            result.fromEdit = insertText.fromEdit;\r\n        }\r\n        if (Is.number(item.kind)) {\r\n            let [itemKind, original] = asCompletionItemKind(item.kind);\r\n            result.kind = itemKind;\r\n            if (original) {\r\n                result.originalItemKind = original;\r\n            }\r\n        }\r\n        if (item.sortText) {\r\n            result.sortText = item.sortText;\r\n        }\r\n        if (item.additionalTextEdits) {\r\n            result.additionalTextEdits = asTextEdits(item.additionalTextEdits);\r\n        }\r\n        if (Is.stringArray(item.commitCharacters)) {\r\n            result.commitCharacters = item.commitCharacters.slice();\r\n        }\r\n        if (item.command) {\r\n            result.command = asCommand(item.command);\r\n        }\r\n        if (item.deprecated === true || item.deprecated === false) {\r\n            result.deprecated = item.deprecated;\r\n        }\r\n        if (item.preselect === true || item.preselect === false) {\r\n            result.preselect = item.preselect;\r\n        }\r\n        if (item.data !== void 0) {\r\n            result.data = item.data;\r\n        }\r\n        return result;\r\n    }\r\n    function asCompletionInsertText(item) {\r\n        if (item.textEdit) {\r\n            if (item.insertTextFormat === ls.InsertTextFormat.Snippet) {\r\n                return { text: new code.SnippetString(item.textEdit.newText), range: asRange(item.textEdit.range), fromEdit: true };\r\n            }\r\n            else {\r\n                return { text: item.textEdit.newText, range: asRange(item.textEdit.range), fromEdit: true };\r\n            }\r\n        }\r\n        else if (item.insertText) {\r\n            if (item.insertTextFormat === ls.InsertTextFormat.Snippet) {\r\n                return { text: new code.SnippetString(item.insertText), fromEdit: false };\r\n            }\r\n            else {\r\n                return { text: item.insertText, fromEdit: false };\r\n            }\r\n        }\r\n        else {\r\n            return undefined;\r\n        }\r\n    }\r\n    function asTextEdit(edit) {\r\n        if (!edit) {\r\n            return undefined;\r\n        }\r\n        return new code.TextEdit(asRange(edit.range), edit.newText);\r\n    }\r\n    function asTextEdits(items) {\r\n        if (!items) {\r\n            return undefined;\r\n        }\r\n        return items.map(asTextEdit);\r\n    }\r\n    function asSignatureHelp(item) {\r\n        if (!item) {\r\n            return undefined;\r\n        }\r\n        let result = new code.SignatureHelp();\r\n        if (Is.number(item.activeSignature)) {\r\n            result.activeSignature = item.activeSignature;\r\n        }\r\n        else {\r\n            // activeSignature was optional in the past\r\n            result.activeSignature = 0;\r\n        }\r\n        if (Is.number(item.activeParameter)) {\r\n            result.activeParameter = item.activeParameter;\r\n        }\r\n        else {\r\n            // activeParameter was optional in the past\r\n            result.activeParameter = 0;\r\n        }\r\n        if (item.signatures) {\r\n            result.signatures = asSignatureInformations(item.signatures);\r\n        }\r\n        return result;\r\n    }\r\n    function asSignatureInformations(items) {\r\n        return items.map(asSignatureInformation);\r\n    }\r\n    function asSignatureInformation(item) {\r\n        let result = new code.SignatureInformation(item.label);\r\n        if (item.documentation) {\r\n            result.documentation = asDocumentation(item.documentation);\r\n        }\r\n        if (item.parameters) {\r\n            result.parameters = asParameterInformations(item.parameters);\r\n        }\r\n        return result;\r\n    }\r\n    function asParameterInformations(item) {\r\n        return item.map(asParameterInformation);\r\n    }\r\n    function asParameterInformation(item) {\r\n        let result = new code.ParameterInformation(item.label);\r\n        if (item.documentation) {\r\n            result.documentation = asDocumentation(item.documentation);\r\n        }\r\n        ;\r\n        return result;\r\n    }\r\n    function asLocation(item) {\r\n        if (!item) {\r\n            return undefined;\r\n        }\r\n        return new code.Location(_uriConverter(item.uri), asRange(item.range));\r\n    }\r\n    function asDeclarationResult(item) {\r\n        if (!item) {\r\n            return undefined;\r\n        }\r\n        return asLocationResult(item);\r\n    }\r\n    function asDefinitionResult(item) {\r\n        if (!item) {\r\n            return undefined;\r\n        }\r\n        return asLocationResult(item);\r\n    }\r\n    function asLocationLink(item) {\r\n        if (!item) {\r\n            return undefined;\r\n        }\r\n        return {\r\n            targetUri: _uriConverter(item.targetUri),\r\n            targetRange: asRange(item.targetSelectionRange),\r\n            originSelectionRange: asRange(item.originSelectionRange),\r\n            targetSelectionRange: asRange(item.targetSelectionRange)\r\n        };\r\n    }\r\n    function asLocationResult(item) {\r\n        if (!item) {\r\n            return undefined;\r\n        }\r\n        if (Is.array(item)) {\r\n            if (item.length === 0) {\r\n                return [];\r\n            }\r\n            else if (ls.LocationLink.is(item[0])) {\r\n                let links = item;\r\n                return links.map((link) => asLocationLink(link));\r\n            }\r\n            else {\r\n                let locations = item;\r\n                return locations.map((location) => asLocation(location));\r\n            }\r\n        }\r\n        else if (ls.LocationLink.is(item)) {\r\n            return [asLocationLink(item)];\r\n        }\r\n        else {\r\n            return asLocation(item);\r\n        }\r\n    }\r\n    function asReferences(values) {\r\n        if (!values) {\r\n            return undefined;\r\n        }\r\n        return values.map(location => asLocation(location));\r\n    }\r\n    function asDocumentHighlights(values) {\r\n        if (!values) {\r\n            return undefined;\r\n        }\r\n        return values.map(asDocumentHighlight);\r\n    }\r\n    function asDocumentHighlight(item) {\r\n        let result = new code.DocumentHighlight(asRange(item.range));\r\n        if (Is.number(item.kind)) {\r\n            result.kind = asDocumentHighlightKind(item.kind);\r\n        }\r\n        return result;\r\n    }\r\n    function asDocumentHighlightKind(item) {\r\n        switch (item) {\r\n            case ls.DocumentHighlightKind.Text:\r\n                return code.DocumentHighlightKind.Text;\r\n            case ls.DocumentHighlightKind.Read:\r\n                return code.DocumentHighlightKind.Read;\r\n            case ls.DocumentHighlightKind.Write:\r\n                return code.DocumentHighlightKind.Write;\r\n        }\r\n        return code.DocumentHighlightKind.Text;\r\n    }\r\n    function asSymbolInformations(values, uri) {\r\n        if (!values) {\r\n            return undefined;\r\n        }\r\n        return values.map(information => asSymbolInformation(information, uri));\r\n    }\r\n    function asSymbolKind(item) {\r\n        if (item <= ls.SymbolKind.TypeParameter) {\r\n            // Symbol kind is one based in the protocol and zero based in code.\r\n            return item - 1;\r\n        }\r\n        return code.SymbolKind.Property;\r\n    }\r\n    function asSymbolInformation(item, uri) {\r\n        // Symbol kind is one based in the protocol and zero based in code.\r\n        let result = new code.SymbolInformation(item.name, asSymbolKind(item.kind), asRange(item.location.range), item.location.uri ? _uriConverter(item.location.uri) : uri);\r\n        if (item.containerName) {\r\n            result.containerName = item.containerName;\r\n        }\r\n        return result;\r\n    }\r\n    function asDocumentSymbols(values) {\r\n        if (values === void 0 || values === null) {\r\n            return undefined;\r\n        }\r\n        return values.map(asDocumentSymbol);\r\n    }\r\n    function asDocumentSymbol(value) {\r\n        let result = new code.DocumentSymbol(value.name, value.detail || '', asSymbolKind(value.kind), asRange(value.range), asRange(value.selectionRange));\r\n        if (value.children !== void 0 && value.children.length > 0) {\r\n            let children = [];\r\n            for (let child of value.children) {\r\n                children.push(asDocumentSymbol(child));\r\n            }\r\n            result.children = children;\r\n        }\r\n        return result;\r\n    }\r\n    function asCommand(item) {\r\n        let result = { title: item.title, command: item.command };\r\n        if (item.arguments) {\r\n            result.arguments = item.arguments;\r\n        }\r\n        return result;\r\n    }\r\n    function asCommands(items) {\r\n        if (!items) {\r\n            return undefined;\r\n        }\r\n        return items.map(asCommand);\r\n    }\r\n    const kindMapping = new Map();\r\n    kindMapping.set('', code.CodeActionKind.Empty);\r\n    kindMapping.set(ls.CodeActionKind.QuickFix, code.CodeActionKind.QuickFix);\r\n    kindMapping.set(ls.CodeActionKind.Refactor, code.CodeActionKind.Refactor);\r\n    kindMapping.set(ls.CodeActionKind.RefactorExtract, code.CodeActionKind.RefactorExtract);\r\n    kindMapping.set(ls.CodeActionKind.RefactorInline, code.CodeActionKind.RefactorInline);\r\n    kindMapping.set(ls.CodeActionKind.RefactorRewrite, code.CodeActionKind.RefactorRewrite);\r\n    kindMapping.set(ls.CodeActionKind.Source, code.CodeActionKind.Source);\r\n    kindMapping.set(ls.CodeActionKind.SourceOrganizeImports, code.CodeActionKind.SourceOrganizeImports);\r\n    function asCodeActionKind(item) {\r\n        if (item === void 0 || item === null) {\r\n            return undefined;\r\n        }\r\n        let result = kindMapping.get(item);\r\n        if (result) {\r\n            return result;\r\n        }\r\n        let parts = item.split('.');\r\n        result = code.CodeActionKind.Empty;\r\n        for (let part of parts) {\r\n            result = result.append(part);\r\n        }\r\n        return result;\r\n    }\r\n    function asCodeActionKinds(items) {\r\n        if (items === void 0 || items === null) {\r\n            return undefined;\r\n        }\r\n        return items.map(kind => asCodeActionKind(kind));\r\n    }\r\n    function asCodeAction(item) {\r\n        if (item === void 0 || item === null) {\r\n            return undefined;\r\n        }\r\n        let result = new code.CodeAction(item.title);\r\n        if (item.kind !== void 0) {\r\n            result.kind = asCodeActionKind(item.kind);\r\n        }\r\n        if (item.diagnostics) {\r\n            result.diagnostics = asDiagnostics(item.diagnostics);\r\n        }\r\n        if (item.edit) {\r\n            result.edit = asWorkspaceEdit(item.edit);\r\n        }\r\n        if (item.command) {\r\n            result.command = asCommand(item.command);\r\n        }\r\n        return result;\r\n    }\r\n    function asCodeLens(item) {\r\n        if (!item) {\r\n            return undefined;\r\n        }\r\n        let result = new protocolCodeLens_1.default(asRange(item.range));\r\n        if (item.command) {\r\n            result.command = asCommand(item.command);\r\n        }\r\n        if (item.data !== void 0 && item.data !== null) {\r\n            result.data = item.data;\r\n        }\r\n        return result;\r\n    }\r\n    function asCodeLenses(items) {\r\n        if (!items) {\r\n            return undefined;\r\n        }\r\n        return items.map((codeLens) => asCodeLens(codeLens));\r\n    }\r\n    function asWorkspaceEdit(item) {\r\n        if (!item) {\r\n            return undefined;\r\n        }\r\n        let result = new code.WorkspaceEdit();\r\n        if (item.documentChanges) {\r\n            item.documentChanges.forEach(change => {\r\n                if (ls.CreateFile.is(change)) {\r\n                    result.createFile(_uriConverter(change.uri), change.options);\r\n                }\r\n                else if (ls.RenameFile.is(change)) {\r\n                    result.renameFile(_uriConverter(change.oldUri), _uriConverter(change.newUri), change.options);\r\n                }\r\n                else if (ls.DeleteFile.is(change)) {\r\n                    result.deleteFile(_uriConverter(change.uri), change.options);\r\n                }\r\n                else if (ls.TextDocumentEdit.is(change)) {\r\n                    result.set(_uriConverter(change.textDocument.uri), asTextEdits(change.edits));\r\n                }\r\n                else {\r\n                    console.error(`Unknown workspace edit change received:\\n${JSON.stringify(change, undefined, 4)}`);\r\n                }\r\n            });\r\n        }\r\n        else if (item.changes) {\r\n            Object.keys(item.changes).forEach(key => {\r\n                result.set(_uriConverter(key), asTextEdits(item.changes[key]));\r\n            });\r\n        }\r\n        return result;\r\n    }\r\n    function asDocumentLink(item) {\r\n        let range = asRange(item.range);\r\n        let target = item.target ? asUri(item.target) : undefined;\r\n        // target must be optional in DocumentLink\r\n        let link = new protocolDocumentLink_1.default(range, target);\r\n        if (item.data !== void 0 && item.data !== null) {\r\n            link.data = item.data;\r\n        }\r\n        return link;\r\n    }\r\n    function asDocumentLinks(items) {\r\n        if (!items) {\r\n            return undefined;\r\n        }\r\n        return items.map(asDocumentLink);\r\n    }\r\n    function asColor(color) {\r\n        return new code.Color(color.red, color.green, color.blue, color.alpha);\r\n    }\r\n    function asColorInformation(ci) {\r\n        return new code.ColorInformation(asRange(ci.range), asColor(ci.color));\r\n    }\r\n    function asColorInformations(colorInformation) {\r\n        if (Array.isArray(colorInformation)) {\r\n            return colorInformation.map(asColorInformation);\r\n        }\r\n        return undefined;\r\n    }\r\n    function asColorPresentation(cp) {\r\n        let presentation = new code.ColorPresentation(cp.label);\r\n        presentation.additionalTextEdits = asTextEdits(cp.additionalTextEdits);\r\n        if (cp.textEdit) {\r\n            presentation.textEdit = asTextEdit(cp.textEdit);\r\n        }\r\n        return presentation;\r\n    }\r\n    function asColorPresentations(colorPresentations) {\r\n        if (Array.isArray(colorPresentations)) {\r\n            return colorPresentations.map(asColorPresentation);\r\n        }\r\n        return undefined;\r\n    }\r\n    function asFoldingRangeKind(kind) {\r\n        if (kind) {\r\n            switch (kind) {\r\n                case ls.FoldingRangeKind.Comment:\r\n                    return code.FoldingRangeKind.Comment;\r\n                case ls.FoldingRangeKind.Imports:\r\n                    return code.FoldingRangeKind.Imports;\r\n                case ls.FoldingRangeKind.Region:\r\n                    return code.FoldingRangeKind.Region;\r\n            }\r\n        }\r\n        return void 0;\r\n    }\r\n    function asFoldingRange(r) {\r\n        return new code.FoldingRange(r.startLine, r.endLine, asFoldingRangeKind(r.kind));\r\n    }\r\n    function asFoldingRanges(foldingRanges) {\r\n        if (Array.isArray(foldingRanges)) {\r\n            return foldingRanges.map(asFoldingRange);\r\n        }\r\n        return void 0;\r\n    }\r\n    return {\r\n        asUri,\r\n        asDiagnostics,\r\n        asDiagnostic,\r\n        asRange,\r\n        asPosition,\r\n        asDiagnosticSeverity,\r\n        asHover,\r\n        asCompletionResult,\r\n        asCompletionItem,\r\n        asTextEdit,\r\n        asTextEdits,\r\n        asSignatureHelp,\r\n        asSignatureInformations,\r\n        asSignatureInformation,\r\n        asParameterInformations,\r\n        asParameterInformation,\r\n        asDeclarationResult,\r\n        asDefinitionResult,\r\n        asLocation,\r\n        asReferences,\r\n        asDocumentHighlights,\r\n        asDocumentHighlight,\r\n        asDocumentHighlightKind,\r\n        asSymbolInformations,\r\n        asSymbolInformation,\r\n        asDocumentSymbols,\r\n        asDocumentSymbol,\r\n        asCommand,\r\n        asCommands,\r\n        asCodeAction,\r\n        asCodeActionKind,\r\n        asCodeActionKinds,\r\n        asCodeLens,\r\n        asCodeLenses,\r\n        asWorkspaceEdit,\r\n        asDocumentLink,\r\n        asDocumentLinks,\r\n        asFoldingRangeKind,\r\n        asFoldingRange,\r\n        asFoldingRanges,\r\n        asColor,\r\n        asColorInformation,\r\n        asColorInformations,\r\n        asColorPresentation,\r\n        asColorPresentations\r\n    };\r\n}\r\nexports.createConverter = createConverter;\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nclass Delayer {\r\n    constructor(defaultDelay) {\r\n        this.defaultDelay = defaultDelay;\r\n        this.timeout = undefined;\r\n        this.completionPromise = undefined;\r\n        this.onSuccess = undefined;\r\n        this.task = undefined;\r\n    }\r\n    trigger(task, delay = this.defaultDelay) {\r\n        this.task = task;\r\n        if (delay >= 0) {\r\n            this.cancelTimeout();\r\n        }\r\n        if (!this.completionPromise) {\r\n            this.completionPromise = new Promise((resolve) => {\r\n                this.onSuccess = resolve;\r\n            }).then(() => {\r\n                this.completionPromise = undefined;\r\n                this.onSuccess = undefined;\r\n                var result = this.task();\r\n                this.task = undefined;\r\n                return result;\r\n            });\r\n        }\r\n        if (delay >= 0 || this.timeout === void 0) {\r\n            this.timeout = setTimeout(() => {\r\n                this.timeout = undefined;\r\n                this.onSuccess(undefined);\r\n            }, delay >= 0 ? delay : this.defaultDelay);\r\n        }\r\n        return this.completionPromise;\r\n    }\r\n    forceDelivery() {\r\n        if (!this.completionPromise) {\r\n            return undefined;\r\n        }\r\n        this.cancelTimeout();\r\n        let result = this.task();\r\n        this.completionPromise = undefined;\r\n        this.onSuccess = undefined;\r\n        this.task = undefined;\r\n        return result;\r\n    }\r\n    isTriggered() {\r\n        return this.timeout !== void 0;\r\n    }\r\n    cancel() {\r\n        this.cancelTimeout();\r\n        this.completionPromise = undefined;\r\n    }\r\n    cancelTimeout() {\r\n        if (this.timeout !== void 0) {\r\n            clearTimeout(this.timeout);\r\n            this.timeout = undefined;\r\n        }\r\n    }\r\n}\r\nexports.Delayer = Delayer;\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst UUID = require(\"./utils/uuid\");\r\nconst Is = require(\"./utils/is\");\r\nconst vscode_1 = require(\"vscode\");\r\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\r\nconst client_1 = require(\"./client\");\r\nfunction ensure(target, key) {\r\n    if (target[key] === void 0) {\r\n        target[key] = {};\r\n    }\r\n    return target[key];\r\n}\r\nclass ColorProviderFeature extends client_1.TextDocumentFeature {\r\n    constructor(client) {\r\n        super(client, vscode_languageserver_protocol_1.DocumentColorRequest.type);\r\n    }\r\n    fillClientCapabilities(capabilites) {\r\n        ensure(ensure(capabilites, 'textDocument'), 'colorProvider').dynamicRegistration = true;\r\n    }\r\n    initialize(capabilities, documentSelector) {\r\n        if (!capabilities.colorProvider) {\r\n            return;\r\n        }\r\n        const implCapabilities = capabilities.colorProvider;\r\n        const id = Is.string(implCapabilities.id) && implCapabilities.id.length > 0 ? implCapabilities.id : UUID.generateUuid();\r\n        const selector = implCapabilities.documentSelector || documentSelector;\r\n        if (selector) {\r\n            this.register(this.messages, {\r\n                id,\r\n                registerOptions: Object.assign({}, { documentSelector: selector })\r\n            });\r\n        }\r\n    }\r\n    registerLanguageProvider(options) {\r\n        let client = this._client;\r\n        let provideColorPresentations = (color, context, token) => {\r\n            const requestParams = {\r\n                color,\r\n                textDocument: client.code2ProtocolConverter.asTextDocumentIdentifier(context.document),\r\n                range: client.code2ProtocolConverter.asRange(context.range)\r\n            };\r\n            return client.sendRequest(vscode_languageserver_protocol_1.ColorPresentationRequest.type, requestParams, token).then(this.asColorPresentations.bind(this), (error) => {\r\n                client.logFailedRequest(vscode_languageserver_protocol_1.ColorPresentationRequest.type, error);\r\n                return Promise.resolve(null);\r\n            });\r\n        };\r\n        let provideDocumentColors = (document, token) => {\r\n            const requestParams = {\r\n                textDocument: client.code2ProtocolConverter.asTextDocumentIdentifier(document)\r\n            };\r\n            return client.sendRequest(vscode_languageserver_protocol_1.DocumentColorRequest.type, requestParams, token).then(this.asColorInformations.bind(this), (error) => {\r\n                client.logFailedRequest(vscode_languageserver_protocol_1.ColorPresentationRequest.type, error);\r\n                return Promise.resolve(null);\r\n            });\r\n        };\r\n        let middleware = client.clientOptions.middleware;\r\n        return vscode_1.languages.registerColorProvider(options.documentSelector, {\r\n            provideColorPresentations: (color, context, token) => {\r\n                return middleware.provideColorPresentations\r\n                    ? middleware.provideColorPresentations(color, context, token, provideColorPresentations)\r\n                    : provideColorPresentations(color, context, token);\r\n            },\r\n            provideDocumentColors: (document, token) => {\r\n                return middleware.provideDocumentColors\r\n                    ? middleware.provideDocumentColors(document, token, provideDocumentColors)\r\n                    : provideDocumentColors(document, token);\r\n            }\r\n        });\r\n    }\r\n    asColor(color) {\r\n        return new vscode_1.Color(color.red, color.green, color.blue, color.alpha);\r\n    }\r\n    asColorInformations(colorInformation) {\r\n        if (Array.isArray(colorInformation)) {\r\n            return colorInformation.map(ci => {\r\n                return new vscode_1.ColorInformation(this._client.protocol2CodeConverter.asRange(ci.range), this.asColor(ci.color));\r\n            });\r\n        }\r\n        return [];\r\n    }\r\n    asColorPresentations(colorPresentations) {\r\n        if (Array.isArray(colorPresentations)) {\r\n            return colorPresentations.map(cp => {\r\n                let presentation = new vscode_1.ColorPresentation(cp.label);\r\n                presentation.additionalTextEdits = this._client.protocol2CodeConverter.asTextEdits(cp.additionalTextEdits);\r\n                presentation.textEdit = this._client.protocol2CodeConverter.asTextEdit(cp.textEdit);\r\n                return presentation;\r\n            });\r\n        }\r\n        return [];\r\n    }\r\n}\r\nexports.ColorProviderFeature = ColorProviderFeature;\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vscode_1 = require(\"vscode\");\r\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\r\nclass ConfigurationFeature {\r\n    constructor(_client) {\r\n        this._client = _client;\r\n    }\r\n    fillClientCapabilities(capabilities) {\r\n        capabilities.workspace = capabilities.workspace || {};\r\n        capabilities.workspace.configuration = true;\r\n    }\r\n    initialize() {\r\n        let client = this._client;\r\n        client.onRequest(vscode_languageserver_protocol_1.ConfigurationRequest.type, (params, token) => {\r\n            let configuration = (params) => {\r\n                let result = [];\r\n                for (let item of params.items) {\r\n                    let resource = item.scopeUri !== void 0 && item.scopeUri !== null ? this._client.protocol2CodeConverter.asUri(item.scopeUri) : undefined;\r\n                    result.push(this.getConfiguration(resource, item.section !== null ? item.section : undefined));\r\n                }\r\n                return result;\r\n            };\r\n            let middleware = client.clientOptions.middleware.workspace;\r\n            return middleware && middleware.configuration\r\n                ? middleware.configuration(params, token, configuration)\r\n                : configuration(params, token);\r\n        });\r\n    }\r\n    getConfiguration(resource, section) {\r\n        let result = null;\r\n        if (section) {\r\n            let index = section.lastIndexOf('.');\r\n            if (index === -1) {\r\n                result = vscode_1.workspace.getConfiguration(undefined, resource).get(section);\r\n            }\r\n            else {\r\n                let config = vscode_1.workspace.getConfiguration(section.substr(0, index));\r\n                if (config) {\r\n                    result = config.get(section.substr(index + 1));\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            let config = vscode_1.workspace.getConfiguration(undefined, resource);\r\n            result = {};\r\n            for (let key of Object.keys(config)) {\r\n                if (config.has(key)) {\r\n                    result[key] = config.get(key);\r\n                }\r\n            }\r\n        }\r\n        if (!result) {\r\n            return null;\r\n        }\r\n        return result;\r\n    }\r\n}\r\nexports.ConfigurationFeature = ConfigurationFeature;\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst UUID = require(\"./utils/uuid\");\r\nconst Is = require(\"./utils/is\");\r\nconst vscode_1 = require(\"vscode\");\r\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\r\nconst client_1 = require(\"./client\");\r\nfunction ensure(target, key) {\r\n    if (target[key] === void 0) {\r\n        target[key] = {};\r\n    }\r\n    return target[key];\r\n}\r\nclass ImplementationFeature extends client_1.TextDocumentFeature {\r\n    constructor(client) {\r\n        super(client, vscode_languageserver_protocol_1.ImplementationRequest.type);\r\n    }\r\n    fillClientCapabilities(capabilites) {\r\n        let implementationSupport = ensure(ensure(capabilites, 'textDocument'), 'implementation');\r\n        implementationSupport.dynamicRegistration = true;\r\n        implementationSupport.linkSupport = true;\r\n    }\r\n    initialize(capabilities, documentSelector) {\r\n        if (!capabilities.implementationProvider) {\r\n            return;\r\n        }\r\n        if (capabilities.implementationProvider === true) {\r\n            if (!documentSelector) {\r\n                return;\r\n            }\r\n            this.register(this.messages, {\r\n                id: UUID.generateUuid(),\r\n                registerOptions: Object.assign({}, { documentSelector: documentSelector })\r\n            });\r\n        }\r\n        else {\r\n            const implCapabilities = capabilities.implementationProvider;\r\n            const id = Is.string(implCapabilities.id) && implCapabilities.id.length > 0 ? implCapabilities.id : UUID.generateUuid();\r\n            const selector = implCapabilities.documentSelector || documentSelector;\r\n            if (selector) {\r\n                this.register(this.messages, {\r\n                    id,\r\n                    registerOptions: Object.assign({}, { documentSelector: selector })\r\n                });\r\n            }\r\n        }\r\n    }\r\n    registerLanguageProvider(options) {\r\n        let client = this._client;\r\n        let provideImplementation = (document, position, token) => {\r\n            return client.sendRequest(vscode_languageserver_protocol_1.ImplementationRequest.type, client.code2ProtocolConverter.asTextDocumentPositionParams(document, position), token).then(client.protocol2CodeConverter.asDefinitionResult, (error) => {\r\n                client.logFailedRequest(vscode_languageserver_protocol_1.ImplementationRequest.type, error);\r\n                return Promise.resolve(null);\r\n            });\r\n        };\r\n        let middleware = client.clientOptions.middleware;\r\n        return vscode_1.languages.registerImplementationProvider(options.documentSelector, {\r\n            provideImplementation: (document, position, token) => {\r\n                return middleware.provideImplementation\r\n                    ? middleware.provideImplementation(document, position, token, provideImplementation)\r\n                    : provideImplementation(document, position, token);\r\n            }\r\n        });\r\n    }\r\n}\r\nexports.ImplementationFeature = ImplementationFeature;\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst UUID = require(\"./utils/uuid\");\r\nconst Is = require(\"./utils/is\");\r\nconst vscode_1 = require(\"vscode\");\r\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\r\nconst client_1 = require(\"./client\");\r\nfunction ensure(target, key) {\r\n    if (target[key] === void 0) {\r\n        target[key] = {};\r\n    }\r\n    return target[key];\r\n}\r\nclass TypeDefinitionFeature extends client_1.TextDocumentFeature {\r\n    constructor(client) {\r\n        super(client, vscode_languageserver_protocol_1.TypeDefinitionRequest.type);\r\n    }\r\n    fillClientCapabilities(capabilites) {\r\n        ensure(ensure(capabilites, 'textDocument'), 'typeDefinition').dynamicRegistration = true;\r\n        let typeDefinitionSupport = ensure(ensure(capabilites, 'textDocument'), 'typeDefinition');\r\n        typeDefinitionSupport.dynamicRegistration = true;\r\n        typeDefinitionSupport.linkSupport = true;\r\n    }\r\n    initialize(capabilities, documentSelector) {\r\n        if (!capabilities.typeDefinitionProvider) {\r\n            return;\r\n        }\r\n        if (capabilities.typeDefinitionProvider === true) {\r\n            if (!documentSelector) {\r\n                return;\r\n            }\r\n            this.register(this.messages, {\r\n                id: UUID.generateUuid(),\r\n                registerOptions: Object.assign({}, { documentSelector: documentSelector })\r\n            });\r\n        }\r\n        else {\r\n            const implCapabilities = capabilities.typeDefinitionProvider;\r\n            const id = Is.string(implCapabilities.id) && implCapabilities.id.length > 0 ? implCapabilities.id : UUID.generateUuid();\r\n            const selector = implCapabilities.documentSelector || documentSelector;\r\n            if (selector) {\r\n                this.register(this.messages, {\r\n                    id,\r\n                    registerOptions: Object.assign({}, { documentSelector: selector })\r\n                });\r\n            }\r\n        }\r\n    }\r\n    registerLanguageProvider(options) {\r\n        let client = this._client;\r\n        let provideTypeDefinition = (document, position, token) => {\r\n            return client.sendRequest(vscode_languageserver_protocol_1.TypeDefinitionRequest.type, client.code2ProtocolConverter.asTextDocumentPositionParams(document, position), token).then(client.protocol2CodeConverter.asDefinitionResult, (error) => {\r\n                client.logFailedRequest(vscode_languageserver_protocol_1.TypeDefinitionRequest.type, error);\r\n                return Promise.resolve(null);\r\n            });\r\n        };\r\n        let middleware = client.clientOptions.middleware;\r\n        return vscode_1.languages.registerTypeDefinitionProvider(options.documentSelector, {\r\n            provideTypeDefinition: (document, position, token) => {\r\n                return middleware.provideTypeDefinition\r\n                    ? middleware.provideTypeDefinition(document, position, token, provideTypeDefinition)\r\n                    : provideTypeDefinition(document, position, token);\r\n            }\r\n        });\r\n    }\r\n}\r\nexports.TypeDefinitionFeature = TypeDefinitionFeature;\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst UUID = require(\"./utils/uuid\");\r\nconst vscode_1 = require(\"vscode\");\r\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\r\nfunction access(target, key) {\r\n    if (target === void 0) {\r\n        return undefined;\r\n    }\r\n    return target[key];\r\n}\r\nclass WorkspaceFoldersFeature {\r\n    constructor(_client) {\r\n        this._client = _client;\r\n        this._listeners = new Map();\r\n    }\r\n    get messages() {\r\n        return vscode_languageserver_protocol_1.DidChangeWorkspaceFoldersNotification.type;\r\n    }\r\n    fillInitializeParams(params) {\r\n        let folders = vscode_1.workspace.workspaceFolders;\r\n        if (folders === void 0) {\r\n            params.workspaceFolders = null;\r\n        }\r\n        else {\r\n            params.workspaceFolders = folders.map(folder => this.asProtocol(folder));\r\n        }\r\n    }\r\n    fillClientCapabilities(capabilities) {\r\n        capabilities.workspace = capabilities.workspace || {};\r\n        capabilities.workspace.workspaceFolders = true;\r\n    }\r\n    initialize(capabilities) {\r\n        let client = this._client;\r\n        client.onRequest(vscode_languageserver_protocol_1.WorkspaceFoldersRequest.type, (token) => {\r\n            let workspaceFolders = () => {\r\n                let folders = vscode_1.workspace.workspaceFolders;\r\n                if (folders === void 0) {\r\n                    return null;\r\n                }\r\n                let result = folders.map((folder) => {\r\n                    return this.asProtocol(folder);\r\n                });\r\n                return result;\r\n            };\r\n            let middleware = client.clientOptions.middleware.workspace;\r\n            return middleware && middleware.workspaceFolders\r\n                ? middleware.workspaceFolders(token, workspaceFolders)\r\n                : workspaceFolders(token);\r\n        });\r\n        let value = access(access(access(capabilities, 'workspace'), 'workspaceFolders'), 'changeNotifications');\r\n        let id;\r\n        if (typeof value === 'string') {\r\n            id = value;\r\n        }\r\n        else if (value === true) {\r\n            id = UUID.generateUuid();\r\n        }\r\n        if (id) {\r\n            this.register(this.messages, {\r\n                id: id,\r\n                registerOptions: undefined\r\n            });\r\n        }\r\n    }\r\n    register(_message, data) {\r\n        let id = data.id;\r\n        let client = this._client;\r\n        let disposable = vscode_1.workspace.onDidChangeWorkspaceFolders((event) => {\r\n            let didChangeWorkspaceFolders = (event) => {\r\n                let params = {\r\n                    event: {\r\n                        added: event.added.map(folder => this.asProtocol(folder)),\r\n                        removed: event.removed.map(folder => this.asProtocol(folder))\r\n                    }\r\n                };\r\n                this._client.sendNotification(vscode_languageserver_protocol_1.DidChangeWorkspaceFoldersNotification.type, params);\r\n            };\r\n            let middleware = client.clientOptions.middleware.workspace;\r\n            middleware && middleware.didChangeWorkspaceFolders\r\n                ? middleware.didChangeWorkspaceFolders(event, didChangeWorkspaceFolders)\r\n                : didChangeWorkspaceFolders(event);\r\n        });\r\n        this._listeners.set(id, disposable);\r\n    }\r\n    unregister(id) {\r\n        let disposable = this._listeners.get(id);\r\n        if (disposable === void 0) {\r\n            return;\r\n        }\r\n        this._listeners.delete(id);\r\n        disposable.dispose();\r\n    }\r\n    dispose() {\r\n        for (let disposable of this._listeners.values()) {\r\n            disposable.dispose();\r\n        }\r\n        this._listeners.clear();\r\n    }\r\n    asProtocol(workspaceFolder) {\r\n        if (workspaceFolder === void 0) {\r\n            return null;\r\n        }\r\n        return { uri: this._client.code2ProtocolConverter.asUri(workspaceFolder.uri), name: workspaceFolder.name };\r\n    }\r\n}\r\nexports.WorkspaceFoldersFeature = WorkspaceFoldersFeature;\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst UUID = require(\"./utils/uuid\");\r\nconst Is = require(\"./utils/is\");\r\nconst vscode_1 = require(\"vscode\");\r\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\r\nconst client_1 = require(\"./client\");\r\nfunction ensure(target, key) {\r\n    if (target[key] === void 0) {\r\n        target[key] = {};\r\n    }\r\n    return target[key];\r\n}\r\nclass FoldingRangeFeature extends client_1.TextDocumentFeature {\r\n    constructor(client) {\r\n        super(client, vscode_languageserver_protocol_1.FoldingRangeRequest.type);\r\n    }\r\n    fillClientCapabilities(capabilites) {\r\n        let capability = ensure(ensure(capabilites, 'textDocument'), 'foldingRange');\r\n        capability.dynamicRegistration = true;\r\n        capability.rangeLimit = 5000;\r\n        capability.lineFoldingOnly = true;\r\n    }\r\n    initialize(capabilities, documentSelector) {\r\n        if (!capabilities.foldingRangeProvider) {\r\n            return;\r\n        }\r\n        const implCapabilities = capabilities.foldingRangeProvider;\r\n        const id = Is.string(implCapabilities.id) && implCapabilities.id.length > 0 ? implCapabilities.id : UUID.generateUuid();\r\n        const selector = implCapabilities.documentSelector || documentSelector;\r\n        if (selector) {\r\n            this.register(this.messages, {\r\n                id,\r\n                registerOptions: Object.assign({}, { documentSelector: selector })\r\n            });\r\n        }\r\n    }\r\n    registerLanguageProvider(options) {\r\n        let client = this._client;\r\n        let provideFoldingRanges = (document, _, token) => {\r\n            const requestParams = {\r\n                textDocument: client.code2ProtocolConverter.asTextDocumentIdentifier(document)\r\n            };\r\n            return client.sendRequest(vscode_languageserver_protocol_1.FoldingRangeRequest.type, requestParams, token).then(this.asFoldingRanges.bind(this), (error) => {\r\n                client.logFailedRequest(vscode_languageserver_protocol_1.FoldingRangeRequest.type, error);\r\n                return Promise.resolve(null);\r\n            });\r\n        };\r\n        let middleware = client.clientOptions.middleware;\r\n        return vscode_1.languages.registerFoldingRangeProvider(options.documentSelector, {\r\n            provideFoldingRanges(document, context, token) {\r\n                return middleware.provideFoldingRanges\r\n                    ? middleware.provideFoldingRanges(document, context, token, provideFoldingRanges)\r\n                    : provideFoldingRanges(document, context, token);\r\n            }\r\n        });\r\n    }\r\n    asFoldingRangeKind(kind) {\r\n        if (kind) {\r\n            switch (kind) {\r\n                case vscode_languageserver_protocol_1.FoldingRangeKind.Comment:\r\n                    return vscode_1.FoldingRangeKind.Comment;\r\n                case vscode_languageserver_protocol_1.FoldingRangeKind.Imports:\r\n                    return vscode_1.FoldingRangeKind.Imports;\r\n                case vscode_languageserver_protocol_1.FoldingRangeKind.Region:\r\n                    return vscode_1.FoldingRangeKind.Region;\r\n            }\r\n        }\r\n        return void 0;\r\n    }\r\n    asFoldingRanges(foldingRanges) {\r\n        if (Array.isArray(foldingRanges)) {\r\n            return foldingRanges.map(r => {\r\n                return new vscode_1.FoldingRange(r.startLine, r.endLine, this.asFoldingRangeKind(r.kind));\r\n            });\r\n        }\r\n        return [];\r\n    }\r\n}\r\nexports.FoldingRangeFeature = FoldingRangeFeature;\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst UUID = require(\"./utils/uuid\");\r\nconst Is = require(\"./utils/is\");\r\nconst vscode_1 = require(\"vscode\");\r\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\r\nconst client_1 = require(\"./client\");\r\nfunction ensure(target, key) {\r\n    if (target[key] === void 0) {\r\n        target[key] = {};\r\n    }\r\n    return target[key];\r\n}\r\nclass DeclarationFeature extends client_1.TextDocumentFeature {\r\n    constructor(client) {\r\n        super(client, vscode_languageserver_protocol_1.DeclarationRequest.type);\r\n    }\r\n    fillClientCapabilities(capabilites) {\r\n        let declarationSupport = ensure(ensure(capabilites, 'textDocument'), 'declaration');\r\n        declarationSupport.dynamicRegistration = true;\r\n        declarationSupport.linkSupport = true;\r\n    }\r\n    initialize(capabilities, documentSelector) {\r\n        if (!capabilities.declarationProvider) {\r\n            return;\r\n        }\r\n        if (capabilities.declarationProvider === true) {\r\n            if (!documentSelector) {\r\n                return;\r\n            }\r\n            this.register(this.messages, {\r\n                id: UUID.generateUuid(),\r\n                registerOptions: Object.assign({}, { documentSelector: documentSelector })\r\n            });\r\n        }\r\n        else {\r\n            const declCapabilities = capabilities.declarationProvider;\r\n            const id = Is.string(declCapabilities.id) && declCapabilities.id.length > 0 ? declCapabilities.id : UUID.generateUuid();\r\n            const selector = declCapabilities.documentSelector || documentSelector;\r\n            if (selector) {\r\n                this.register(this.messages, {\r\n                    id,\r\n                    registerOptions: Object.assign({}, { documentSelector: selector })\r\n                });\r\n            }\r\n        }\r\n    }\r\n    registerLanguageProvider(options) {\r\n        let client = this._client;\r\n        let provideDeclaration = (document, position, token) => {\r\n            return client.sendRequest(vscode_languageserver_protocol_1.DeclarationRequest.type, client.code2ProtocolConverter.asTextDocumentPositionParams(document, position), token).then(client.protocol2CodeConverter.asDeclarationResult, (error) => {\r\n                client.logFailedRequest(vscode_languageserver_protocol_1.DeclarationRequest.type, error);\r\n                return Promise.resolve(null);\r\n            });\r\n        };\r\n        let middleware = client.clientOptions.middleware;\r\n        return vscode_1.languages.registerDeclarationProvider(options.documentSelector, {\r\n            provideDeclaration: (document, position, token) => {\r\n                return middleware.provideDeclaration\r\n                    ? middleware.provideDeclaration(document, position, token, provideDeclaration)\r\n                    : provideDeclaration(document, position, token);\r\n            }\r\n        });\r\n    }\r\n}\r\nexports.DeclarationFeature = DeclarationFeature;\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst cp = require(\"child_process\");\r\nconst path_1 = require(\"path\");\r\nconst isWindows = (process.platform === 'win32');\r\nconst isMacintosh = (process.platform === 'darwin');\r\nconst isLinux = (process.platform === 'linux');\r\nfunction terminate(process, cwd) {\r\n    if (isWindows) {\r\n        try {\r\n            // This we run in Atom execFileSync is available.\r\n            // Ignore stderr since this is otherwise piped to parent.stderr\r\n            // which might be already closed.\r\n            let options = {\r\n                stdio: ['pipe', 'pipe', 'ignore']\r\n            };\r\n            if (cwd) {\r\n                options.cwd = cwd;\r\n            }\r\n            cp.execFileSync('taskkill', ['/T', '/F', '/PID', process.pid.toString()], options);\r\n            return true;\r\n        }\r\n        catch (err) {\r\n            return false;\r\n        }\r\n    }\r\n    else if (isLinux || isMacintosh) {\r\n        try {\r\n            var cmd = path_1.join(__dirname, 'terminateProcess.sh');\r\n            var result = cp.spawnSync(cmd, [process.pid.toString()]);\r\n            return result.error ? false : true;\r\n        }\r\n        catch (err) {\r\n            return false;\r\n        }\r\n    }\r\n    else {\r\n        process.kill('SIGKILL');\r\n        return true;\r\n    }\r\n}\r\nexports.terminate = terminate;\r\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as path from 'path';\nimport { workspace, WorkspaceFolder, extensions } from 'vscode';\n\ninterface ExperimentalConfig {\n\texperimental?: {\n\t\tcustomData?: string[];\n\t};\n}\n\nexport function getCustomDataPathsInAllWorkspaces(workspaceFolders: WorkspaceFolder[] | undefined): string[] {\n\tconst dataPaths: string[] = [];\n\n\tif (!workspaceFolders) {\n\t\treturn dataPaths;\n\t}\n\n\tworkspaceFolders.forEach(wf => {\n\t\tconst allCssConfig = workspace.getConfiguration(undefined, wf.uri);\n\t\tconst wfCSSConfig = allCssConfig.inspect<ExperimentalConfig>('css');\n\t\tif (\n\t\t\twfCSSConfig &&\n\t\t\twfCSSConfig.workspaceFolderValue &&\n\t\t\twfCSSConfig.workspaceFolderValue.experimental &&\n\t\t\twfCSSConfig.workspaceFolderValue.experimental.customData\n\t\t) {\n\t\t\tconst customData = wfCSSConfig.workspaceFolderValue.experimental.customData;\n\t\t\tif (Array.isArray(customData)) {\n\t\t\t\tcustomData.forEach(t => {\n\t\t\t\t\tif (typeof t === 'string') {\n\t\t\t\t\t\tdataPaths.push(path.resolve(wf.uri.fsPath, t));\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t});\n\n\treturn dataPaths;\n}\n\nexport function getCustomDataPathsFromAllExtensions(): string[] {\n\tconst dataPaths: string[] = [];\n\n\tfor (const extension of extensions.all) {\n\t\tconst contributes = extension.packageJSON && extension.packageJSON.contributes;\n\n\t\tif (contributes && contributes.css && contributes.css.experimental.customData && Array.isArray(contributes.css.experimental.customData)) {\n\t\t\tconst relativePaths: string[] = contributes.css.experimental.customData;\n\t\t\trelativePaths.forEach(rp => {\n\t\t\t\tdataPaths.push(path.resolve(extension.extensionPath, rp));\n\t\t\t});\n\t\t}\n\t}\n\n\treturn dataPaths;\n}\n"],"sourceRoot":""}