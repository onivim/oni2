*nvim.txt*	Nvim


			    NVIM REFERENCE MANUAL


Nvim							   *nvim* *nvim-intro*

Nvim is based on Vim by Bram Moolenaar.

If you are new to Vim, try the 30-minute tutorial: >
    :Tutor<Enter>

If you already use Vim see |nvim-from-vim| for a quickstart.

Nvim is emphatically a fork of Vim, not a clone: compatibility with Vim is
maintained where possible. See |vim_diff.txt| for the complete reference of
differences from Vim.

				      Type |gO| to see the table of contents.

==============================================================================
Transitioning from Vim				*nvim-from-vim*

1. To start the transition, create your |init.vim| (user config) file: >

    :call mkdir(stdpath('config'), 'p')
    :exe 'edit '.stdpath('config').'/init.vim'

2. Add these contents to the file: >

    set runtimepath^=~/.vim runtimepath+=~/.vim/after
    let &packpath = &runtimepath
    source ~/.vimrc

3. Restart Nvim, your existing Vim config will be loaded.

See |provider-python| and |provider-clipboard| for additional software you
might need to use some features.

Your Vim configuration might not be entirely Nvim-compatible.
See |vim-differences| for the full list of changes.

The |'ttymouse'| option, for example, was removed from Nvim (mouse support
should work without it). If you use the same |vimrc| for Vim and Nvim,
consider guarding |'ttymouse'| in your configuration like so:
>
    if !has('nvim')
        set ttymouse=xterm2
    endif
<
Conversely, if you have Nvim specific configuration items, you could do
this:
>
    if has('nvim')
        tnoremap <Esc> <C-\><C-n>
    endif
<
For a more granular approach use |exists()|:
>
    if exists(':tnoremap')
        tnoremap <Esc> <C-\><C-n>
    endif
<
Now you should be able to explore Nvim more comfortably. Check |nvim-features|
for more information.

==============================================================================
 vim:tw=78:ts=8:noet:ft=help:norl:
